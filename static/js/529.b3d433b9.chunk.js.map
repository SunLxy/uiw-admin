{"version":3,"file":"static/js/529.b3d433b9.chunk.js","mappings":"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","sources":["../../../node_modules/@babel/standalone|sync","components/Markdown/Code.tsx","webpack://website/./src/components/Footer/index.module.less?bf54","components/Footer/index.tsx","webpack://website/./src/components/Markdown/index.module.less?43b5","components/Markdown/index.tsx","../../../packages/components/src/Skeleton/index.tsx","../../../packages/utils/src/request.ts","../../../packages/utils/src/utils.ts","../../../packages/components/src/ProTable/hooks.ts","../../../packages/components/src/ProTable/BaseTable.tsx","../../../packages/components/src/ProTable/useSelections.ts","../../../packages/components/src/ProTable/widgets/Select.tsx","../../../packages/components/src/ProTable/widgets/Radio.tsx","../../../packages/components/src/ProTable/BaseForm.tsx","../../../packages/components/src/ProTable/index.tsx","../../../packages/components/src/ProTable/useTable.ts","../../../packages/authorized/src/Auth.tsx","../../../packages/components/src/ProDrawer/index.tsx","../../../packages/components/src/ProForm/hooks/store.tsx","../../../packages/components/src/ProForm/widgets/Upload/index.tsx","../../../packages/components/src/ProForm/utils/index.tsx","../../../packages/components/src/ProForm/formdom.tsx","../../../packages/components/src/ProForm/readform.tsx","../../../packages/components/src/ProForm/widgets/CheckBox/index.tsx","../../../packages/components/src/ProForm/widgets/SelectMultiple/index.tsx","../../../packages/components/src/ProForm/index.tsx","../../../packages/components/src/ProForm/widgets/index.tsx","../../../packages/components/src/ProForm/hooks/useForm.tsx"],"sourcesContent":["function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nwebpackEmptyContext.id = 61532;\nmodule.exports = webpackEmptyContext;","import React from 'react';\nimport CodePreview, { CodePreviewProps } from '@uiw/react-code-preview';\n\nexport interface CodeProps extends CodePreviewProps {\n  code: string;\n  codePen: boolean;\n  dependencies: any;\n}\n\nexport default function Code({ dependencies, codePen, ...other }: CodeProps) {\n  const props: CodePreviewProps = { ...other };\n  if (codePen) {\n    props.codeSandboxOption = {\n      files: {\n        'sandbox.config.json': {\n          content: `{\n        \"template\": \"node\",\n        \"container\": {\n          \"startScript\": \"start\",\n          \"node\": \"14\"\n        }\n      }`,\n        },\n        'public/index.html': {\n          content: `<div id=\"container\"></div>`,\n        },\n        'src/index.js': {\n          content: props.code!.replace(\n            '_mount_',\n            'document.getElementById(\"container\")',\n          ),\n        },\n        '.kktrc.js': {\n          content: `import webpack from \"webpack\";\\nimport lessModules from \"@kkt/less-modules\";\\nexport default (conf, env, options) => {\\nconf = lessModules(conf, env, options);\\nreturn conf;\\n};`,\n        },\n        'package.json': {\n          content: {\n            name: 'react-baidu-map-demo',\n            description: `百度地图 React 组件 - demo`,\n            dependencies: {\n              react: 'latest',\n              'react-dom': 'latest',\n              '@uiw/react-baidu-map': 'latest',\n            },\n            devDependencies: {\n              '@kkt/less-modules': '6.11.0',\n              kkt: '6.11.0',\n              typescript: '4.3.5',\n            },\n            license: 'MIT',\n            scripts: {\n              start: 'kkt start',\n              build: 'kkt build',\n              test: 'kkt test --env=jsdom',\n            },\n            browserslist: [\n              '>0.2%',\n              'not dead',\n              'not ie <= 11',\n              'not op_mini all',\n            ],\n          },\n        },\n      },\n    };\n  }\n  return (\n    <CodePreview\n      {...props}\n      dependencies={{ ...dependencies, React, ...React }}\n      style={{ marginBottom: 0 }}\n    />\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"footer\":\"index_footer__Fp4ea\"};","import styles from './index.module.less';\n\ntype FooterProps = {\n  editorUrl?: string;\n};\n\nconst Footer = (props: FooterProps) => {\n  const { editorUrl } = props || {};\n  return (\n    <div className={styles.footer}>\n      {editorUrl && (\n        <a\n          title=\"Editor Current Page\"\n          target=\"_blank\"\n          rel=\"noreferrer\"\n          href={`https://github.com/uiwjs/uiw-admin/edit/master${editorUrl}`}\n        >\n          编辑当前页面\n        </a>\n      )}\n      <a\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n        href=\"https://github.com/uiwjs/uiw-admin/issues/new\"\n      >\n        提交 Bug\n      </a>\n      <a\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n        href=\"https://github.com/uiwjs/uiw-admin\"\n      >\n        GitHub\n      </a>\n      <a\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n        href=\"https://github.com/kktjs/kkt\"\n      >\n        kkt\n      </a>\n      <a\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n        href=\"https://github.com/uiwjs/uiw\"\n      >\n        uiwjs\n      </a>\n    </div>\n  );\n};\n\nexport default Footer;\n","// extracted by mini-css-extract-plugin\nexport default {\"markdown\":\"index_markdown__hcQCp\"};","import { Component, Fragment } from 'react';\nimport MarkdownPreview from '@uiw/react-markdown-preview';\nimport Code from './Code';\nimport Footer from '../Footer';\nimport styles from './index.module.less';\n\ninterface MarkdownProps {}\ninterface MarkdownState {\n  mdStr: string;\n}\n\nconst getCodeStr = (data: any[] = [], code: string = '') => {\n  data.forEach((node) => {\n    if (node.type === 'text') {\n      code += node.value;\n    } else if (node.children && Array.isArray(node.children)) {\n      code += getCodeStr(node.children);\n    }\n  });\n  return code;\n};\n\n/**\n * 代码注释参数\n *\n * ```md\n * <!--rehype:bgWhite=true&codeSandbox=true&noScroll=true&codePen=true-->\n * ```\n * 参数用英文逗号隔开\n *\n * - `bgWhite` 设置代码预览背景白色，否则为格子背景。\n * - `noCode` 不显示代码编辑器。\n * - `noPreview` 不显示代码预览效果。\n * - `noScroll` 预览区域不显示滚动条。\n * - `codePen` 显示 Codepen 按钮，要特别注意 `包导入的问题`，实例中的 `import` 主要用于 Codepen 使用。\n */\nexport interface OptionsMarkdown {\n  bgWhite?: boolean;\n  noCode?: boolean;\n  noPreview?: boolean;\n  noScroll?: boolean;\n  codePen?: boolean;\n}\n\nexport default class Markdown extends Component<MarkdownProps, MarkdownState> {\n  constructor(props: MarkdownProps) {\n    super(props);\n    this.state = {\n      mdStr: '',\n    };\n  }\n  editorUrl?: string;\n  getMdStr?: any;\n  dependencies?: any;\n  componentDidMount() {\n    if (this.getMdStr) {\n      this.getMdStr().then((str: any) => {\n        this.setState({\n          mdStr: str.default || str,\n        });\n      });\n    }\n  }\n  render() {\n    return (\n      <Fragment>\n        <MarkdownPreview\n          style={{ padding: '20px 26px' }}\n          source={this.state.mdStr}\n          className={styles.markdown}\n          components={{\n            /**\n             * bgWhite 设置代码预览背景白色，否则为格子背景。\n             * noCode 不显示代码编辑器。\n             * noPreview 不显示代码预览效果。\n             * noScroll 预览区域不显示滚动条。\n             * codePen 显示 Codepen 按钮，要特别注意 包导入的问题，实例中的 import 主要用于 Codepen 使用。\n             */\n            code: ({ inline, node, ...props }) => {\n              const {\n                noPreview,\n                noScroll,\n                bgWhite,\n                noCode,\n                codePen,\n                codeSandboxOption,\n              } = props as any;\n              if (inline) {\n                return <code {...props} />;\n              }\n              const config = {\n                noPreview,\n                noScroll,\n                bgWhite,\n                noCode,\n                codePen,\n                codeSandboxOption,\n              } as any;\n              if (\n                Object.keys(config).filter((name) => config[name] !== undefined)\n                  .length === 0\n              ) {\n                return <code {...props} />;\n              }\n              return (\n                <Code\n                  code={getCodeStr(node.children)}\n                  dependencies={this.dependencies}\n                  {...{\n                    noPreview,\n                    noScroll,\n                    bgWhite,\n                    noCode,\n                    codePen,\n                    codeSandboxOption,\n                  }}\n                />\n              );\n            },\n          }}\n        />\n        <Footer editorUrl={this.editorUrl} />\n      </Fragment>\n    );\n  }\n}\n","import React from 'react';\nimport { Loader } from 'uiw';\n\ninterface SkeletonProps {\n  children: React.ReactNode;\n  loading?: boolean;\n  style?: React.CSSProperties\n}\n\nconst Skeleton: React.FC<SkeletonProps> = ({ children, style, loading = false, ...others }) => {\n  return (\n    <Loader\n      loading={loading}\n      style={{ display: 'block',  ...style}}\n      // fullscreen={true}\n      bgColor=\"rgba(255, 255, 255, 0.4)\"\n      {...others}\n    >\n      <>{children}</>\n    </Loader>\n  );\n};\n\nexport default Skeleton;\n","import axios, { AxiosRequestConfig } from 'axios';\n// import history from '../routes/history';\nimport { splitUrl } from './utils';\nimport { getCookie } from './cookies';\nimport qs from 'qs';\n// Get the current location.\n// const location = history.location;\nconst codeMessage = {\n  200: '服务器成功返回请求的数据。',\n  201: '新建或修改数据成功。',\n  202: '一个请求已经进入后台排队（异步任务）。',\n  204: '删除数据成功。',\n  400: '发出的请求有错误，服务器没有进行新建或修改数据的操作。',\n  401: '用户没有权限（令牌、用户名、密码错误）。',\n  403: '用户得到授权，但是访问是被禁止的。',\n  404: '发出的请求针对的是不存在的记录，服务器没有进行操作。',\n  406: '请求的格式不可得。',\n  410: '请求的资源被永久删除，且不会再得到的。',\n  422: '当创建一个对象时，发生一个验证错误。',\n  500: '服务器发生错误，请检查服务器。',\n  502: '网关错误。',\n  503: '服务不可用，服务器暂时过载或维护。',\n  504: '网关超时。',\n};\n\nexport interface Options extends AxiosRequestConfig {\n  /** swr_Rest_Time 用于重新触发事件使用 */\n  body?: any & { swr_Rest_Time?: number | string };\n  /** 数据格式  **/\n  requestType?: 'form' | 'json' | 'urlencoded';\n}\n\n/**\n * Requests a URL, returning a promise.\n *\n * @param  {string} url       The URL we want to request\n * @param  {object} [options] The options we want to pass to \"fetch\"\n * @return {object}           An object containing either \"data\" or \"err\"\n */\nexport default function request(url: string, options: Options = {}) {\n  const method = options.method || 'GET';\n  const { body, headers, requestType = 'json', ...rest } = options;\n  // 删除swr_Rest_Time\n  body?.swr_Rest_Time && delete body.swr_Rest_Time;\n  const newOptions: Options = {\n    ...rest,\n    url,\n    method,\n    data: body,\n  };\n\n  if (requestType === 'json') {\n    newOptions.headers = {\n      'Content-Type': 'application/json; charset=utf-8',\n      Accept: 'application/json',\n      ...(headers || {}),\n    };\n    newOptions.data = JSON.stringify(body || {});\n  } else if (requestType === 'form') {\n    const newFormData = new FormData();\n    Object.entries(body || {}).forEach(([key, value]: [string, any]) => {\n      newFormData.append(key, value);\n    });\n    newOptions.headers = {\n      Accept: 'application/json',\n      ...(headers || {}),\n    };\n    newOptions.data = newFormData;\n  } else if (requestType === 'urlencoded') {\n    newOptions.headers = {\n      'Content-Type': 'application/x-www-form-urlencoded; charset=utf-8',\n      Accept: 'application/json',\n      ...(headers || {}),\n    };\n    newOptions.data = qs.stringify(body || {}, { arrayFormat: 'repeat' });\n  }\n\n  if (/(GET)/.test(method)) {\n    newOptions.url = splitUrl(url, { ...body });\n    delete newOptions.body;\n  }\n\n  // 加载 token\n  let token = sessionStorage.getItem('token') || localStorage.getItem('token');\n\n  if (token) {\n    newOptions.headers = {\n      ...(newOptions.headers || {}),\n      token,\n    };\n  }\n\n  return axios\n    .request(newOptions)\n    .then((response) => {\n      return response.data;\n    })\n    .catch((err) => {\n      const response = err.response;\n      if (response.status >= 200 && response.status < 300) {\n        return response;\n      }\n      const status = response.status;\n      const errortext = (codeMessage as any)[status] || response.statusText;\n      // Notification.error({\n      //   message: '错误提示：',\n      //   description: (response.data && response.data.info) || '没有错误提示',\n      // });\n      const error = new Error(errortext);\n      error.name = response.status;\n      // error.response = response;\n      if (response.data) {\n        return response.data;\n      }\n      throw error;\n    });\n}\n","// 拼接url参数\nexport function splitUrl(url: string, options: { [x: string]: any }) {\n  let urlNew = url;\n  const paramsArray: string[] = [];\n  // Object.keys(options).forEach(key => paramsArray.push(key + '=' + options[key]));\n  Object.keys(options).forEach((key) =>\n    paramsArray.push(`${key}=${options[key]}`),\n  );\n  if (Object.keys(options).length === 0) {\n    return url;\n  }\n  if (/\\?/.test(urlNew) === false) {\n    urlNew = `${urlNew}?${paramsArray.join('&')}`;\n  } else {\n    urlNew += `&${paramsArray.join('&')}`;\n  }\n  return urlNew;\n}\n","import { useContext, createContext } from 'react';\n\nexport const StoreCtx = createContext({});\n\nexport const useStore = () => {\n  return useContext(StoreCtx);\n};\n","import React, {\n  useState,\n  useEffect,\n  useCallback,\n  useRef,\n  useMemo,\n} from 'react';\nimport useSWR from 'swr';\nimport { Table, Pagination, Checkbox, Radio } from 'uiw';\nimport { request } from '@uiw-admin/utils';\nimport { useStore } from './hooks';\nimport { Fields, BaseTableProps, FormCol } from './types';\nimport useSelections from './useSelections';\n\nconst BaseTable: React.FC<BaseTableProps> = ({\n  style,\n  columns,\n  rowSelection = {},\n  onPageChange: pageChange,\n  scroll = {},\n  ...tableProps\n}) => {\n  const [pageIndex, setPageIndex] = useState(1);\n\n  const [prevData, setPrevData] = useState({\n    data: [],\n    total: 0,\n  });\n\n  const store = useStore();\n\n  let {\n    formatData,\n    updateStore,\n    query,\n    key,\n    searchValues,\n    SWRConfiguration = {},\n  } = store as any;\n  const { selectKey, type = 'checkbox', defaultSelected = [] } = rowSelection;\n  const { x } = scroll;\n  const isCheckbox = type === 'checkbox';\n\n  // columns列和标题是否居中\n  const defaultColumns = () => {\n    return columns.map((item) => {\n      const { align = 'left', render } = item;\n      return {\n        ...item,\n        // 标题样式\n        style: { textAlign: align },\n        // 列内容\n        render: render\n          ? render\n          : (text: string) => <div style={{ textAlign: align }}>{text}</div>,\n      };\n    });\n  };\n\n  // 表单默认值\n  const defaultValues = useMemo(() => {\n    const defaultSearchValues: Fields = {};\n    columns.forEach((col) => {\n      if (col?.props?.initialValue) {\n        const name = col.key || col.props.key;\n        defaultSearchValues[name] = col.props.initialValue;\n      }\n    });\n    return defaultSearchValues;\n  }, [JSON.stringify(columns)]);\n\n  // 是否首次调取数据\n  const isFirstMountRef = useRef(false);\n  // 格式化接口查询参数\n  const formatQuery = useCallback(() => {\n    if (query) {\n      return query(\n        pageIndex,\n        isFirstMountRef.current === false ? defaultValues : searchValues,\n      );\n    } else {\n      // 默认传参\n      return {\n        page: 1,\n        pageSize: 10,\n      };\n    }\n  }, [pageIndex, JSON.stringify(defaultValues), JSON.stringify(searchValues)]);\n\n  const pageSize = formatQuery().pageSize || 10;\n  // 调接口\n  const { data, isValidating, mutate } = useSWR(\n    [key, { method: 'POST', body: formatQuery() }],\n    request,\n    {\n      revalidateOnFocus: false,\n      revalidateOnMount: false,\n      ...SWRConfiguration,\n    },\n  );\n\n  useEffect(() => {\n    // 第一次加载\n    mutate(false);\n  }, [mutate]);\n\n  // table数据\n  const tableData =\n    formatData && data ? formatData(data).data : data?.data || prevData?.data;\n  const selection = useSelections<any>(\n    // 有枚举值的话  设置枚举值\n    selectKey\n      ? tableData\n        ? tableData.map((itm: any) => itm[selectKey])\n        : []\n      : [],\n    defaultSelected,\n    type === 'radio',\n  );\n  // 查询\n  // const onSearch = async () => {\n  //   await setPageIndex(1);\n  //   form.current.onSubmit()\n  //   mutate(false);\n  // };\n  // 分页\n  const onPageChange = useCallback(\n    async (page) => {\n      if (pageChange) {\n        pageChange(page);\n      }\n      await setPageIndex(page);\n      mutate(false);\n    },\n    [setPageIndex, pageChange],\n  );\n  useEffect(() => {\n    // 获取表单默认值\n    const defaultSearchValues: Fields = {};\n    columns.forEach((col) => {\n      if (col?.props?.initialValue) {\n        const name = col.key || col.props.key;\n        defaultSearchValues[name] = col.props.initialValue;\n      }\n    });\n    const stores: any = {\n      data: data?.data,\n      total: data?.total,\n      loading: isValidating,\n      // onSearch,\n      selection,\n      pageIndex,\n      setPageIndex,\n      mutate,\n    };\n\n    if (!isFirstMountRef.current) {\n      isFirstMountRef.current = true;\n      // 默认表单值\n      stores.searchValues = defaultSearchValues;\n    }\n    updateStore(stores);\n\n    // 上一次请求数据\n    if (data) {\n      setPrevData(formatData ? formatData(data) : data);\n    }\n  }, [\n    JSON.stringify(data),\n    isValidating,\n    JSON.stringify(columns),\n    pageIndex,\n    JSON.stringify(selection),\n    setPageIndex,\n    mutate,\n  ]);\n\n  const selectionCol = [\n    {\n      title: isCheckbox\n        ? () => {\n            return (\n              <Checkbox\n                checked={selection.allSelected as any}\n                onClick={() => {\n                  selection.toggleAll();\n                }}\n              />\n            );\n          }\n        : null,\n      key: 'checked',\n      width: 35,\n      render: (\n        text: any,\n        key: any,\n        rowData: { [x: string]: any; checked: boolean | undefined },\n      ) => {\n        if (!selectKey) return null;\n        return isCheckbox ? (\n          <Checkbox\n            checked={selection.isSelected(rowData[selectKey])}\n            onClick={() => {\n              selection.toggle(rowData[selectKey]);\n            }}\n          />\n        ) : (\n          <Radio\n            onChange={() => {\n              selection.toggle(rowData[selectKey]);\n            }}\n            checked={selection.isSelected(rowData[selectKey])}\n          />\n        );\n      },\n    },\n  ] as FormCol;\n  return (\n    <div style={{ overflow: x ? 'scroll' : 'hidden' }}>\n      <div style={{ width: x || '100%' }}>\n        <Table\n          // 判断是否添加选择框\n          columns={\n            selectKey ? selectionCol.concat(defaultColumns()) : defaultColumns()\n          }\n          data={tableData}\n          footer={\n            tableData &&\n            tableData.length > 0 && (\n              <Pagination\n                current={pageIndex}\n                pageSize={pageSize}\n                total={\n                  formatData && data\n                    ? formatData(data).total\n                    : data?.total || prevData?.total\n                }\n                divider\n                onChange={(page) => {\n                  onPageChange(page);\n                }}\n              />\n            )\n          }\n          {...tableProps}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default BaseTable;\n","/* eslint-disable no-unused-vars */\nimport { useMemo, useState } from 'react';\n\nexport type UseSelections<T> = {\n  selected: T[];\n  noneSelected: Boolean;\n  allSelected: Boolean;\n  partiallySelected: Boolean;\n  setSelected: (value: T[]) => void;\n  isSelected: (value: T) => boolean;\n  select: (item: T) => void;\n  unSelect: (item: T) => void;\n  toggle: (value: T) => void;\n  selectAll: () => void;\n  unSelectAll: () => void;\n  toggleAll: () => void;\n};\n\nexport default function useSelections<T>(\n  items: T[],\n  defaultSelected: T[] = [],\n  isSingle: Boolean = false,\n): UseSelections<T> {\n  const [selected, setSelected] = useState<T[]>(defaultSelected);\n\n  const selectedSet = useMemo(() => new Set(selected), [selected]);\n\n  const isSelected = (item: T) => selectedSet.has(item);\n\n  const unSelectAll = () => {\n    items.forEach((o) => {\n      selectedSet.delete(o);\n    });\n    setSelected(Array.from(selectedSet));\n  };\n\n  const select = (item: T) => {\n    if (isSingle) {\n      unSelectAll();\n    }\n    selectedSet.add(item);\n    return setSelected(Array.from(selectedSet));\n  };\n\n  const unSelect = (item: T) => {\n    selectedSet.delete(item);\n    return setSelected(Array.from(selectedSet));\n  };\n\n  const toggle = (item: T) => {\n    if (isSelected(item)) {\n      unSelect(item);\n    } else {\n      select(item);\n    }\n  };\n\n  const selectAll = () => {\n    items.forEach((o) => {\n      selectedSet.add(o);\n    });\n    setSelected(Array.from(selectedSet));\n  };\n\n  const noneSelected = useMemo(\n    () => items.every((o) => !selectedSet.has(o)),\n    [items, selectedSet],\n  );\n\n  const allSelected = useMemo(\n    () => items.every((o) => selectedSet.has(o)) && !noneSelected,\n    [items, selectedSet, noneSelected],\n  );\n\n  const partiallySelected = useMemo(\n    () => !noneSelected && !allSelected,\n    [noneSelected, allSelected],\n  );\n\n  const toggleAll = () => (allSelected ? unSelectAll() : selectAll());\n\n  return {\n    selected,\n    noneSelected,\n    allSelected,\n    partiallySelected,\n    setSelected,\n    isSelected,\n    select: select,\n    unSelect: unSelect,\n    toggle: toggle,\n    selectAll: selectAll,\n    unSelectAll: unSelectAll,\n    toggleAll: toggleAll,\n  };\n}\n","import React from 'react';\nimport { Select } from 'uiw';\n\ninterface FormSelectProps {\n  option?: HTMLOptionElement[];\n}\n\nconst FormSelect: React.FC<FormSelectProps> = ({ option, ...others }) => {\n  return (\n    <Select {...others}>\n      <Select.Option value=\"\">请选择</Select.Option>\n      {option &&\n        option.map((opt) => (\n          <Select.Option key={opt.value} value={opt.value}>\n            {opt.label}\n          </Select.Option>\n        ))}\n    </Select>\n  );\n};\n\nexport default FormSelect;\n","import React from 'react';\nimport { Radio, RadioGroup } from 'uiw';\n\ninterface FormSelectProps {\n  option?: HTMLOptionElement[];\n}\n\nconst FormRadio: React.FC<FormSelectProps> = ({ option, ...others }) => {\n  return (\n    <RadioGroup {...others}>\n      {option &&\n        option.map((opt) => (\n          <Radio key={opt.value} value={opt.value}>\n            {opt.label}\n          </Radio>\n        ))}\n    </RadioGroup>\n  );\n};\n\nexport default FormRadio;\n","import React, { useEffect, useMemo, useRef } from 'react';\nimport {\n  Button,\n  Input,\n  Form,\n  Row,\n  Col,\n  Checkbox,\n  Switch,\n  Textarea,\n  DateInput,\n  TimePicker,\n  MonthPicker,\n  FormSubmitProps,\n  SearchSelect,\n} from 'uiw';\nimport Select from './widgets/Select';\nimport FormRadio from './widgets/Radio';\nimport { useStore } from './hooks';\nimport { BaseFormProps, Fields } from './types';\n\nconst widgets = {\n  input: Input,\n  radio: FormRadio,\n  checkbox: Checkbox,\n  switch: Switch,\n  select: Select,\n  searchSelect: SearchSelect,\n  textarea: Textarea,\n  dateInput: DateInput,\n  timePicker: TimePicker,\n  monthPicker: MonthPicker,\n};\n\nconst BaseForm: React.FC<BaseFormProps> = (props) => {\n  const store = useStore();\n\n  const formRef = useRef<any>();\n\n  let { updateStore, updateForm } = store as any;\n\n  const { columns, searchBtns, onBeforeSearch } = props;\n  // 获取表单配置\n  const getFormFields = useMemo(() => {\n    const fields: Fields = {};\n    columns.forEach((col) => {\n      if (col.props && Object.keys(col.props).length > 0) {\n        const { widgetProps, key, widget, label, initialValue, ...otherProps } =\n          col.props;\n        const name = key || col.key;\n        const Widget = widgets[widget];\n        fields[name] = {\n          label: label || col.title,\n          children: <Widget {...widgetProps} />,\n          ...otherProps,\n          initialValue,\n        };\n      }\n    });\n\n    return fields;\n  }, [JSON.stringify(columns)]);\n\n  // 查询\n  const onFormSearch = ({ initial, current }: FormSubmitProps) => {\n    updateStore({\n      searchValues: {\n        ...initial,\n        ...current,\n      },\n    });\n    // onSearch();\n  };\n  useEffect(() => {\n    // 存储表单组件实例\n    if (formRef.current) {\n      updateForm(formRef);\n    }\n  }, [formRef]);\n\n  const itemsLength = Object.keys(getFormFields).length;\n  const emptyLength = 4 - (itemsLength % 5);\n\n  return (\n    <Form\n      style={{ background: '#fff', paddingBottom: 10, marginBottom: 14 }}\n      resetOnSubmit={false}\n      onSubmit={({ initial, current }) => {\n        // 搜索前校验\n        if (onBeforeSearch) {\n          if (onBeforeSearch?.({ initial, current })) {\n            onFormSearch({ initial, current });\n          }\n        } else {\n          onFormSearch({ initial, current });\n        }\n      }}\n      onSubmitError={(error) => {\n        if (error.filed) {\n          return { ...error.filed };\n        }\n        return null;\n      }}\n      ref={formRef}\n      fields={getFormFields}\n    >\n      {({ fields, state, canSubmit, resetForm }) => {\n        return (\n          <div>\n            <Row gutter={12}>\n              {Object.keys(fields).map((key) => (\n                <Col key={key} fixed style={{ width: '20%' }}>\n                  {fields[key]}\n                </Col>\n              ))}\n              {Array(emptyLength)\n                .fill('')\n                .map((value, index) => (\n                  <Col key={index.toString()} fixed style={{ width: '20%' }} />\n                ))}\n              <Col\n                align=\"middle\"\n                style={{ textAlign: 'right', marginRight: 14 }}\n              >\n                {searchBtns ? (\n                  searchBtns.map((btn: any, idx) =>\n                    btn?.render ? (\n                      <React.Fragment key={idx.toString()}>\n                        {btn.render}\n                      </React.Fragment>\n                    ) : (\n                      <Button\n                        key={idx.toString()}\n                        style={{ marginRight: 5 }}\n                        {...btn}\n                      >\n                        {btn.label}\n                      </Button>\n                    ),\n                  )\n                ) : (\n                  <Button type=\"primary\" htmlType=\"submit\">\n                    查询\n                  </Button>\n                )}\n              </Col>\n            </Row>\n          </div>\n        );\n      }}\n    </Form>\n  );\n};\n\nexport default BaseForm;\n","import React, { useMemo } from 'react';\nimport { Button } from 'uiw';\nimport Skeleton from '../Skeleton';\nimport Table from './BaseTable';\nimport BaseForm from './BaseForm';\nimport { StoreCtx } from './hooks';\nimport { ProtableProps } from './types';\n\nconst ProTabel: React.FC<ProtableProps> = (props) => {\n  const {\n    table,\n    columns,\n    operateButtons = [],\n    searchBtns,\n    onBeforeSearch,\n    ...tableProps\n  } = props;\n  const {\n    key,\n    onReset,\n    onRefersh,\n    updateStore,\n    formatData,\n    query,\n    searchValues,\n    loading,\n    onSearch,\n    SWRConfiguration,\n    selection,\n    pageIndex,\n    form,\n    updateForm,\n    setPageIndex,\n    mutate,\n  } = table;\n  const store = useMemo(\n    () => ({\n      data: [],\n      onReset,\n      onRefersh,\n      key,\n      updateStore,\n      formatData,\n      query,\n      searchValues,\n      onSearch,\n      SWRConfiguration,\n      selection,\n      pageIndex,\n      form,\n      updateForm,\n      setPageIndex,\n      mutate,\n    }),\n    [JSON.stringify(table)],\n  );\n  return (\n    <StoreCtx.Provider value={{ ...store }}>\n      <Skeleton loading={loading}>\n        {/* 表单查询区域 */}\n        <BaseForm\n          columns={columns}\n          searchBtns={searchBtns}\n          onBeforeSearch={onBeforeSearch}\n        />\n        {/* 操作区域 */}\n        {operateButtons.length > 0 && (\n          <div style={{ background: '#fff', padding: 10 }}>\n            {operateButtons.map((btn: any, idx: number) =>\n              btn?.render ? (\n                <React.Fragment key={idx.toString()}>\n                  {btn.render}\n                </React.Fragment>\n              ) : (\n                <Button key={idx.toString()} {...btn}>\n                  {btn.label}\n                </Button>\n              ),\n            )}\n          </div>\n        )}\n        {/* 列表组件 */}\n        <Table columns={columns} {...tableProps} />\n      </Skeleton>\n    </StoreCtx.Provider>\n  );\n};\n\nexport default ProTabel;\n","import { useState } from 'react';\nimport { Params, useTableData, stateParams } from './types';\n\nconst useTable = (key: string, params: Params = {}): useTableData => {\n  const { formatData, query, SWRConfiguration } = params;\n\n  // 表单组件实例\n  const [form, setForm] = useState<any>(null);\n\n  const [state, setState] = useState<any>({\n    // 当前页码\n    pageIndex: 1,\n    // 总页数\n    total: 1,\n    // 当前table数据源\n    data: [],\n    // 表单值\n    searchValues: {},\n    // 加载状态\n    loading: false,\n    // 选择框属性\n    setPageIndex: () => null,\n    mutate: () => null,\n    selection: {\n      selected: [],\n      noneSelected: false,\n      allSelected: false,\n      partiallySelected: false,\n      setSelected: () => null,\n      isSelected: () => null,\n      select: () => null,\n      unSelect: () => null,\n      toggle: () => null,\n      selectAll: () => null,\n      unSelectAll: () => null,\n      toggleAll: () => null,\n    },\n  });\n\n  // 更新store\n  const updateStore = (datas: stateParams) => {\n    setState({\n      ...state,\n      ...datas,\n    });\n  };\n\n  // 更新form\n  const updateForm = (form: any) => {\n    setForm(form);\n  };\n  // 重置\n  const onReset = async () => {\n    await form.current.resetForm();\n    const isNoError = await form.current.onSubmit();\n    if (isNoError) {\n      await state.setPageIndex(1);\n      state.mutate(false);\n    }\n  };\n  // 刷新当前页数据\n  const onRefersh = async () => {\n    state.mutate(false);\n  };\n  // 点击查询\n  const onSearch = async () => {\n    const isNoError = await form.current.onSubmit();\n    if (isNoError) {\n      await state.setPageIndex(1);\n      state.mutate(false);\n    }\n  };\n\n  return {\n    key,\n    // 重置\n    onReset,\n    // 刷新当前页数据\n    onRefersh,\n    // 点击查询\n    onSearch,\n    formatData,\n    query,\n    updateStore,\n    SWRConfiguration,\n    form,\n    updateForm,\n    ...state,\n  };\n};\n\nexport default useTable;\n","import React from 'react';\n\nexport const getAuthPath = (path?: string): boolean => {\n  // @ts-ignore\n  if (AUTH) {\n    let authList: string[] = [];\n\n    let authStr = sessionStorage.getItem('auth');\n    // @ts-ignore\n    if (STORAGE === 'local') {\n      authStr = localStorage.getItem('auth');\n    }\n    if (authStr) {\n      authList = JSON.parse(authStr);\n    }\n    const fig = authList.find((item) => item === path);\n    return !!fig;\n  }\n  return true;\n};\n\n/** 校验按钮权限 */\nexport interface AuthBtnProps {\n  /** 路径 */\n  path?: string;\n  /** 禁用 状态 展示   适用于 存在 disabled 属性的组件  */\n  disabled?: boolean;\n  children: JSX.Element;\n}\nexport const AuthBtn = (props: AuthBtnProps) => {\n  const { path, disabled, children } = props;\n  // @ts-ignore\n  if (AUTH) {\n    const fig = getAuthPath(path);\n    if (fig) {\n      return children;\n    } else if (disabled && React.isValidElement(children)) {\n      return React.cloneElement(children, { disabled } as any);\n    }\n    return <React.Fragment />;\n  }\n  return children;\n};\n","import React, { memo } from 'react';\nimport { Drawer, Button, DrawerProps, ButtonProps } from 'uiw';\nimport { AuthBtn, AuthBtnProps } from '@uiw-admin/authorized';\n\n/**\n * ProDrawer 组件继承于https://uiwjs.github.io/#/components/drawer\n * @param {boolean} visible 显示隐藏\n * @param {string} title 标题\n * @param {()=>void} onClose 关闭事件\n * @param {number} width Drawer宽\n * @param {Array<{label?:string,onPress?:()=>void,show?:boolean,loading?:boolean}>} buttons 按钮集合(label:\"文本\",onPress:点击事件,show:是否展示)\n * @param {React.ReactNode} children\n * @returns\n */\n\ninterface ButtonItemsProps extends ButtonProps {\n  label?: string;\n  show?: boolean;\n  path?: string;\n  disabled?: boolean;\n}\n\ninterface ProDrawerProps extends DrawerProps {\n  visible: boolean;\n  title?: string;\n  onClose?: any;\n  width?: number;\n  buttons?: Array<ButtonItemsProps>;\n  children?: React.ReactNode;\n}\n\n// button权限\nfunction BtnAuth({ path, children, ...others }: AuthBtnProps) {\n  if (path)\n    return (\n      <AuthBtn path={path} {...others}>\n        {children}\n      </AuthBtn>\n    );\n  return <>{children}</>;\n}\n\nfunction ProDrawer(props: ProDrawerProps) {\n  const {\n    visible,\n    title = '',\n    onClose = null,\n    width = 800,\n    buttons = [],\n    children,\n    ...others\n  } = props;\n  return (\n    <Drawer\n      title={title}\n      isOpen={visible}\n      onClose={onClose && onClose}\n      size={width}\n      bodyStyle={{ padding: '0 10px 45px 10px' }}\n      footer={buttons.map(\n        (\n          { label = '', show = true, path, disabled = false, ...others }: any,\n          idx,\n        ) =>\n          show && (\n            <BtnAuth key={idx} path={path} disabled={disabled}>\n              <Button {...others}>{label}</Button>\n            </BtnAuth>\n          ),\n      )}\n      {...others}\n    >\n      {children}\n    </Drawer>\n  );\n}\n\nexport default memo(ProDrawer);\n","import { useContext, createContext } from 'react';\n\nexport const StoreCtx = createContext({});\n\nexport const useStore = () => {\n  return useContext(StoreCtx);\n};\n","import React from 'react';\nimport { FileInput, Icon, Modal, Button, FileInputListProps } from 'uiw';\n\nconst Upload = ({\n  uploadType,\n  value,\n  readonly = false,\n  maxNumber,\n  ...others\n}: FileInputListProps) => {\n  const [visible, setVisible] = React.useState(false);\n  const [src, setSrc] = React.useState('');\n\n  const renderBtn = () => {\n    if (readonly) return null;\n    if (uploadType === 'card') return <Icon type=\"plus\" />;\n    if (uploadType === 'picture' || uploadType === 'text')\n      return <Button type=\"primary\">新增</Button>;\n    return null;\n  };\n\n  return (\n    <React.Fragment>\n      <FileInput\n        uploadType={uploadType}\n        readonly={readonly}\n        value={value}\n        maxNumber={maxNumber}\n        onPreview={(file: { [key: string]: any }) => {\n          setSrc(file?.dataURL);\n          setVisible(true);\n        }}\n        {...others}\n      >\n        {renderBtn()}\n      </FileInput>\n      {/* 预览 */}\n      <Modal\n        isOpen={visible}\n        onClosed={() => setVisible(false)}\n        width={600}\n        confirmButtonProps={{ style: { display: 'none' } }}\n      >\n        <img\n          crossOrigin=\"anonymous\"\n          src={src}\n          alt=\"\"\n          style={{ width: '100%', height: '100%' }}\n        />\n      </Modal>\n    </React.Fragment>\n  );\n};\n\nexport default Upload;\n","import { FormItemsOptionsProps, rulesProps } from '../type';\nimport { formatter, Rate } from 'uiw';\nimport React from 'react';\nimport Upload from '../widgets/Upload';\n\n/**\n * 只读模式表单项 value转换\n * @param type  表单项类型\n * @param initialValue 默认值\n * @param option 表单项option\n * @returns\n */\n\n// 目前只处理以下类型的initialValue,其余默认为传入的initialValue\nexport function getReadValue(\n  type: string | any,\n  initialValue: any | any[],\n  option: FormItemsOptionsProps[],\n  widgetProps: any,\n) {\n  let content: string | number | React.ReactNode = '';\n  if (type === 'radio' || type === 'searchSelect' || type === 'select') {\n    let value =\n      option.filter(\n        (itm: FormItemsOptionsProps) => itm.value === initialValue,\n      ) || [];\n    if (value.length > 0) content = value[0].label;\n  } else if (type === 'checkbox') {\n    for (const itm of option as any) {\n      if (initialValue.includes(itm.value)) content += `${itm.label}`;\n    }\n  } else if (type === 'switch') {\n    content = initialValue ? '是' : '否';\n  } else if (type === 'timePicker') {\n    content = initialValue && formatter('HH:mm:ss', new Date(initialValue));\n  } else if (type === 'monthPicker') {\n    content = initialValue && formatter('YYYY-MM', new Date(initialValue));\n  } else if (type === 'dateInput') {\n    content =\n      initialValue &&\n      formatter(widgetProps?.format || 'YYYY-MM-DD', new Date(initialValue));\n  } else if (type === 'upload') {\n    const uploadProps = {\n      value: initialValue,\n      uploadType: widgetProps?.uploadType,\n      readonly: true,\n      showFileIcon: {\n        showPreviewIcon: true,\n        showRemoveIcon: false,\n      },\n      ...widgetProps,\n    };\n    content = <Upload {...uploadProps} />;\n  } else if (type === 'selectMultiple') {\n    const contentList =\n      (initialValue &&\n        initialValue.length > 0 &&\n        initialValue.map((item: FormItemsOptionsProps) => item.label)) ||\n      [];\n    content = contentList.join(';');\n  } else if (type === 'rate') {\n    console.log('initialValue', initialValue);\n    content = <Rate value={initialValue} readOnly />;\n  } else {\n    // initialValue 支持 string number 或者 自定义\n    content =\n      typeof initialValue === 'string' ||\n      typeof initialValue === 'number' ||\n      React.isValidElement(initialValue)\n        ? initialValue\n        : '';\n  }\n  return content;\n}\n\ninterface FromValidateProps {\n  key: string;\n  rules?: rulesProps[];\n  value?: any[] | any;\n}\n\n//判断是否是arrary\nfunction isArray(obj: any | any[]) {\n  return Object.prototype.toString.call(obj) == '[object Array]';\n}\n\n//判断是否object\nfunction isObject(obj: any | any[]) {\n  return Object.prototype.toString.call(obj) == '[object Object]';\n}\n\n//判断是否是string 或 number\nfunction isNumberOrString(obj: any) {\n  return typeof obj === 'string' || typeof obj === 'number';\n}\n// 判断对象是否为空\nfunction isObjectEmpty(obj: any) {\n  for (let _key in obj) {\n    return false;\n  }\n  return true;\n}\n\n/**\n * form表单提交验证\n * @param rules FromValidateProps[]\n * @returns { [key: string]: string }\n */\nexport const fromValidate = (rules: FromValidateProps[] = []) => {\n  let errorObj: { [key: string]: string } = {};\n  rules.forEach(({ rules, key, value }) => {\n    if (rules && rules.length > 0) {\n      rules.forEach(\n        ({ validator = null, message = '', required, pattern = null }) => {\n          // 必填 && object && 为空\n          if (required && isObject(value) && (isObjectEmpty(value) || !value)) {\n            errorObj[key] = message;\n            // 必填 && arrary && 为空\n          } else if (\n            required &&\n            isArray(value) &&\n            (value.length === 0 || !value)\n          ) {\n            errorObj[key] = message;\n            // 必填 && string或number && 为空\n          } else if (required && isNumberOrString(value) && !value) {\n            errorObj[key] = message;\n            // 自定义验证规则\n          } else if (validator && !validator(value)) {\n            errorObj[key] = message;\n            // 正则判断\n          } else if (\n            isNumberOrString(value) &&\n            pattern &&\n            !pattern.test(value)\n          ) {\n            errorObj[key] = message;\n          }\n        },\n      );\n    }\n  });\n  return errorObj;\n};\n","import React, { useRef, useEffect } from 'react';\nimport { Form, Button, Col, Row, FormFieldsProps } from 'uiw';\nimport { ProFormProps } from './type';\nimport { useStore } from './hooks/store';\nimport { fromValidate } from './utils';\nimport './style/form-item.less';\n\nfunction FormDom({\n  formDatas,\n  formfields,\n  onSubmit,\n  onChange,\n  onSubmitError,\n  // afterSubmit,\n  buttonsContainer,\n  showSaveButton = false,\n  showResetButton = false,\n  saveButtonProps = {},\n  resetButtonProps = {},\n  formInstanceRef,\n}: ProFormProps & {\n  formfields: Record<string, FormFieldsProps<{}>> | undefined;\n  formInstanceRef: any;\n}) {\n  const baseRef = useRef<any>();\n  const store = useStore();\n\n  const { setFormState } = store as any;\n\n  // 普通表单\n  useEffect(() => {\n    setFormState?.(baseRef);\n    if (formInstanceRef) {\n      formInstanceRef.current = baseRef;\n    }\n  }, [baseRef]);\n\n  return (\n    <Form\n      ref={baseRef}\n      style={{ background: '#fff', paddingBottom: 10, marginBottom: 14 }}\n      resetOnSubmit={false}\n      onSubmit={({ initial, current }) => {\n        // 如果传入了onSubmit走onSubmit,否则主动验证\n        if (onSubmit) {\n          onSubmit?.(initial, current);\n        } else {\n          const validateList =\n            (formDatas &&\n              formDatas.length > 0 &&\n              formDatas.map((item) => ({\n                key: item.key,\n                value: current[item.key],\n                rules: item.rules,\n              }))) ||\n            [];\n          const errorObj = fromValidate(validateList);\n          if (Object.keys(errorObj).length > 0) {\n            const err: any = new Error();\n            err.filed = errorObj;\n            throw err;\n          }\n        }\n      }}\n      onChange={({ initial, current }) => onChange?.(initial, current)}\n      onSubmitError={(error) => {\n        if (onSubmitError) {\n          onSubmitError?.(error);\n        } else {\n          return error.filed ? { ...error.filed } : null;\n        }\n      }}\n      // afterSubmit={({ initial, current }:any)=>console.log('current',current,'initial',initial)}\n      fields={formfields}\n    >\n      {({ fields, state, canSubmit, resetForm }) => {\n        return (\n          <React.Fragment>\n            <Row gutter={10}>\n              {Object.keys(fields).map((key) => {\n                const colSpan = fields[key]?.props?.span || '8';\n                return (\n                  <Col key={key} span={colSpan}>\n                    {fields[key]}\n                  </Col>\n                );\n              })}\n            </Row>\n            <div className=\"w-form-item-center\" style={{ ...buttonsContainer }}>\n              <Button\n                style={{ display: showSaveButton ? 'flex' : 'none' }}\n                disabled={!canSubmit()}\n                htmlType=\"submit\"\n                {...saveButtonProps}\n              >\n                {saveButtonProps.label || '提交'}\n              </Button>\n              <Button\n                style={{ display: showResetButton ? 'flex' : 'none' }}\n                onClick={resetForm}\n                {...resetButtonProps}\n              >\n                {resetButtonProps.label || '重置'}\n              </Button>\n            </div>\n          </React.Fragment>\n        );\n      }}\n    </Form>\n  );\n}\n\nexport default FormDom;\n","import React from 'react';\nimport { Descriptions } from 'uiw';\nimport { ProFormProps } from './type';\nimport { getReadValue } from './utils/index';\n\nexport default ({ title, formDatas, readOnlyProps }: ProFormProps) => {\n  return (\n    <Descriptions bordered title={title} {...readOnlyProps}>\n      {formDatas?.map(\n        (\n          {\n            hide,\n            label,\n            widget,\n            initialValue = '',\n            option = [],\n            readSpan = 1,\n            widgetProps = {},\n          },\n          index,\n        ) => {\n          return hide ? null : (\n            <Descriptions.Item span={readSpan} label={label} key={index}>\n              {getReadValue(widget, initialValue, option, widgetProps)}\n            </Descriptions.Item>\n          );\n        },\n      )}\n    </Descriptions>\n  );\n};\n","import React from 'react';\nimport { Checkbox } from 'uiw';\n\ninterface FormSelectProps {\n  option?: HTMLOptionElement[];\n}\n\nconst FormCheckBox: React.FC<FormSelectProps> = ({ option, ...others }) => {\n  return (\n    <Checkbox.Group {...others}>\n      {option &&\n        option.map((opt) => (\n          <Checkbox key={opt.value} value={opt.value}>\n            {opt.label}\n          </Checkbox>\n        ))}\n    </Checkbox.Group>\n  );\n};\n\nexport default FormCheckBox;\n","import React, { useState } from 'react';\nimport { Input, Popover, Menu, Icon, Loader } from 'uiw';\nimport { FormItemsOptionsProps } from '../../type';\n\nexport interface SelectMultipleProps {\n  // 下拉项集合\n  option?: FormItemsOptionsProps[];\n  // 变化回调 返回所有选中的项\n  onChange?: (selectedList?: FormItemsOptionsProps[]) => void;\n  // 选中后回调 返回当前选中的项\n  onSelect?: (selected?: FormItemsOptionsProps | null) => void;\n  // 搜索回调\n  onSearch?: (name?: string) => void;\n  // 失去焦点回调\n  onBlur?: () => void;\n  // 删除后毁掉\n  onClear?: (selectedList?: FormItemsOptionsProps[]) => void;\n  // 值\n  value?: FormItemsOptionsProps[];\n  // 是否展示删除\n  allowClear?: boolean;\n  loading?: boolean;\n  disabled?: boolean;\n  placeholder?: string;\n  // 无数据展示\n  noContent?: React.ReactNode;\n  // 是否允许搜索\n  showSearch?: boolean;\n  // 上传最大上限\n  maxCount?: number;\n}\n\nfunction SelectMultiple(\n  this: import('../../type').Fields,\n  {\n    option = [],\n    onChange,\n    onSelect,\n    onSearch,\n    onBlur,\n    onClear,\n    value = [],\n    loading = true,\n    disabled = false,\n    placeholder = '请选择',\n    allowClear = false,\n    noContent,\n    showSearch = false,\n    maxCount = 3,\n  }: SelectMultipleProps,\n) {\n  // 选中的集合\n  const [selectedItems, setSelectedItems] =\n    useState<FormItemsOptionsProps[]>(value);\n  // 搜索内容\n  const [searchValue, setSearchValue] = useState('');\n  // 是否是搜索状态\n  const [isSearch, setIsSearch] = useState(false);\n\n  // 是否已达上限\n  const isMax = selectedItems.length === maxCount;\n\n  // 选择下拉项\n  const handleOnChange = (selected: FormItemsOptionsProps) => {\n    let selKeys = [...selectedItems];\n    const findKey = selKeys.find((v) => v.value === selected.value);\n    if (!findKey && !isMax) {\n      selKeys.push(selected);\n    } else {\n      selKeys = selKeys.filter((ele) => ele.value !== selected.value);\n    }\n    setSelectedItems(selKeys);\n    onChange?.(selKeys);\n    onSelect?.(selected);\n  };\n\n  const handleInput = (type: 'blur' | 'search' | 'clean', { target }: any) => {\n    if (type === 'search') {\n      setIsSearch(true);\n      setSearchValue(target.value);\n      onSearch?.(target.value);\n    }\n    if (type === 'blur') {\n      setSearchValue('');\n      setIsSearch(false);\n      onBlur?.();\n    }\n    if (type === 'clean') {\n      setSearchValue('');\n      setSelectedItems([]);\n      setIsSearch(false);\n      onClear?.([]);\n    }\n  };\n\n  const contentShow = () => {\n    const optionNotEmpty = option && option.length > 0;\n    // 有数据\n    if (optionNotEmpty) {\n      return (\n        <Menu\n          style={{\n            minHeight: 25,\n            maxHeight: 150,\n            overflowY: 'scroll',\n            width: 200,\n          }}\n        >\n          {option.map((opt: FormItemsOptionsProps, idx) => {\n            const active: boolean =\n              selectedItems &&\n              selectedItems.findIndex((item) => item.value === opt.value) !==\n                -1;\n            return (\n              <Menu.Item\n                style={{ marginBottom: option.length - 1 === idx ? 0 : 5 }}\n                active={active}\n                key={opt.value}\n                text={opt.label}\n                disabled={opt.disabled}\n                onClick={(e: any) => {\n                  setIsSearch(false);\n                  e.preventDefault();\n                  handleOnChange(opt);\n                }}\n              />\n            );\n          })}\n        </Menu>\n      );\n    }\n    return noContent ? (\n      noContent\n    ) : (\n      <Loader loading={loading} color=\"black\">\n        <div\n          style={{\n            padding: 10,\n            height: 70,\n            width: 200,\n            display: 'flex',\n            flexDirection: 'column',\n            justifyContent: 'center',\n            alignItems: 'center',\n            fontSize: 12,\n            color: '#888',\n          }}\n        >\n          <Icon type=\"file-unknown\" style={{ fontSize: 20 }} />\n          暂无数据\n        </div>\n      </Loader>\n    );\n  };\n\n  // input的value值\n  const inputValue = React.useMemo(() => {\n    const content =\n      (selectedItems &&\n        selectedItems.length > 0 &&\n        selectedItems.map((item) => item.label)) ||\n      [];\n    return isSearch ? searchValue : content.join(';');\n  }, [selectedItems, searchValue, isSearch]);\n\n  // 渲染icon\n  function renderSelectIcon() {\n    if (!isSearch && allowClear && selectedItems.length > 0) {\n      return 'close';\n    }\n    if (isSearch && loading) {\n      return 'loading';\n    }\n    return 'search';\n  }\n\n  return (\n    <Popover\n      trigger=\"focus\"\n      placement=\"bottomLeft\"\n      content={contentShow()}\n      visibleArrow={false}\n    >\n      <Input\n        readOnly={!showSearch}\n        disabled={disabled}\n        placeholder={placeholder}\n        value={inputValue}\n        onChange={(e) => handleInput('search', e)}\n        onBlur={(e) => handleInput('blur', e)}\n        addonAfter={\n          <Icon\n            type={renderSelectIcon()}\n            spin={loading}\n            onClick={\n              renderSelectIcon() === 'close'\n                ? handleInput.bind(this, 'clean')\n                : undefined\n            }\n          />\n        }\n      />\n    </Popover>\n  );\n}\n\nexport default SelectMultiple;\n","import React, { useMemo, useRef, forwardRef, useImperativeHandle } from 'react';\nimport { Collapse, Card } from 'uiw';\nimport FormDom from './formdom';\nimport ReadFormDom from './readform';\nimport { getFormFields } from './widgets';\nimport { ProFormProps, UseFormStateProps } from './type';\nimport { StoreCtx } from './hooks/store';\nimport './style/form-item.less';\n\nfunction ProForm(props: ProFormProps, ref: any) {\n  const {\n    formDatas = [],\n    title = '',\n    formType = 'card',\n    readOnly = false,\n    customWidgetsList = {},\n    form,\n    cardProps = {},\n    collapseProps = {},\n    collapsePanelProps = {},\n  } = props;\n\n  // 获取表单配置\n  const formfields = useMemo(\n    () => getFormFields(readOnly, formDatas, customWidgetsList),\n    [formDatas],\n  );\n\n  const { setFormState } = form || {};\n\n  const store = useMemo(() => ({ setFormState }), [form]);\n\n  // 通过ref导出实例方法\n  const formInstanceRef = useRef<{ current: UseFormStateProps }>();\n  useImperativeHandle(ref, () => {\n    // 表单验证(同时兼容老api submitvalidate和新api onSubmit )\n    const submitvalidate = () =>\n      formInstanceRef?.current?.current?.onSubmit() || null;\n    const onSubmit = () =>\n      formInstanceRef?.current?.current?.onSubmit() || null;\n    // 获取表单的值\n    const getFieldValues = () =>\n      formInstanceRef?.current?.current?.getFieldValues() || {};\n    // 获取表单错误信息\n    const getError = () => formInstanceRef?.current?.current?.getError() || {};\n    return {\n      ...formInstanceRef.current,\n      submitvalidate,\n      onSubmit,\n      getFieldValues,\n      getError,\n    };\n  });\n\n  let children: React.ReactNode;\n  const formDomProps = { ...props, formfields, formInstanceRef };\n  // 非详情模式下渲染标题\n  const renderTitle = !readOnly ? title : undefined;\n  // 判断是否是详情模式\n  const child = readOnly ? (\n    <ReadFormDom {...props} />\n  ) : (\n    <FormDom {...formDomProps} />\n  );\n\n  // 判断渲染的form类型\n  if (formType === 'card') {\n    children = (\n      <Card title={renderTitle} {...cardProps}>\n        {child}\n      </Card>\n    );\n  } else if (formType === 'collapse') {\n    children = (\n      <Collapse title={renderTitle} activeKey={['1']} {...collapseProps}>\n        <Collapse.Panel header={title} key={'1'} {...collapsePanelProps}>\n          {child}\n        </Collapse.Panel>\n      </Collapse>\n    );\n  } else {\n    children = child;\n  }\n\n  return <StoreCtx.Provider value={store}>{children}</StoreCtx.Provider>;\n}\n\nexport default forwardRef(ProForm);\n","import React from 'react';\nimport { Fields, FormItemsProps } from '../type';\nimport {\n  Input,\n  Switch,\n  Textarea,\n  DateInput,\n  TimePicker,\n  MonthPicker,\n  SearchSelect,\n  Rate,\n} from 'uiw';\nimport Radio from '../../ProTable/widgets/Radio';\nimport Select from '../../ProTable/widgets/Select';\nimport CheckBox from './CheckBox';\nimport SelectMultiple from './SelectMultiple';\nimport Upload from './Upload';\n\n/**\n *\n * @param readOnly 是否是只读模式 boolean\n * @param formDatas 表单项 FormItemsProps[]\n * @returns fields  Record<string, FormFieldsProps<{}>>\n */\nexport function getFormFields(\n  readOnly?: boolean,\n  formDatas: FormItemsProps[] = [],\n  customWidgetsList: Fields = {},\n) {\n  const widgetsList: Fields = {\n    input: Input,\n    radio: Radio,\n    checkbox: CheckBox,\n    switch: Switch,\n    select: Select,\n    searchSelect: SearchSelect,\n    selectMultiple: SelectMultiple,\n    textarea: Textarea,\n    dateInput: DateInput,\n    timePicker: TimePicker,\n    monthPicker: MonthPicker,\n    upload: Upload,\n    rate: Rate,\n    ...customWidgetsList,\n  };\n  const fields: Fields = {};\n  formDatas.forEach((col) => {\n    if (!readOnly) delete col.readSpan;\n    if (col) {\n      const {\n        hide = false,\n        widgetProps,\n        key,\n        widget,\n        label,\n        initialValue,\n        ...otherProps\n      } = col;\n      if (!hide) {\n        const name = key;\n        const Widget = widgetsList[widget];\n        fields[name] = {\n          label: label,\n          children: <Widget {...widgetProps} />,\n          ...otherProps,\n          initialValue,\n        };\n      }\n    }\n  });\n  return fields;\n}\n","import { useState } from 'react';\nimport { UseFormStateProps } from '../type';\n\nconst useForm = () => {\n  // form表单实例\n  const [formState, setFormState] = useState<{ current: UseFormStateProps }>();\n\n  // 表单验证(同时兼容老api submitvalidate和新api onSubmit )\n  const submitvalidate = () => formState?.current?.onSubmit() || null;\n  const onSubmit = () => formState?.current?.onSubmit() || null;\n  // 获取表单的值\n  const getFieldValues = () => formState?.current?.getFieldValues() || {};\n  // 获取表单错误信息\n  const getError = () => formState?.current?.getError() || {};\n\n  return {\n    ...formState?.current,\n    submitvalidate,\n    onSubmit,\n    getError,\n    getFieldValues,\n    // --------------\n    setFormState,\n  };\n};\n\nexport default useForm;\n"],"names":["webpackEmptyContext","req","e","Error","code","keys","resolve","id","module","exports","Code","dependencies","codePen","other","props","codeSandboxOption","files","content","replace","name","description","react","devDependencies","kkt","typescript","license","scripts","start","build","test","browserslist","React","style","marginBottom","editorUrl","className","styles","title","target","rel","href","getCodeStr","data","forEach","node","type","value","children","Array","isArray","Markdown","getMdStr","state","mdStr","this","then","str","setState","default","Fragment","padding","source","components","inline","noPreview","noScroll","bgWhite","noCode","config","Object","filter","undefined","length","Component","loading","others","display","bgColor","codeMessage","request","url","options","method","requestType","body","newOptions","Accept","headers","JSON","newFormData","arrayFormat","urlNew","paramsArray","key","splitUrl","token","sessionStorage","localStorage","response","err","status","errortext","error","StoreCtx","createContext","useStore","useContext","rowSelection","onPageChange","scroll","tableProps","useState","total","store","SWRConfiguration","defaultSelected","x","isCheckbox","defaultColumns","columns","item","align","render","textAlign","text","defaultValues","useMemo","defaultSearchValues","col","isFirstMountRef","useRef","formatQuery","useCallback","query","page","pageSize","pageIndex","useSWR","revalidateOnFocus","revalidateOnMount","mutate","useEffect","tableData","formatData","prevData","selection","isSingle","selectedSet","Set","isSelected","unSelectAll","items","o","setSelected","select","unSelect","selectAll","noneSelected","allSelected","partiallySelected","selected","toggle","toggleAll","useSelections","selectKey","itm","pageChange","setPageIndex","stores","updateStore","setPrevData","selectionCol","checked","onClick","width","rowData","onChange","overflow","footer","current","divider","option","opt","label","widgets","input","radio","checkbox","switch","searchSelect","textarea","dateInput","timePicker","monthPicker","MonthPicker","formRef","updateForm","onBeforeSearch","getFormFields","fields","initialValue","Widget","onFormSearch","searchValues","emptyLength","background","paddingBottom","resetOnSubmit","onSubmit","initial","onSubmitError","ref","resetForm","gutter","fixed","index","marginRight","searchBtns","btn","idx","htmlType","operateButtons","onReset","onRefersh","onSearch","form","Provider","params","datas","setForm","AuthBtn","fig","path","authList","authStr","STORAGE","getAuthPath","disabled","BtnAuth","ProDrawer","onClose","buttons","isOpen","size","bodyStyle","show","memo","readonly","maxNumber","uploadType","onPreview","file","setSrc","setVisible","onClosed","confirmButtonProps","crossOrigin","src","alt","height","getReadValue","formatter","Date","widgetProps","uploadProps","showFileIcon","showPreviewIcon","showRemoveIcon","contentList","console","readOnly","isNumberOrString","obj","fromValidate","rules","errorObj","validator","message","pattern","required","isObjectEmpty","showSaveButton","showResetButton","saveButtonProps","resetButtonProps","formInstanceRef","baseRef","setFormState","validateList","formDatas","colSpan","span","canSubmit","readOnlyProps","bordered","readSpan","hide","widget","placeholder","allowClear","showSearch","maxCount","isMax","selectedItems","handleInput","setIsSearch","setSearchValue","onBlur","setSelectedItems","onClear","inputValue","isSearch","searchValue","trigger","placement","minHeight","maxHeight","overflowY","active","selKeys","v","ele","onSelect","handleOnChange","noContent","color","flexDirection","justifyContent","alignItems","fontSize","visibleArrow","addonAfter","renderSelectIcon","spin","ProForm","formType","customWidgetsList","cardProps","collapseProps","collapsePanelProps","formfields","widgetsList","selectMultiple","upload","rate","Rate","useImperativeHandle","submitvalidate","getFieldValues","getError","formDomProps","renderTitle","child","activeKey","header","forwardRef","formState"],"sourceRoot":""}