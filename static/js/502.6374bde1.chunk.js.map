{"version":3,"file":"static/js/502.6374bde1.chunk.js","mappings":"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","sources":["pages/TableList/index.tsx","../../../packages/components/src/Skeleton/index.tsx","../../../packages/utils/src/request.ts","../../../packages/utils/src/utils.ts","../../../packages/components/src/ProTable/hooks.ts","../../../packages/components/src/ProTable/BaseTable.tsx","../../../packages/components/src/ProTable/index.tsx","../../../packages/components/src/ProTable/useTable.ts","../../../packages/components/src/ProDrawer/index.tsx"],"sourcesContent":["import React from 'react';\nimport { ProTable, useTable } from '@uiw-admin/components';\n\nexport default function Demo() {\n  const table = useTable('/api/getData', {\n    // 格式化接口返回的数据，必须返回{total 总数, data: 列表数据}的格式\n    formatData: (data) => {\n      return {\n        total: data.total,\n        data: data.data,\n      };\n    },\n    // 格式化查询参数 会接收到pageIndex 当前页  pageSize 页码\n    query: (pageIndex: number) => {\n      console.log(pageIndex);\n      return {\n        page: pageIndex,\n        pageSize: 10,\n      };\n    },\n  });\n\n  return (\n    <ProTable\n      btns={[{ label: '新增', type: 'primary' }]}\n      table={table}\n      columns={[\n        {\n          title: '名字',\n          key: 'name',\n        },\n        {\n          title: '年龄',\n          key: 'age',\n        },\n        {\n          title: '地址',\n          key: 'info',\n        },\n      ]}\n    />\n  );\n}\n","import React from 'react';\nimport { Loader } from 'uiw';\n\ninterface SkeletonProps {\n  children: React.ReactNode;\n  loading?: boolean;\n}\n\nconst Skeleton: React.FC<SkeletonProps> = ({ children, loading = false }) => {\n  return (\n    <Loader\n      loading={loading}\n      style={{ display: 'block', }}\n      // fullscreen={true}\n      bgColor=\"rgba(255, 255, 255, 0.4)\"\n    >\n      <>{children}</>\n    </Loader>\n  );\n};\n\nexport default Skeleton;\n","import axios, { AxiosRequestConfig } from 'axios';\n// import history from '../routes/history';\nimport { splitUrl } from './utils';\n\n// Get the current location.\n// const location = history.location;\nconst codeMessage = {\n  200: '服务器成功返回请求的数据。',\n  201: '新建或修改数据成功。',\n  202: '一个请求已经进入后台排队（异步任务）。',\n  204: '删除数据成功。',\n  400: '发出的请求有错误，服务器没有进行新建或修改数据的操作。',\n  401: '用户没有权限（令牌、用户名、密码错误）。',\n  403: '用户得到授权，但是访问是被禁止的。',\n  404: '发出的请求针对的是不存在的记录，服务器没有进行操作。',\n  406: '请求的格式不可得。',\n  410: '请求的资源被永久删除，且不会再得到的。',\n  422: '当创建一个对象时，发生一个验证错误。',\n  500: '服务器发生错误，请检查服务器。',\n  502: '网关错误。',\n  503: '服务不可用，服务器暂时过载或维护。',\n  504: '网关超时。',\n};\n\nexport interface Options extends AxiosRequestConfig {\n  body?: any;\n}\n\n/**\n * Requests a URL, returning a promise.\n *\n * @param  {string} url       The URL we want to request\n * @param  {object} [options] The options we want to pass to \"fetch\"\n * @return {object}           An object containing either \"data\" or \"err\"\n */\nexport default function request(url: string, options: Options = {}) {\n  const method = options.method || 'GET';\n  const newOptions: Options = {\n    url,\n    method,\n    data: options.body,\n    headers: {\n      'Content-Type': 'application/json; charset=utf-8',\n      Accept: 'application/json',\n    },\n  };\n\n  if (/(GET)/.test(method)) {\n    newOptions.url = splitUrl(url, { ...options.body });\n    delete newOptions.body;\n  }\n\n  return axios\n    .request(newOptions)\n    .then((response) => {\n      return response.data;\n    })\n    .catch((err) => {\n      const response = err.response;\n      if (response.status >= 200 && response.status < 300) {\n        return response;\n      }\n      const status = response.status;\n      const errortext = (codeMessage as any)[status] || response.statusText;\n      // Notification.error({\n      //   message: '错误提示：',\n      //   description: (response.data && response.data.info) || '没有错误提示',\n      // });\n      const error = new Error(errortext);\n      error.name = response.status;\n      // error.response = response;\n      if (response.data) {\n        return response.data;\n      }\n      throw error;\n    });\n}\n","// 拼接url参数\nexport function splitUrl(url: string, options: { [x: string]: any }) {\n  let urlNew = url;\n  const paramsArray: string[] = [];\n  // Object.keys(options).forEach(key => paramsArray.push(key + '=' + options[key]));\n  Object.keys(options).forEach((key) =>\n    paramsArray.push(`${key}=${options[key]}`),\n  );\n  if (Object.keys(options).length === 0) {\n    return url;\n  }\n  if (/\\?/.test(urlNew) === false) {\n    urlNew = `${urlNew}?${paramsArray.join('&')}`;\n  } else {\n    urlNew += `&${paramsArray.join('&')}`;\n  }\n  return urlNew;\n}\n","import {\n  useContext,\n  createContext,\n} from 'react';\n\nexport const StoreCtx = createContext({\n  data: []\n});\n\n\nexport const useStore = () => {\n  return useContext(StoreCtx);\n};\n\n\n\n","import React, { useState, useEffect } from 'react';\nimport useSWR from 'swr';\nimport { Table, Pagination, TableColumns } from 'uiw';\nimport { request } from '@uiw-admin/utils';\nimport { useStore } from './hooks'\n\ninterface BaseTableProps {\n  style?: React.CSSProperties,\n  columns: TableColumns[];\n}\n\nconst BaseTable: React.FC<BaseTableProps> = ({ style, columns}) => {\n  const [pageIndex, setPageIndex] = useState(1);\n\n  const pageSize = 10;\n\n  const store = useStore()\n\n  let {\n    formatData,\n    updateStore,\n    query,\n    key\n  } = store\n\n  const formatQuery = () => {\n    if (query) {\n      return query(pageIndex, pageSize)\n    } else {\n      // 默认传参\n      return {\n        page: pageIndex,  pageSize\n      }\n    }\n  }\n\n  const { data, error, isValidating } = useSWR(\n    [key, { method: 'POST', body: formatQuery() }],\n    request,\n  );\n\n  useEffect(() => {\n    updateStore({\n      data: data?.data,\n      total: data?.total\n    })\n  }, [JSON.stringify(data)])\n\n\n\n  return (\n    <Table\n      columns={columns}\n      data={formatData && data ? formatData(data).data : data?.data}\n      style={style}\n      footer={\n        <Pagination\n          current={pageIndex}\n          pageSize={pageSize}\n          total={formatData && data ? formatData(data).total : data?.total}\n          divider\n          onChange={(page) => {\n            setPageIndex(page);      \n          }}\n        />\n      }\n    />\n  );\n}\n\nexport default BaseTable","import React, { useState, useMemo } from 'react';\nimport { Button, Input, Form, ButtonProps, Row, Col, TableColumns } from 'uiw';\nimport Skeleton from '../Skeleton';\nimport Table from './BaseTable';\nimport { StoreCtx } from './hooks';\nimport { useTableData } from './useTable';\n\n// interface BtnItem extends ButtonProps{\n//   label: React.ReactNode;\n// };\ninterface ProtableProps {\n  table: useTableData;\n  btns?: Array<ButtonProps>;\n  columns: TableColumns[];\n}\n\nconst ProTabel: React.FC<ProtableProps> = ({ table, columns, btns = [] }) => {\n  const { key, data, reset, refersh, updateStore, formatData, query } = table;\n\n  const store = useMemo(\n    () => ({\n      data: [],\n      reset,\n      refersh,\n      key,\n      updateStore,\n      formatData,\n      query,\n    }),\n    [JSON.stringify(data), reset, refersh, key, updateStore, formatData, query],\n  );\n\n  return (\n    <StoreCtx.Provider value={store}>\n      <Skeleton>\n        <Form\n          style={{ background: '#fff', paddingBottom: 5 }}\n          resetOnSubmit={false}\n          onSubmit={({ initial, current }) => {}}\n          onSubmitError={(error) => {\n            if (error.filed) {\n              return { ...error.filed };\n            }\n            return null;\n          }}\n          fields={{\n            username: {\n              labelClassName: 'fieldLabel',\n              labelStyle: { width: 160 },\n              labelFor: 'username',\n              label: '用户名',\n              children: (\n                <Input\n                  preIcon=\"user\"\n                  id=\"username\"\n                  placeholder=\"用户名: admin\"\n                />\n              ),\n            },\n            password: {\n              labelClassName: 'fieldLabel',\n              labelStyle: { width: 60 },\n              label: '用户名',\n              labelFor: 'password',\n              children: (\n                <Input\n                  preIcon=\"lock\"\n                  id=\"password\"\n                  type=\"password\"\n                  placeholder=\"密码: admin\"\n                />\n              ),\n            },\n          }}\n        >\n          {({ fields, state, canSubmit, resetForm }) => {\n            return (\n              <div>\n                <Row gutter={10}>\n                  <Col fixed>{fields.username}</Col>\n                  <Col fixed>{fields.password}</Col>\n                  <Col style={{ marginTop: 31 }}>\n                    <Button\n                      disabled={!canSubmit()}\n                      type=\"primary\"\n                      htmlType=\"submit\"\n                    >\n                      提交\n                    </Button>\n                    <Button type=\"danger\" onClick={resetForm}>\n                      重置表单\n                    </Button>\n                  </Col>\n                </Row>\n              </div>\n            );\n          }}\n        </Form>\n        {/* 操作区域 */}\n        {\n          btns.length > 0 &&   <div style={{ marginTop: 14, background: '#fff', padding: 10 }}>\n          {btns.map((btn: any, idx) => (\n            <Button key={idx.toString()} style={{ marginRight: 5 }} {...btn}>\n              {btn.label}\n            </Button>\n          ))}\n        </div>\n        }\n      \n        {/* 列表组件 */}\n        <Table columns={columns} />\n      </Skeleton>\n    </StoreCtx.Provider>\n  );\n};\n\nexport default ProTabel;\n","import { useRef, useState } from 'react'\n\ntype Result = {\n  total: number,\n  data:  Record<string, string | number | JSX.Element>[];\n}\n\n\n\ntype Params = {\n  formatData?: (res: any) => Result,\n  query?: (pageIndex: number, pageSize: number) => ({\n    [key: string]: any\n  })\n}\n\n\nexport interface useTableData extends Params {\n  data:  Record<string, string | number | JSX.Element>[],\n  total: number,\n  key: string,\n  reset: () => void,\n  refersh: () => void,\n  updateStore: (p: stateParams) => void\n  \n}\n\ntype stateParams = {\n  data?:  Record<string, string | number | JSX.Element>[],\n  total?: number,\n  selectChecked?: [],\n  selectCheckedRows?: [],\n}\n\nconst useTable = (key: string, params: Params = {}): useTableData => {\n\n  // const tableRef = useRef(null)\n  const { formatData, query } = params\n\n\n  const [state, setState] = useState<any>({\n     // 总页数\n    total: 1,\n    // 当前table数据源\n    data: [],\n    // 选中的行\n    selectChecked: [],\n    selectCheckedRows: [],\n  });\n  \n  const updateStore = (datas: stateParams) => {\n    setState({\n      ...state,\n      ...datas,\n    })\n  }\n\n  return {\n    key,\n    // 重置\n    reset: () => {\n\n    },\n    // 刷新当前页数据\n    refersh: () => {\n\n    },\n    formatData,\n    query,\n    updateStore,\n    ...state,\n  }\n}\n\n\nexport default useTable","import React, { memo } from 'react';\nimport { Drawer, Button, DrawerProps, Row, Col } from 'uiw';\n\n/**\n * ProDrawer 组件继承于https://uiwjs.github.io/#/components/drawer\n * @param {boolean} visible 显示隐藏\n * @param {string} title 标题\n * @param {()=>void} onClose 关闭事件\n * @param {number} width Drawer宽\n * @param {Array<{label?:string,onPress?:()=>void,show?:boolean,loading?:boolean}>} buttons 按钮集合(label:\"文本\",onPress:点击事件,show:是否展示)\n * @param {React.ReactNode} children\n * @returns\n */\n\ninterface ButtonItemsProps {\n  label?: string;\n  onPress?: () => void;\n  show?: boolean;\n  size?: 'large' | 'default' | 'small';\n  type?: 'primary' | 'success' | 'warning' | 'danger' | 'light' | 'dark' | 'link';\n  loading?: boolean;\n  width?: number\n}\n\ninterface ProDrawerProps extends DrawerProps {\n  visible: boolean;\n  title?: string;\n  onClose?: any;\n  width?: number;\n  buttons?: Array<ButtonItemsProps>;\n  children?: React.ReactNode\n}\nfunction ProDrawer(props: ProDrawerProps) {\n  const { visible, title = '', onClose = null, width = 800, buttons = [], children, ...others } = props\n  return (\n    <Drawer\n      title={title}\n      isOpen={visible}\n      onClose={onClose && onClose}\n      size={width}\n      bodyStyle={{ padding: '0 10px 45px 10px' }}\n      {...others}\n      footer={\n        buttons.map(\n          ({ label = '', onPress, show = true, loading, type = \"primary\", width = 60, size = \"default\" }, idx) =>\n            show && (\n              <Button\n                style={{ width: width }}\n                key={idx}\n                type={type}\n                size={size}\n                onClick={onPress && onPress}\n                loading={loading}\n              >\n                {label}\n              </Button>\n            )\n        )\n      }\n    >\n      {children}\n    </Drawer>\n  );\n}\n\nexport default memo(ProDrawer);\n"],"names":["Demo","table","useTable","formatData","data","total","query","pageIndex","console","log","page","pageSize","btns","label","type","columns","title","key","loading","style","display","bgColor","children","codeMessage","request","url","options","method","newOptions","headers","Accept","test","urlNew","paramsArray","Object","splitUrl","response","err","status","errortext","error","Error","StoreCtx","createContext","useState","store","useContext","useSWR","body","isValidating","useEffect","updateStore","JSON","footer","current","divider","onChange","setPageIndex","useMemo","reset","refersh","Provider","value","background","paddingBottom","resetOnSubmit","onSubmit","onSubmitError","fields","username","labelClassName","labelStyle","width","labelFor","preIcon","id","placeholder","password","resetForm","gutter","fixed","marginTop","disabled","canSubmit","htmlType","onClick","padding","marginRight","btn","idx","params","selectChecked","selectCheckedRows","datas","setState","ProDrawer","props","onClose","buttons","isOpen","size","bodyStyle","show","onPress","memo"],"sourceRoot":""}