{"version":3,"file":"static/js/565.6f2a6a29.chunk.js","mappings":"8GAAA","sources":["../../../packages/authorized/README.md"],"sourcesContent":["export default \"权限组件\\n===\\n\\n## Installation\\n\\n```bash\\nnpm i @uiw-admin/authorized --save\\n```\\n\\n## AuthPage 页面权限组件\\n\\n```ts\\ninterface AuthorizedProps {\\n  /** 是否已经登录 */ \\n  authority?: boolean;\\n  children: JSX.Element;\\n  /** 未登录重定向路径 默认 /login */ \\n  redirectPath?: string;\\n}\\n```\\n\\n## getAuthPath\\n\\n> 判断是否有权限\\n\\n```ts\\ntype getAuthPath = (path?: string)=>boolean \\n```\\n\\n\\n## AuthBtn \\n\\n> 外层嵌套 组件，判断子组件是否有权限展示或使用\\n\\n```ts\\nexport interface AuthBtnProps {\\n  /** 路径 */\\n  path?: string;\\n  /** 禁用 状态 展示   适用于 存在 disabled 属性的组件  */\\n  disabled?: boolean;\\n  children: React.ReactNode;\\n}\\n```\\n\\n## 案例\\n\\n```tsx\\n\\nimport React from \\\"react\\\"\\nimport { getAuthPath,AuthBtn } from \\\"@uiw-admin/authorized\\\"\\n\\nconst Demos = ()=>{\\n  return <div>\\n    <AuthBtn path=\\\"/dom/save\\\" >\\n      子集渲染\\n    </AuthBtn>\\n    <AuthBtn path=\\\"/dom/edit\\\" disabled >\\n      子集渲染2\\n    </AuthBtn>\\n  </div>\\n}\\nexport default Demos\\n```\";"],"names":[],"sourceRoot":""}