{"version":3,"file":"static/js/523.e095903a.chunk.js","mappings":"+GAAA","sources":["../../../packages/components/src/ProForm/README.md"],"sourcesContent":["export default \"# 基于uiw-form封装的业务表单\\n\\n<!--ProForm-->\\n\\n```js\\nimport { ProForm } from '@uiw-admin/components'\\nimport React, { useState } from 'react';\\nimport { Button } from 'uiw'\\nconst Demo = () => {\\n  const [ isView ] = useState( false )\\n    return (\\n       <ProForm\\n         formType=\\\"card\\\"\\n         title=\\\"基础信息\\\"\\n         btns={[\\n            {\\n             label: \\\"提交表单\\\",\\n             btnType: \\\"submit\\\",\\n             type: \\\"danger\\\",\\n             show: !isView\\n           },\\n           {\\n             label: \\\"重置表单\\\",\\n             btnType: \\\"reset\\\",\\n             type: \\\"danger\\\",\\n             show: !isView\\n           }\\n         ]}\\n         onSubmit={(initial: any, current: any) => {} )}\\n         onChange={(initial: any, current: any) => {} )}\\n         formDatas={\\n           [\\n             {\\n               label: '姓氏',\\n               key: 'firstName',\\n               widget: 'input',\\n               initialValue: '',\\n               widgetProps: { disabled: isView }\\n             }\\n           ]}\\n       />\\n  );\\n}\\n```\\n\\n\\n## Porps\\n\\n\\n| 参数 | 说明\\t| 类型\\t| 默认值 |\\n| --  | -- | -- | -- |\\n| formDatas | 表单项集合\\t| FormItemsProps[]\\t\\t| [] |\\n| onSubmit | 提交表单回调 需配合btns，继承uiw/form submit\\t| (initial: Record<string, any>, current: Record<string, any>) => void\\t\\t| - |\\n| onChange | 表单值变化回调，继承uiw/form onChange\\t| (initial: Record<string, any>, current: Record<string, any>) => void\\t| - |\\n| btns | 按钮集合\\t|  BtnProps[]\\t\\t| [] |\\n| btnsContainer  | btns容器样式(可调整button布局)\\t| React.CSSProperties\\t\\t| - |\\n| title | 标题\\t  | string 或 React.ReactNode\\t\\t| - |\\n| formType | 表单类型\\t  | 'collapse' 或 'card'\\t\\t| 'card' |\\n\\n## FormItemsProps\\n| 参数 | 说明\\t| 类型\\t| 默认值 |\\n| --  | -- | -- | -- |\\n| label| 表单项名称 | string\\t| - |\\n| key| 表单项key| string\\t| - |\\n| widget| 表单项类型| typeof commonWidgetsList\\t| - |\\n| initialValue| 表单项值，可以是默认值| any 或 any[]\\t| - |\\n| option| 数据化选项内容, type为 radio、checkbox、select 生效| FormItemsOptionsProps[]| - |\\n| widgetProps| 表单组件其余参数,参考uiw表单组件| any|- |\\n| hide| 是否显示| boolean| true |\\n| span| 可以通过指定 24 列中每列的宽度来创建基本网格系统| string| '8' |\\n| required| 是否必填| boolean | - |\\n\\n\\n## BtnProps\\n[继承于uiw,请参考Button其余参数](https://uiwjs.github.io/#/components/button)\\n| 参数 | 说明\\t| 类型\\t| 默认值 |\\n| --  | -- | -- | -- |\\n| label| \\b按钮名称 | string\\t| 'card' |\\n| btnType| 按钮类型(配合onSubmit可提交表单) | 'submit' 或 'reset' 或 'other'\\t| - |\\n| show| 是否隐藏 | boolean\\t| true |\\n\\n## FormItemsOptionsProps\\n| 参数 | 说明\\t| 类型\\t| 默认值 |\\n| --  | -- | -- | -- |\\n| label| 名称 | string(必传值)\\t| - |\\n| value| key | string 或 number(必传值)\\t| - |\\n| disabled| 是否禁用 | boolean\\t| - |\\n\\n## 注意\\n- [继承于uiw/form,请参考uiw/from以及表单组件](https://uiwjs.github.io/#/components/from)\\n- 组件默认集成了Input,Checkbox,Switch,Textarea,DateInput,TimePicker,MonthPicker,SearchSelect,Select,Radio。可通过配置widget注册自定义组件\";"],"names":[],"sourceRoot":""}