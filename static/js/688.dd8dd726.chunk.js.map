{"version":3,"file":"static/js/688.dd8dd726.chunk.js","mappings":"+GAAA","sources":["../../../packages/components/src/ProTable/README.md"],"sourcesContent":["export default \"## ProTable\\n\\n集成搜索表单的Table组件，用于一般页面的查询搜索。\\n\\n\\n### demo\\n\\n<!--rehype:bgWhite=true&codeSandbox=true&codePen=true-->\\n```jsx\\nimport React from 'react';\\nimport { ProTable, useTable } from '@uiw-admin/components';\\n\\nfunction Demo() {\\n  const table = useTable('/api/getData', {\\n    // 格式化接口返回的数据，必须返回{total 总数, data: 列表数据}的格式\\n    formatData: (data) => {\\n      return {\\n        total: data.total,\\n        data: data.data,\\n      };\\n    },\\n    // 格式化查询参数 会接收到pageIndex 当前页  searchValues 表单数据\\n    query: (pageIndex, searchValues) => {\\n      return {\\n        page: pageIndex,\\n        pageSize: 10,\\n        data: searchValues,\\n      };\\n    },\\n     // swr options\\n    SWRConfiguration: {\\n      revalidateOnFocus: false\\n    }\\n  });\\n\\n  return (\\n    <ProTable\\n      operateButtons={[\\n        { label: '新增', type: 'primary' },\\n      ]}\\n      // 自定义搜索栏按钮, 覆盖原本的search按钮 如要执行查询操作 需要按钮 htmlType: 'submit'\\n      // searchBtns={[\\n      //   { label: '搜索', type: 'primary',  htmlType: 'submit',  onClick: () => {\\n      //     table.onSearch()\\n      //   }},\\n      //   { label: '点我', onClick: () => null},\\n      // ]}\\n      onBeforeSearch={({ initial, current }) => {\\n        const errorObj = {};\\n        if (!current.name) errorObj.name = '名字不能为空！';\\n        if (Object.keys(errorObj).length > 0) {\\n          const err = new Error();\\n          err.filed = errorObj;\\n          throw err;\\n        }\\n        return true;\\n      }}\\n      table={table}\\n      columns={[\\n        {\\n          title: '名字',\\n          key: 'name',\\n          props: {\\n            widget: 'input',\\n            initialValue: 'zzz',\\n            // 组件属性\\n            widgetProps: {\\n              preIcon: 'user',\\n              placeholder: '输入用户名',\\n            },\\n          },\\n        },\\n        {\\n          title: '年龄',\\n          key: 'age',\\n          props: {\\n            widget: 'select',\\n            option: [\\n              { label: '20', value: 20 },\\n              { label: '10', value: 10 },\\n            ],\\n          },\\n        },\\n        {\\n          title: '地址',\\n          key: 'info',\\n          props: {\\n            widget: 'textarea',\\n          },\\n        },\\n        {\\n          title: 'Switch',\\n          key: 'Switch',\\n          props: {\\n            widget: 'switch',\\n          },\\n        },\\n        {\\n          title: 'timePicker',\\n          key: 'timePicker',\\n          props: {\\n            widget: 'timePicker',\\n          },\\n        },\\n        {\\n          title: 'MonthPicker',\\n          key: 'MonthPicker',\\n          props: {\\n            widget: 'monthPicker',\\n          },\\n        },\\n        {\\n          title: 'DateInput',\\n          key: 'DateInput',\\n          props: {\\n            widget: 'dateInput',\\n          },\\n        },\\n        {\\n          title: 'Radio',\\n          key: 'Radio',\\n          props: {\\n            widget: 'radio',\\n            option: [\\n              { label: '男', value: 'man' },\\n              { label: '女', value: 'girl' },\\n            ],\\n          },\\n        },\\n        {\\n          title: 'SearchSelect',\\n          key: 'SearchSelect',\\n          props: {\\n            widget: 'searchSelect',\\n            widgetProps: {\\n              option: [\\n                { label: 'a', value: 2 },\\n                { label: 'aa', value: 3 },\\n                { label: 'aaa', value: 4 },\\n              ],\\n            },\\n          },\\n        },\\n      ]}\\n    />\\n  );\\n}\\n\\nReactDOM.render(<Demo />, _mount_);\\n\\n```\\n\\n## Porps\\n\\n| 参数 | 说明\\t| 类型\\t| 默认值 |\\n| --  | -- | -- | -- |\\n| columns | 与uiw table colunms用法一致 必传\\t| ColumnProps[]\\t\\t| [] |\\n| operateButtons | 操作栏按钮集合，属性与uiw button一致并支持自定义render\\t| `Array<ButtonProps & { render?: JSX.Element }>`\\t\\t\\t| [] |\\n| searchBtns | 搜索栏按钮集合，属性与uiw button一致并支持自定义render\\t| `Array<ButtonProps & { render?: JSX.Element }>`\\t\\t| [] |\\n| table | useTable返回值\\t| Object 必传\\t\\t|  |\\n| onBeforeSearch | 查询table前表单回调，可用于表单验证，返回true 继续查询\\t| ({initial, current}) => Boolean \\t|  |\\n\\n其余属性与uiw Table一致\\n\\n### columns props\\n\\n配置搜索表单\\n\\n\\n| 参数 | 说明\\t| 类型\\t| 默认值 |\\n| --  | -- | -- | -- |\\n| widget | 表单组件\\t| \\t支持例子中的组件, 组件名与uiw表单组件名字一致，只是首字母小写了\\t| - |\\n| widgetProps | 组件属性\\t| \\t与uiw对应的组件属性一致\\t| - |\\n| label| 表单标题，如果不填则集成columns title\\t| \\tString\\t| - |\\n| key| 表单name，如果不填则集成columns key\\t| \\tString\\t| - |\\n\\n## useTable\\n\\n### params\\n\\n\\n| 参数 | 说明\\t| 类型\\t| 默认值 |\\n| --  | -- | -- | -- |\\n| key | 接口请求地址\\t| string\\t\\t| - |\\n| options | 配置集合\\t| object\\t\\t| {} |\\n\\n### options\\n\\n| 参数 | 说明\\t| 类型\\t| 默认值 |\\n| --  | -- | -- | -- |\\n| formatData | 格式化接口返回的数据，必须返回{total: 总数, data: 列表数据}的格式\\t| (data) => {total: 10, data: []}\\t| - |\\n| query | 格式化请求参数, 会接收到pageIndex 当前页  searchValues 表单数据\\t|  (pageIndex: number, searchValues: any)\\t=> {page:  pageIndex, pageSize: 10, searchValues}\\t| {} |\\n| SWRConfiguration | swr配置\\t| SWRConfiguration\\t| {} |\\n\\n\\n### response\\n\\n| 参数 | 说明\\t| 类型\\t| 默认值 |\\n| --  | -- | -- | -- |\\n| data | 接口请求数据\\t| Array\\t| - |\\n| total | 数据总数\\t| Number\\t\\t| - |\\n| searchValues | 表单值\\t| Object\\t\\t| - |\\n\";"],"names":[],"sourceRoot":""}