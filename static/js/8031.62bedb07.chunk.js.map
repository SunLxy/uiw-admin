{"version":3,"file":"static/js/8031.62bedb07.chunk.js","mappings":"+GAAA","sources":["../../../packages/basic-layouts/README.md"],"sourcesContent":["export default \"# 页面整体布局\\n\\n[![npm version](https://img.shields.io/npm/v/@uiw-admin/basic-layouts.svg?label=@uiw-admin/basic-layouts)](https://www.npmjs.com/package/@uiw-admin/basic-layouts)\\n\\n项目的整体默认布局组件，一般默认 '/' 路由的组件\\n\\n## 何时使用\\n\\n当项目需要默认布局的使用\\n\\n## 安装\\n\\n```bash\\nnpm i @uiw-admin/basic-layouts --save # yarn add @uiw-admin/basic-layouts\\n```\\n\\n\\n## 基本使用\\n>   -  routes 渲染路由菜单\\n>   -  headerLayout 配置头部布局\\n>   -  headerBackground: 配置头部背景色\\n>   -  headerFontColor: 配置头部字体颜色\\n\\n<!--rehype:bgWhite=true&codeSandbox=true&codePen=true-->\\n```tsx\\nwindow.SEARCH_MENU = true\\nimport React from 'react'\\nimport BasicLayout, {\\n  useLayouts,\\n} from '@uiw-admin/basic-layouts'\\nimport { HashRouter } from 'react-router-dom';\\nimport LayoutTabs from \\\"@uiw-admin/layout-tabs\\\"\\nconst routerArrs =[\\n  {\\n    path: \\\"/basic-layouts\\\",\\n    name: \\\"查询表格\\\",\\n    element: <div>测试</div>,\\n  },\\n  {\\n    path: \\\"/layout-tabs\\\",\\n    name: \\\"查询表格2\\\",\\n    element: <div>测试2</div>,\\n  }\\n]\\n\\nfunction BasicLayoutScreen() {\\n  const basicLayoutProps = {\\n    headerLayout: 'top',\\n    headerBackground: '#343a40',\\n    headerFontColor: '#fff',\\n  }\\n  return (\\n    <HashRouter window={window}>\\n      <BasicLayout {...basicLayoutProps}  isDefaultContentStyle={false} routes={routerArrs}  >\\n        <LayoutTabs routes={routerArrs} /> \\n      </BasicLayout>\\n    </HashRouter>\\n  )\\n}\\nReactDOM.render(<BasicLayoutScreen />, _mount_);\\n\\n```\\n\\n**菜单搜索功能**\\n\\n在根目录`.kktrc.js`文件配置 `SEARCH_MENU` 参数，类型：`boolen`\\n\\n```ts\\n// .kktrc.js \\nimport config from \\\"@uiw-admin/config\\\"\\nexport default config({\\n  define:{\\n    SEARCH_MENU:true\\n  }\\n})\\n```\\n\\n\\n## 右侧下拉菜单\\n\\n>   - menus配置右侧下拉菜单内容;\\n>   - profile配置头像以及下拉菜单左侧内容;\\n>   - onReloadAuth调用刷新权限接口;\\n>   - layouts.closeMenu关闭菜单事件;\\n\\n<!--rehype:bgWhite=true&codeSandbox=true&codePen=true-->\\n```jsx\\nwindow.SEARCH_MENU = true\\nimport React from 'react'\\nimport BasicLayout, {\\n  useLayouts,\\n} from '@uiw-admin/basic-layouts'\\nimport { HashRouter ,useRoutes ,Outlet} from 'react-router-dom';\\nimport LayoutTabs from \\\"@uiw-admin/layout-tabs\\\"\\n\\nconst routerArrs =[\\n  {\\n    path: \\\"/basic-layouts\\\",\\n    name: \\\"查询表格\\\",\\n    element: <div>测试</div>,\\n  },\\n  {\\n    path: \\\"/layout-tabs\\\",\\n    name: \\\"查询表格2\\\",\\n    element: <div>测试2</div>,\\n  }\\n]\\n\\nfunction BasicLayoutScreen() {\\n  const layouts = useLayouts()\\n  const basicLayoutProps = {\\n    // 右侧下拉菜单内容\\n    menus: [\\n      {\\n        title: '欢迎来到uiw',\\n        icon: 'smile',\\n        // 调用关闭菜单事件\\n        onClick: () => layouts.closeMenu(),\\n      },\\n      {\\n        title: '修改密码',\\n        icon: 'setting',\\n      },\\n    ],\\n    profile: {\\n      // 头像地址\\n      avatar: '',\\n      // 下拉菜单左侧内容\\n      menuLeft:<div style={{ marginRight: 15 }}>可做自定义dom</div>\\n    },\\n    // 调用刷新接口\\n    onReloadAuth: () => {},\\n    layouts,\\n  }\\n\\n  return <HashRouter window={window}>\\n      <BasicLayout {...basicLayoutProps} isDefaultContentStyle={false} routes={routerArrs}  >\\n        <LayoutTabs routes={routerArrs} /> \\n      </BasicLayout>\\n    </HashRouter>\\n}\\n\\nReactDOM.render(<BasicLayoutScreen />, _mount_);\\n```\\n\\n## 内容区域默认样式(isDefaultContentStyle)\\n\\n<!--rehype:bgWhite=true&codeSandbox=true&codePen=true-->\\n```jsx\\nwindow.SEARCH_MENU = true\\nimport React from 'react'\\nimport BasicLayout from '@uiw-admin/basic-layouts'\\nimport { HashRouter } from 'react-router-dom';\\nimport LayoutTabs from \\\"@uiw-admin/layout-tabs\\\"\\n\\nconst routerArrs =[\\n  {\\n    path: \\\"/basic-layouts\\\",\\n    name: \\\"查询表格\\\",\\n    element: <div>测试</div>,\\n  },\\n  {\\n    path: \\\"/layout-tabs\\\",\\n    name: \\\"查询表格2\\\",\\n    element: <div>测试2</div>,\\n  }\\n]\\n\\n\\nfunction BasicLayoutScreen() {\\n  return <HashRouter window={window}>\\n\\n    <div>不设置 isDefaultContentStyle 使用默认值(true)</div>\\n    \\n      <BasicLayout routes={routerArrs}  >\\n        <div style={{background:\\\"#fff\\\"}} >测试 isDefaultContentStyle 值不设置的情况下渲染样式</div>\\n      </BasicLayout>\\n      <br/>\\n      <div>设置 isDefaultContentStyle = false </div>\\n       <BasicLayout routes={routerArrs} isDefaultContentStyle={false}  >\\n        <div style={{background:\\\"#fff\\\"}} >测试 isDefaultContentStyle 值不设置的情况下渲染样式</div>\\n      </BasicLayout>\\n    </HashRouter>\\n}\\nReactDOM.render(<BasicLayoutScreen />, _mount_);\\n```\\n\\n\\n## 自定义退出\\n\\n通过隐藏系统默认的退出登录，自定义退出登录\\n\\n<!--rehype:bgWhite=true&codeSandbox=true&codePen=true-->\\n```tsx\\nwindow.SEARCH_MENU = true\\nimport React from 'react'\\nimport BasicLayout, {\\n  useLayouts,\\n} from '@uiw-admin/basic-layouts'\\nimport { HashRouter } from 'react-router-dom';\\nimport LayoutTabs from \\\"@uiw-admin/layout-tabs\\\"\\nconst routerArrs =[\\n  {\\n    path: \\\"/basic-layouts\\\",\\n    name: \\\"查询表格\\\",\\n    element: <div>测试</div>,\\n  },\\n  {\\n    path: \\\"/layout-tabs\\\",\\n    name: \\\"查询表格2\\\",\\n    element: <div>测试2</div>,\\n  }\\n]\\n\\nfunction BasicLayoutScreen() {\\n \\n  const layouts = useLayouts()\\n\\n\\n const basicLayoutProps = {\\n    // 右侧下拉菜单内容\\n    menus: [\\n      {\\n        title: '欢迎来到uiw',\\n        icon: 'smile',\\n        // 调用关闭菜单事件\\n        onClick: () => layouts.closeMenu(),\\n      },\\n      {\\n        title: '退出登录',\\n        icon: 'setting',\\n        onClick: () => { console.log('退出'); layouts.closeMenu() },\\n\\n      },\\n    ],\\n    profile: {\\n      // 头像地址\\n      avatar: '',\\n      // 下拉菜单左侧内容\\n      menuLeft:<div style={{ marginRight: 15 }}>可做自定义dom</div>\\n    },\\n    // 调用刷新接口\\n    onReloadAuth: () => {},\\n    layouts,\\n    hideReloadButton: true,\\n    hideUserInfo: true,\\n    hideLogoutButton: true\\n  }\\n\\n  return (\\n    <HashRouter window={window}>\\n      <BasicLayout {...basicLayoutProps} isDefaultContentStyle={false} routes={routerArrs}  >\\n        <LayoutTabs routes={routerArrs} /> \\n      </BasicLayout>\\n    </HashRouter>\\n  )\\n}\\nReactDOM.render(<BasicLayoutScreen />, _mount_);\\n\\n```\\n\\n\\n<!-- ## 参数\\n\\n```ts\\n\\nexport type BasicLayoutProps = {\\n  logo?: string;\\n  projectName?: string;\\n  /**\\n   * 页脚\\n   */\\n  footer?: React.ReactElement;\\n  /** 子集路由 */ \\n  routes?: RoutersProps[];\\n  children?: React.ReactNode;\\n  /** 头部 布局 */\\n  headerLayout?: \\\"top\\\" | \\\"default\\\",\\n  /** 头部背景色 */\\n  headerBackground?: string,\\n  /** 头部字体颜色 */\\n  headerFontColor?: string;\\n    /** 菜单隐藏 */\\n  menuHide?: boolean;\\n} & HeaderRightProps;\\n\\n\\nexport interface HeaderMenuItemsProps {\\n  title: React.ReactNode;\\n  icon: JSX.Element | string | false | null;\\n  onClick?: () => void;\\n  divider?: boolean;\\n  render?: React.ReactNode;\\n}\\n\\nexport interface HeaderRightProps {\\n  /**\\n   * 菜单\\n   */\\n  menus?: Array<HeaderMenuItemsProps>;\\n  /**\\n   * avatar 头像\\n   * userName 用户名\\n   * menuLeft 菜单左侧\\n   */\\n  profile?: {\\n    avatar?: string;\\n    userName?: string;\\n    menuLeft?: React.ReactElement;\\n  };\\n  // 重新加载权限\\n  onReloadAuth: () => void;\\n  layouts?: UseLayoutsProps;\\n}\\n\\nexport interface Params {\\n  headerRightvisible: boolean;\\n}\\n\\nexport interface UseLayoutsProps {\\n  headerRightvisible: boolean;\\n  closeMenu: () => void;\\n  updateStore: (datas: Params) => void;\\n}\\n\\n``` -->\\n## Props\\n\\n| 参数                  | 必填 | 类型                                                                                     | 默认值    | 说明                     |\\n| :-------------------- | :--- | :--------------------------------------------------------------------------------------- | :-------- | :----------------------- |\\n| logo                  | 否   | `string`                                                                                 |           | logo图标                 |\\n| projectName           | 否   | `string`                                                                                 |           | 项目名称                 |\\n| footer                | 否   | `React.ReactElement`                                                                     |           | 页脚                     |\\n| routes                | 否   | `RoutersProps[]`                                                                         |           | 菜单路由数据             |\\n| children              | 否   | `React.ReactNode`                                                                        |           | 内容                     |\\n| headerLayout          | 否   | `枚举类型：\\\"top\\\" \\\\| \\\"default\\\"`                                                           | `default` | 头部布局                 |\\n| headerBackground      | 否   | `string`                                                                                 | `\\\"#fff\\\"`  | 头部背景色               |\\n| headerFontColor       | 否   | `string`                                                                                 | `\\\"#000\\\"`  | 头部字体颜色             |\\n| menuHide              | 否   | `boolen`                                                                                 | `false`   | 头部字体颜色             |\\n| menus                 | 否   | `HeaderMenuItemsProps[]`                                                                 |           | 右侧点击头像展示菜单     |\\n| profile               | 否   | `{avatar(头像)?:string,userName(用户名)?:string,menuLeft(菜单左侧)?:React.ReactElement}` |           | 头像部分                 |\\n| onReloadAuth          | 否   | `() => void`                                                                             |           | 重新加载权限             |\\n| layouts               | 否   | `UseLayoutsProps`                                                                        |           | 右侧点击头像展示菜单配置 |\\n| isDefaultContentStyle | 否   | `boolean`                                                                                | `true`    | 内容区域默认样式展示     |\\n| hideReloadButton | 隐藏刷新权限按钮 | `Boolean` | `false` |\\n| hideLogoutButton | 隐藏退出登录按钮 | `Boolean` | `false` |\\n| hideUserInfo | 隐藏用户信息 | `Boolean` | `false` |\\n| onLogout     | 否   | `(navigate: NavigateFunction) => void` |  | 覆盖原始退出事件 | \\n\\n建议：在使用 `@uiw-admin/layout-tabs` 组件渲染的时候，建议 `isDefaultContentStyle` 设置为 `false`\\n\\n## useLayouts\\n\\n### response\\n| 参数               | 必填 | 类型                                             | 默认值 | 说明 |\\n| :----------------- | :--- | :----------------------------------------------- | :----- | :--- |\\n| headerRightvisible | 否   | `boolen`                                         |        |      |\\n| closeMenu          | 否   | `() => void`                                     |        |      |\\n| updateStore        | 否   | `(datas: {headerRightvisible: boolean}) => void` |        |      |\\n\\n## 贡献者\\n\\n感谢所有的贡献者，欢迎开发者为开源项目贡献力量。\\n\\n<a href=\\\"https://github.com/uiwjs/uiw-admin/graphs/contributors\\\">\\n  <img src=\\\"https://uiwjs.github.io/uiw-admin/CONTRIBUTORS.svg\\\" />\\n</a>\\n\\n## License\\n\\nLicensed under the MIT License.\\n\";"],"names":[],"sourceRoot":""}