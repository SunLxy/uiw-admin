{"version":3,"file":"static/js/524.53dddeed.chunk.js","mappings":"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","sources":["pages/Demo/search.tsx","pages/Demo/Detail/index.tsx","servers/demo.ts","pages/Demo/index.tsx","pages/Demo/columns.tsx","../../../packages/components/src/Skeleton/index.tsx","../../../packages/utils/src/request.ts","../../../packages/utils/src/utils.ts","../../../packages/components/src/ProTable/hooks.ts","../../../packages/components/src/ProTable/BaseTable.tsx","../../../packages/components/src/ProTable/index.tsx","../../../packages/components/src/ProTable/useTable.ts","../../../packages/components/src/ProDrawer/index.tsx"],"sourcesContent":["import React from 'react';\nimport { Form, Input, Row, Col, Button } from 'uiw'\n\ninterface SearchProps {\n  updateData: any;\n}\n\nconst Search = (props: SearchProps) => {\n  const { updateData } = props\n  return (\n    <Form\n      onSubmit={({ initial, current: fliter }) => updateData({ current: 1, filter: fliter })}\n      fields={{\n        name: {\n          labelClassName: 'fieldLabel',\n          labelStyle: { width: 60 },\n          inline: true,\n          label: '姓名',\n          children: <Input />\n        },\n        age: {\n          labelClassName: 'fieldLabel',\n          labelStyle: { width: 60 },\n          inline: true,\n          label: '名字',\n          children: <Input />\n        },\n        address: {\n          labelClassName: 'fieldLabel',\n          labelStyle: { width: 60 },\n          inline: true,\n          label: '地址',\n          children: <Input />\n        },\n      }}\n    >\n      {({ fields, state, canSubmit, resetForm }) => {\n        return (\n          <div>\n            <Row gutter={10} style={{ marginBottom: 10 }}>\n              <Col>{fields.name}</Col>\n              <Col>{fields.age}</Col>\n              <Col>{fields.address}</Col>\n            </Row>\n            <Row gutter={10}>\n              <Col />\n              <Col fixed align=\"bottom\">\n                <Button disabled={!canSubmit()} type=\"primary\" htmlType=\"submit\">搜索</Button>\n                <Button type=\"danger\" onClick={() => { resetForm(); updateData({ filter: {} }) }}> 重置 </Button>\n              </Col>\n            </Row>\n          </div>\n        )\n      }}\n    </Form>\n  );\n}\nexport default Search","import React from 'react';\nimport { ProDrawer } from '@uiw-admin/components'\nimport { Form, Input, Select, Row, Col, Button } from 'uiw'\nimport { useSelector } from 'react-redux';\nimport { RootState } from '@uiw-admin/models';\ninterface DetailProps {\n  updateData?: any\n}\n\nconst Detail = (props: DetailProps) => {\n\n  const { updateData } = props\n  const { demo: { drawerVisible, tableType } } = useSelector((state: RootState) => state);\n\n  const options = [\n    { value: 1, label: '苹果' },\n    { value: 2, label: '西瓜' },\n    { value: 3, label: '香蕉' },\n    { value: 4, label: '东北大冻梨' },\n  ]\n\n  return (\n    <ProDrawer\n      width={800}\n      title={tableType === 'add' ? '新增' : tableType === 'edit' ? '编辑' : '编辑'}\n      visible={drawerVisible}\n      onClose={() => updateData({ drawerVisible: false })}\n      buttons={[\n        {\n          label: \"取消\",\n          type: \"danger\",\n          onPress: () => updateData({ drawerVisible: false })\n        },\n      ]}\n    >\n      <Form\n        onSubmit={({ initial, current }) => {\n          console.log('current', current);\n        }}\n        fields={{\n          firstName: {\n            labelClassName: 'fieldLabel',\n            labelStyle: { width: 60 },\n            inline: true,\n            label: '姓氏',\n            initialValue: '周',\n            children: <Input />\n          },\n          lastName: {\n            labelClassName: 'fieldLabel',\n            labelStyle: { width: 60 },\n            initialValue: '先生',\n            inline: true,\n            label: '名字',\n            children: <Input />\n          },\n          email: {\n            labelClassName: 'fieldLabel',\n            labelStyle: { width: 60 },\n            validator: (currentValue) => {\n              return currentValue && currentValue.length < 2 ? 'Password must be 8+ characters' : null;\n            },\n            initialValue: '42309872@qq.com',\n            inline: true,\n            label: 'Email',\n            children: <Input />\n          },\n          select: {\n            labelClassName: 'fieldLabel',\n            labelStyle: { width: 60 },\n            initialValue: 4,\n            inline: true,\n            label: '选择器',\n            children: (\n              <Select>\n                <Select.Option>请选择</Select.Option>\n                {options.map(({ label, value }) => <Select.Option value={value} key={value}>{label}</Select.Option>)}\n              </Select>\n            ),\n          },\n        }}\n      >\n        {({ fields, state, canSubmit }) => {\n          return (\n            <div>\n              <Row gutter={10} style={{ marginBottom: 10 }}>\n                <Col>{fields.firstName}</Col>\n                <Col>{fields.lastName}</Col>\n                <Col>{fields.email}</Col>\n              </Row>\n              <Row gutter={10}>\n                <Col>{fields.select}</Col>\n              </Row>\n              <Row gutter={10}>\n                <Col />\n                <Col fixed align=\"bottom\"><Button disabled={!canSubmit()} type=\"primary\" htmlType=\"submit\">提交</Button></Col>\n              </Row>\n            </div>\n          )\n        }}\n      </Form>\n    </ProDrawer>\n  )\n}\n\nexport default Detail","import request from '../utils/request';\n\n\nexport function selectDemoPage(params: any) {\n  return request('/api/selectDemoPage', {\n    method: 'POST',\n    body: { ...params },\n  });\n}","import React from 'react';\nimport { Row, Col, Button, Card, Table, Pagination, Loader } from 'uiw'\nimport { useSelector, useDispatch } from 'react-redux';\nimport { RootState, Dispatch } from '@uiw-admin/models';\nimport { columns } from './columns';\nimport Search from './search'\nimport Detail from './Detail'\nimport { useRequest } from 'ahooks'\nimport { selectDemoPage } from '../../servers/demo'\n\nconst Demo = () => {\n  const dispatch = useDispatch<Dispatch>();\n\n  const { demo: { current, pageSize, total, dataSource, filter } } = useSelector((state: RootState) => state);\n\n  const updateData = (payload: any) => {\n    dispatch({\n      type: 'demo/updateState',\n      payload,\n    });\n  };\n\n   // 分页请求\n  const { run, loading } = useRequest(selectDemoPage, {\n    manual: true,\n    onSuccess: (res) => {\n      if (res?.code === 200) {\n        const { data } = res\n        updateData({\n          dataSource: data?.rows || [],\n          total: data?.total\n        })\n      }\n    },\n  });\n\n  React.useEffect(() => {\n    run({\n      page: current,\n      pageSize,\n      queryData: filter\n    })\n  }, [current, filter, pageSize, run])\n\n  // 操作\n  function handleEditTable(type: string, record: any) {\n    updateData({\n      isView: type === 'view',\n      tableType: type\n    })\n    if (type === 'add' || type === 'view' || type === 'edit') {\n      updateData({ drawerVisible: true })\n    }\n  }\n\n  return (\n    <Loader loading={loading} size=\"large\" style={{ display: 'block' }} >\n      <React.Fragment>\n        <Card>\n          <Search updateData={updateData} />\n        </Card>\n        <div style={{ marginTop: 14 }} />\n        <Card>\n          <Row gutter={10}>\n            <Col>\n              <Button style={{ width: 60 }} type=\"primary\" onClick={handleEditTable.bind(this, 'add')}>新增</Button>\n              <Button style={{ width: 60 }} type=\"danger\" onClick={handleEditTable.bind(this, 'export')}> 导出 </Button>\n              <Button style={{ width: 60 }} type=\"light\" onClick={handleEditTable.bind(this, 'export')}> 导入 </Button>\n            </Col>\n          </Row>\n        </Card>\n        <div style={{ marginTop: 14 }} />\n        <Card>\n          <Table\n            columns={columns({ handleEditTable: handleEditTable })}\n            data={dataSource}\n            footer={<Pagination current={current} pageSize={pageSize} total={total} divider onChange={(current: number, _: any, pageSize: number) => updateData({ current, pageSize })} />}\n          />\n        </Card>\n        <Detail updateData={updateData} />\n      </React.Fragment>\n    </Loader>\n  );\n}\nexport default Demo","import React from 'react';\nimport { Button } from 'uiw'\n\ninterface attrProps {\n  handleEditTable: (type: string, record: any) => void\n}\n\nexport const columns = (attr: attrProps) => [\n  {\n    title: '姓名',\n    key: 'name',\n  },\n  {\n    title: '年龄',\n    key: 'age',\n  },\n  {\n    title: '地址',\n    key: 'info',\n  },\n  {\n    title: '操作',\n    key: 'edit',\n    width: 98,\n    render: () => (\n      <div>\n        <Button size=\"small\" type=\"danger\" onClick={attr.handleEditTable.bind(this, 'edit')}>编辑</Button>\n        <Button size=\"small\" type=\"success\" onClick={attr.handleEditTable.bind(this, 'view')}>查看</Button>\n      </div>\n    ),\n  },\n]","import React from 'react';\nimport { Loader } from 'uiw';\n\ninterface SkeletonProps {\n  children: React.ReactNode;\n  loading?: boolean;\n}\n\nconst Skeleton: React.FC<SkeletonProps> = ({ children, loading = false }) => {\n  return (\n    <Loader\n      loading={loading}\n      style={{ display: 'block', }}\n      // fullscreen={true}\n      bgColor=\"rgba(255, 255, 255, 0.4)\"\n    >\n      <>{children}</>\n    </Loader>\n  );\n};\n\nexport default Skeleton;\n","import axios, { AxiosRequestConfig } from 'axios';\n// import history from '../routes/history';\nimport { splitUrl } from './utils';\n\n// Get the current location.\n// const location = history.location;\nconst codeMessage = {\n  200: '服务器成功返回请求的数据。',\n  201: '新建或修改数据成功。',\n  202: '一个请求已经进入后台排队（异步任务）。',\n  204: '删除数据成功。',\n  400: '发出的请求有错误，服务器没有进行新建或修改数据的操作。',\n  401: '用户没有权限（令牌、用户名、密码错误）。',\n  403: '用户得到授权，但是访问是被禁止的。',\n  404: '发出的请求针对的是不存在的记录，服务器没有进行操作。',\n  406: '请求的格式不可得。',\n  410: '请求的资源被永久删除，且不会再得到的。',\n  422: '当创建一个对象时，发生一个验证错误。',\n  500: '服务器发生错误，请检查服务器。',\n  502: '网关错误。',\n  503: '服务不可用，服务器暂时过载或维护。',\n  504: '网关超时。',\n};\n\nexport interface Options extends AxiosRequestConfig {\n  body?: any;\n}\n\n/**\n * Requests a URL, returning a promise.\n *\n * @param  {string} url       The URL we want to request\n * @param  {object} [options] The options we want to pass to \"fetch\"\n * @return {object}           An object containing either \"data\" or \"err\"\n */\nexport default function request(url: string, options: Options = {}) {\n  const method = options.method || 'GET';\n  const newOptions: Options = {\n    url,\n    method,\n    data: options.body,\n    headers: {\n      'Content-Type': 'application/json; charset=utf-8',\n      Accept: 'application/json',\n    },\n  };\n\n  if (/(GET)/.test(method)) {\n    newOptions.url = splitUrl(url, { ...options.body });\n    delete newOptions.body;\n  }\n\n  return axios\n    .request(newOptions)\n    .then((response) => {\n      return response.data;\n    })\n    .catch((err) => {\n      const response = err.response;\n      if (response.status >= 200 && response.status < 300) {\n        return response;\n      }\n      const status = response.status;\n      const errortext = (codeMessage as any)[status] || response.statusText;\n      // Notification.error({\n      //   message: '错误提示：',\n      //   description: (response.data && response.data.info) || '没有错误提示',\n      // });\n      const error = new Error(errortext);\n      error.name = response.status;\n      // error.response = response;\n      if (response.data) {\n        return response.data;\n      }\n      throw error;\n    });\n}\n","// 拼接url参数\nexport function splitUrl(url: string, options: { [x: string]: any }) {\n  let urlNew = url;\n  const paramsArray: string[] = [];\n  // Object.keys(options).forEach(key => paramsArray.push(key + '=' + options[key]));\n  Object.keys(options).forEach((key) =>\n    paramsArray.push(`${key}=${options[key]}`),\n  );\n  if (Object.keys(options).length === 0) {\n    return url;\n  }\n  if (/\\?/.test(urlNew) === false) {\n    urlNew = `${urlNew}?${paramsArray.join('&')}`;\n  } else {\n    urlNew += `&${paramsArray.join('&')}`;\n  }\n  return urlNew;\n}\n","import {\n  useContext,\n  createContext,\n} from 'react';\n\nexport const StoreCtx = createContext({\n  data: []\n});\n\n\nexport const useStore = () => {\n  return useContext(StoreCtx);\n};\n\n\n\n","import React, { useState, useEffect } from 'react';\nimport useSWR from 'swr';\nimport { Table, Pagination, TableColumns } from 'uiw';\nimport { request } from '@uiw-admin/utils';\nimport { useStore } from './hooks'\n\ninterface BaseTableProps {\n  style?: React.CSSProperties,\n  columns: TableColumns[];\n}\n\nconst BaseTable: React.FC<BaseTableProps> = ({ style, columns}) => {\n  const [pageIndex, setPageIndex] = useState(1);\n\n  const pageSize = 10;\n\n  const store = useStore()\n\n  let {\n    formatData,\n    updateStore,\n    query,\n    key\n  } = store\n\n  const formatQuery = () => {\n    if (query) {\n      return query(pageIndex, pageSize)\n    } else {\n      // 默认传参\n      return {\n        page: pageIndex,  pageSize\n      }\n    }\n  }\n\n  const { data, error, isValidating } = useSWR(\n    [key, { method: 'POST', body: formatQuery() }],\n    request,\n  );\n\n  useEffect(() => {\n    updateStore({\n      data: data?.data,\n      total: data?.total\n    })\n  }, [JSON.stringify(data)])\n\n\n\n  return (\n    <Table\n      columns={columns}\n      data={formatData && data ? formatData(data).data : data?.data}\n      style={style}\n      footer={\n        <Pagination\n          current={pageIndex}\n          pageSize={pageSize}\n          total={formatData && data ? formatData(data).total : data?.total}\n          divider\n          onChange={(page) => {\n            setPageIndex(page);      \n          }}\n        />\n      }\n    />\n  );\n}\n\nexport default BaseTable","import React, { useState, useMemo } from 'react';\nimport { Button, Input, Form, ButtonProps, Row, Col, TableColumns } from 'uiw';\nimport Skeleton from '../Skeleton';\nimport Table from './BaseTable';\nimport { StoreCtx } from './hooks';\nimport { useTableData } from './useTable';\n\n// interface BtnItem extends ButtonProps{\n//   label: React.ReactNode;\n// };\ninterface ProtableProps {\n  table: useTableData;\n  btns?: Array<ButtonProps>;\n  columns: TableColumns[];\n}\n\nconst ProTabel: React.FC<ProtableProps> = ({ table, columns, btns = [] }) => {\n  const { key, data, reset, refersh, updateStore, formatData, query } = table;\n\n  const store = useMemo(\n    () => ({\n      data: [],\n      reset,\n      refersh,\n      key,\n      updateStore,\n      formatData,\n      query,\n    }),\n    [JSON.stringify(data), reset, refersh, key, updateStore, formatData, query],\n  );\n\n  return (\n    <StoreCtx.Provider value={store}>\n      <Skeleton>\n        <Form\n          style={{ background: '#fff', paddingBottom: 5 }}\n          resetOnSubmit={false}\n          onSubmit={({ initial, current }) => {}}\n          onSubmitError={(error) => {\n            if (error.filed) {\n              return { ...error.filed };\n            }\n            return null;\n          }}\n          fields={{\n            username: {\n              labelClassName: 'fieldLabel',\n              labelStyle: { width: 160 },\n              labelFor: 'username',\n              label: '用户名',\n              children: (\n                <Input\n                  preIcon=\"user\"\n                  id=\"username\"\n                  placeholder=\"用户名: admin\"\n                />\n              ),\n            },\n            password: {\n              labelClassName: 'fieldLabel',\n              labelStyle: { width: 60 },\n              label: '用户名',\n              labelFor: 'password',\n              children: (\n                <Input\n                  preIcon=\"lock\"\n                  id=\"password\"\n                  type=\"password\"\n                  placeholder=\"密码: admin\"\n                />\n              ),\n            },\n          }}\n        >\n          {({ fields, state, canSubmit, resetForm }) => {\n            return (\n              <div>\n                <Row gutter={10}>\n                  <Col fixed>{fields.username}</Col>\n                  <Col fixed>{fields.password}</Col>\n                  <Col style={{ marginTop: 31 }}>\n                    <Button\n                      disabled={!canSubmit()}\n                      type=\"primary\"\n                      htmlType=\"submit\"\n                    >\n                      提交\n                    </Button>\n                    <Button type=\"danger\" onClick={resetForm}>\n                      重置表单\n                    </Button>\n                  </Col>\n                </Row>\n              </div>\n            );\n          }}\n        </Form>\n        {/* 操作区域 */}\n        {\n          btns.length > 0 &&   <div style={{ marginTop: 14, background: '#fff', padding: 10 }}>\n          {btns.map((btn: any, idx) => (\n            <Button key={idx.toString()} style={{ marginRight: 5 }} {...btn}>\n              {btn.label}\n            </Button>\n          ))}\n        </div>\n        }\n      \n        {/* 列表组件 */}\n        <Table columns={columns} />\n      </Skeleton>\n    </StoreCtx.Provider>\n  );\n};\n\nexport default ProTabel;\n","import { useRef, useState } from 'react'\n\ntype Result = {\n  total: number,\n  data:  Record<string, string | number | JSX.Element>[];\n}\n\n\n\ntype Params = {\n  formatData?: (res: any) => Result,\n  query?: (pageIndex: number, pageSize: number) => ({\n    [key: string]: any\n  })\n}\n\n\nexport interface useTableData extends Params {\n  data:  Record<string, string | number | JSX.Element>[],\n  total: number,\n  key: string,\n  reset: () => void,\n  refersh: () => void,\n  updateStore: (p: stateParams) => void\n  \n}\n\ntype stateParams = {\n  data?:  Record<string, string | number | JSX.Element>[],\n  total?: number,\n  selectChecked?: [],\n  selectCheckedRows?: [],\n}\n\nconst useTable = (key: string, params: Params = {}): useTableData => {\n\n  // const tableRef = useRef(null)\n  const { formatData, query } = params\n\n\n  const [state, setState] = useState<any>({\n     // 总页数\n    total: 1,\n    // 当前table数据源\n    data: [],\n    // 选中的行\n    selectChecked: [],\n    selectCheckedRows: [],\n  });\n  \n  const updateStore = (datas: stateParams) => {\n    setState({\n      ...state,\n      ...datas,\n    })\n  }\n\n  return {\n    key,\n    // 重置\n    reset: () => {\n\n    },\n    // 刷新当前页数据\n    refersh: () => {\n\n    },\n    formatData,\n    query,\n    updateStore,\n    ...state,\n  }\n}\n\n\nexport default useTable","import React, { memo } from 'react';\nimport { Drawer, Button, DrawerProps, Row, Col } from 'uiw';\n\n/**\n * ProDrawer 组件继承于https://uiwjs.github.io/#/components/drawer\n * @param {boolean} visible 显示隐藏\n * @param {string} title 标题\n * @param {()=>void} onClose 关闭事件\n * @param {number} width Drawer宽\n * @param {Array<{label?:string,onPress?:()=>void,show?:boolean,loading?:boolean}>} buttons 按钮集合(label:\"文本\",onPress:点击事件,show:是否展示)\n * @param {React.ReactNode} children\n * @returns\n */\n\ninterface ButtonItemsProps {\n  label?: string;\n  onPress?: () => void;\n  show?: boolean;\n  size?: 'large' | 'default' | 'small';\n  type?: 'primary' | 'success' | 'warning' | 'danger' | 'light' | 'dark' | 'link';\n  loading?: boolean;\n  width?: number\n}\n\ninterface ProDrawerProps extends DrawerProps {\n  visible: boolean;\n  title?: string;\n  onClose?: any;\n  width?: number;\n  buttons?: Array<ButtonItemsProps>;\n  children?: React.ReactNode\n}\nfunction ProDrawer(props: ProDrawerProps) {\n  const { visible, title = '', onClose = null, width = 800, buttons = [], children, ...others } = props\n  return (\n    <Drawer\n      title={title}\n      isOpen={visible}\n      onClose={onClose && onClose}\n      size={width}\n      bodyStyle={{ padding: '0 10px 45px 10px' }}\n      {...others}\n      footer={\n        buttons.map(\n          ({ label = '', onPress, show = true, loading, type = \"primary\", width = 60, size = \"default\" }, idx) =>\n            show && (\n              <Button\n                style={{ width: width }}\n                key={idx}\n                type={type}\n                size={size}\n                onClick={onPress && onPress}\n                loading={loading}\n              >\n                {label}\n              </Button>\n            )\n        )\n      }\n    >\n      {children}\n    </Drawer>\n  );\n}\n\nexport default memo(ProDrawer);\n"],"names":["props","updateData","onSubmit","initial","fliter","current","filter","fields","name","labelClassName","labelStyle","width","inline","label","children","age","address","canSubmit","state","resetForm","gutter","style","marginBottom","fixed","align","disabled","type","htmlType","onClick","useSelector","demo","drawerVisible","tableType","title","visible","onClose","buttons","onPress","console","log","firstName","initialValue","lastName","email","validator","currentValue","length","select","value","map","selectDemoPage","params","request","method","body","attr","dispatch","useDispatch","pageSize","total","dataSource","payload","useRequest","manual","onSuccess","res","code","data","rows","run","loading","handleEditTable","record","isView","React","page","queryData","size","display","marginTop","bind","columns","key","render","footer","divider","onChange","_","bgColor","codeMessage","url","options","newOptions","headers","Accept","test","urlNew","paramsArray","Object","splitUrl","response","err","status","errortext","error","Error","StoreCtx","createContext","useState","store","useContext","useSWR","query","pageIndex","isValidating","useEffect","updateStore","JSON","formatData","setPageIndex","btns","useMemo","reset","refersh","Provider","background","paddingBottom","resetOnSubmit","onSubmitError","username","labelFor","preIcon","id","placeholder","password","padding","marginRight","btn","idx","selectChecked","selectCheckedRows","datas","setState","ProDrawer","isOpen","bodyStyle","show","memo"],"sourceRoot":""}