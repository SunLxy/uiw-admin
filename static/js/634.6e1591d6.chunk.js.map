{"version":3,"file":"static/js/634.6e1591d6.chunk.js","mappings":"+GAAA","sources":["../../../packages/config/README.md"],"sourcesContent":["export default \"@uiw-admin/config\\n===\\n\\n简化 `.kktrc` 配置，默认集成 `@uiw-admin/plugins`、`@kkt/less-modules`、`@kkt/raw-modules`、`@kkt/scope-plugin-options` 依赖包。\\n其他配置查询[`kkt`](https://github.com/kktjs/kkt)\\n\\n## Installation\\n\\n```bash\\nnpm i @uiw-admin/config -D\\n```\\n\\n## 参数\\n\\n```ts\\nexport type ConfFun = (conf: WebpackConfiguration, evn: string, options?: LoaderConfOptions | undefined) => WebpackConfiguration\\n\\nexport type PluginsType = (\\n  | ((this: webpack.Compiler, compiler: webpack.Compiler) => void)\\n  | webpack.WebpackPluginInstance\\n  | [string, Record<string, any>]\\n  | string\\n)[];\\n\\nexport type KKTPlugins = (\\n  | ConfFun\\n  | {\\n    loader?: ConfFun;\\n    options?: LoaderConfOptions | undefined | Record<string, any>;\\n  }\\n  | string\\n  | [string, Record<string, any>]\\n)[]\\nexport type DefaultDefineType = {\\n  /** 权限校验  默认 true */\\n  AUTH?: string | boolean;\\n  /** 路由 跳转前缀 默认 \\\"/\\\" */\\n  BASE_NAME?: string;\\n  /** 本地存储使用 localStorage 还是  sessionStorage  */\\n  STORAGE?: string;\\n  /** 版本  */\\n  VERSION?: string;\\n};\\n\\nexport interface ConfigProps extends Omit<WebpackConfiguration, 'plugins'> {\\n  /**\\n   * 别名\\n   * 默认系统内置两个别名\\n   * 1. `@` 指向 src 目录\\n   * 2. `@@` 指向 src/.uiw 目录\\n   */\\n  alias?: Record<string, string | false | string[]>;\\n  /** 插件 */\\n  plugins?:PluginsType;\\n  /** 默认全局变量 define ， 📢 注意：对象的属性值会经过一次 JSON.stringify 转换   */\\n  define?: Record<string, any> & DefaultDefineType;\\n   /**\\n    * kkt plugin \\n    * @deprecated 推荐使用 `kktPlugins`\\n    */\\n  loader?:KKTPlugins;\\n   /**  kkt plugin  */\\n  kktPlugins?: KKTPlugins;\\n  /** 项目前缀 */\\n  publicPath?: string;\\n  /**\\n   * 提供回调函数，更改 webpack 的最终配置。\\n   * @deprecated 推荐使用 `overrideWebpack`\\n   */\\n  moreConfig?: ConfFun;\\n  /** 提供回调函数，更改 webpack 的最终配置。 */\\n  overrideWebpack?: ConfFun;\\n  /** 输出 */\\n  output?: Omit<WebpackConfiguration['output'], 'publicPath'>;\\n}\\n```\\n\\n## kktPlugins \\n\\n[`KKT`](https://github.com/kktjs/kkt) 的 plugin\\n\\n```ts\\nimport defaultConfig, { WebpackConfiguration } from \\\"@uiw-admin/config\\\";\\n\\nexport default defaultConfig({\\n  // ....\\n   kktPlugins: [\\n    rawModules,\\n    { loader: scopePluginOptions, options: { allowedFiles: [path.resolve(process.cwd(), 'README.md')] } },\\n    lessModules\\n  ],\\n})\\n```\\n\\n## overrideWebpack\\n\\n通过 [`KKT`](https://github.com/kktjs/kkt) 的 API 修改 webpack 配置。\\n\\n```ts\\nimport defaultConfig, { WebpackConfiguration } from \\\"@uiw-admin/config\\\";\\n\\nexport default defaultConfig({\\n  // ....\\n  overrideWebpack: (conf: WebpackConfiguration) => {\\n    conf.output = { ...conf.output, publicPath: './' };\\n    return conf\\n  }\\n})\\n```\\n\\n## define\\n\\n用于提供给代码中可用的变量。下面是自带默认值：\\n\\n```ts\\n/** 全局默认公共参数  */\\nexport const defaultDefine = {\\n  /** 权限校验  默认 true */\\n  AUTH: JSON.stringify(true),\\n  /** 路由 跳转前缀 默认 \\\"/\\\" */\\n  BASE_NAME: JSON.stringify(\\\"/\\\"),\\n  /** 本地存储使用 localStorage 还是  sessionStorage  可选值 local | session */\\n  STORAGE: JSON.stringify(\\\"session\\\")\\n  /** 版本  */\\n  VERSION: JSON.stringify(\\n    require(path.resolve(process.cwd(), './package.json')).version || '0',\\n  ),\\n}\\n```\\n\\n## alias\\n\\n配置别名，对引用路径进行映射。\\n\\n```ts\\nimport config from \\\"@uiw-admin/config\\\"\\nexport default config({\\n  alias: {\\n    foo: '/tmp/a/b/foo',\\n  },\\n  //  ...\\n})\\n```\\n\\n内置了以下别名：\\n\\n- `@`，项目 `src` 目录\\n- `@@`，临时目录，通常是 `src/.uiw` 目录\\n\\n## plugins 参数说明\\n\\n1. 使用的先行条件--插件需要默认导出是一个 class 类，符合`webpack` 的 `plugins`规范，\\n2. 一维数组时，直接把字符串当成包名进行加载，使用`require`进行引入后直接`new`\\n3. 二维数组时，直接把数组第一项当成包进行加载，使用`require`进行引入后`new`的时候把 第二项当成参数进行传递到包内部 \\n4. `webpack` 原始的 [`plugins`](https://webpack.docschina.org/concepts/plugins/#usage) 类型\\n\\n```ts\\nclass DemoWebpackPlugin {\\n  constructor(){\\n    // ...\\n  }\\n  apply(compiler: webpack.Compiler) {\\n    compiler.hooks.afterPlugins.tap(\\\"DemoWebpackPlugin\\\", () => {\\n      // ...\\n    })\\n  }\\n}\\n```\\n\\n## kktPlugins (~~旧loader~~) 参数说明\\n\\n1. 使用的先行条件--需要默认导出是一个函数方法,返回类型为`webpack.Configuration `的函数\\n2. 一维数组时，直接把字符串当成包名进行加载，使用`require`进行引入后直接方法调用\\n3. 二维数组时，直接把数组第一项当成包进行加载，使用`require`进行引入后调用的时候把 第二项当成参数进行传递到包内部 \\n\\n```ts\\nexport default (conf: Configuration, env: string, options = {} as ReactLibraryOptions): Configuration => {\\n  conf.output = { ...conf.output, publicPath: './' };\\n  return conf\\n};\\n```\\n\\n## 配置案例\\n\\n⚠️ 注意：使用自定义 `plugins` 和 `loader` 时，请安装对应包。官方默认的 `@uiw-admin/plugins-**` 和 `loader` (`@kkt/*`) 不需要安装。\\n\\n### ~~旧的配置案例~~\\n\\n不推荐旧的配置案例，使用新的配置案例，它将变得更简单。\\n\\n```ts\\nimport defaultConfig from \\\"@uiw-admin/config\\\"\\nimport { RematchWebpackPlugin, RoutesWebpackPlugin } from '@uiw-admin/plugins'\\nimport lessModules from '@kkt/less-modules'\\nimport rawModules from '@kkt/raw-modules'\\nimport scopePluginOptions from '@kkt/scope-plugin-options'\\nexport default defaultConfig({\\n  define: {\\n    VERSION: JSON.stringify(pkg.version),\\n    // BASE_NAME: \\\"/uiw\\\"\\n  },\\n  plugins: [new RematchWebpackPlugin(), new RoutesWebpackPlugin()],\\n  // publicPath: process.env.NODE_ENV === \\\"development\\\" ? \\\"/\\\" : \\\"/uiw/\\\",\\n  loader: [\\n    rawModules,\\n    { loader: scopePluginOptions, options: { allowedFiles: [path.resolve(process.cwd(), 'README.md')] } },\\n    lessModules\\n  ],\\n})\\n```\\n\\n### 新配置案例（推荐）\\n\\n```ts\\nimport defaultConfig from \\\"@uiw-admin/config\\\"\\nexport default defaultConfig({\\n  define: {\\n    STORAGE: 'local',\\n  },\\n  plugins: [\\\"@uiw-admin/plugins-rematch\\\", \\\"@uiw-admin/plugins-routes\\\"],\\n  kktPlugins: [\\n    \\\"@kkt/raw-modules\\\",\\n    \\\"@kkt/less-modules\\\",\\n    [\\\"@kkt/scope-plugin-options\\\", { \\\"allowedFiles\\\": \\\"./README.md\\\" }],\\n  ],\\n})\\n```\\n\\n## 贡献者\\n\\n感谢所有的贡献者，欢迎开发者为开源项目贡献力量。\\n\\n<a href=\\\"https://github.com/uiwjs/uiw-admin/graphs/contributors\\\">\\n  <img src=\\\"https://uiwjs.github.io/uiw-admin/CONTRIBUTORS.svg\\\" />\\n</a>\\n\\n## License\\n\\nLicensed under the MIT License.\\n\";"],"names":[],"sourceRoot":""}