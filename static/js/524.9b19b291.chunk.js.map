{"version":3,"file":"static/js/524.9b19b291.chunk.js","mappings":"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","sources":["pages/Demo/search.tsx","pages/Demo/Detail/index.tsx","servers/demo.ts","pages/Demo/index.tsx","pages/Demo/columns.tsx","../../../packages/components/src/ProTable/index.tsx","../../../packages/components/src/ProDrawer/index.tsx"],"sourcesContent":["import React from 'react';\nimport { Form, Input, Row, Col, Button } from 'uiw'\n\ninterface SearchProps {\n  updateData: any;\n}\n\nconst Search = (props: SearchProps) => {\n  const { updateData } = props\n  return (\n    <Form\n      onSubmit={({ initial, current: fliter }) => updateData({ current: 1, filter: fliter })}\n      fields={{\n        name: {\n          labelClassName: 'fieldLabel',\n          labelStyle: { width: 60 },\n          inline: true,\n          label: '姓名',\n          children: <Input />\n        },\n        age: {\n          labelClassName: 'fieldLabel',\n          labelStyle: { width: 60 },\n          inline: true,\n          label: '名字',\n          children: <Input />\n        },\n        address: {\n          labelClassName: 'fieldLabel',\n          labelStyle: { width: 60 },\n          inline: true,\n          label: '地址',\n          children: <Input />\n        },\n      }}\n    >\n      {({ fields, state, canSubmit, resetForm }) => {\n        return (\n          <div>\n            <Row gutter={10} style={{ marginBottom: 10 }}>\n              <Col>{fields.name}</Col>\n              <Col>{fields.age}</Col>\n              <Col>{fields.address}</Col>\n            </Row>\n            <Row gutter={10}>\n              <Col />\n              <Col fixed align=\"bottom\">\n                <Button disabled={!canSubmit()} type=\"primary\" htmlType=\"submit\">搜索</Button>\n                <Button type=\"danger\" onClick={() => { resetForm(); updateData({ filter: {} }) }}> 重置 </Button>\n              </Col>\n            </Row>\n          </div>\n        )\n      }}\n    </Form>\n  );\n}\nexport default Search","import React from 'react';\nimport { ProDrawer } from '@uiw-admin/components'\nimport { Form, Input, Select, Row, Col, Button } from 'uiw'\nimport { useSelector } from 'react-redux';\nimport { RootState } from '@uiw-admin/models';\ninterface DetailProps {\n  updateData?: any\n}\n\nconst Detail = (props: DetailProps) => {\n\n  const { updateData } = props\n  const { demo: { drawerVisible, tableType } } = useSelector((state: RootState) => state);\n\n  const options = [\n    { value: 1, label: '苹果' },\n    { value: 2, label: '西瓜' },\n    { value: 3, label: '香蕉' },\n    { value: 4, label: '东北大冻梨' },\n  ]\n\n  return (\n    <ProDrawer\n      width={800}\n      title={tableType === 'add' ? '新增' : tableType === 'edit' ? '编辑' : '编辑'}\n      visible={drawerVisible}\n      onClose={() => updateData({ drawerVisible: false })}\n      buttons={[\n        {\n          label: \"取消\",\n          type: \"danger\",\n          onPress: () => updateData({ drawerVisible: false })\n        },\n      ]}\n    >\n      <Form\n        onSubmit={({ initial, current }) => {\n          console.log('current', current);\n        }}\n        fields={{\n          firstName: {\n            labelClassName: 'fieldLabel',\n            labelStyle: { width: 60 },\n            inline: true,\n            label: '姓氏',\n            initialValue: '周',\n            children: <Input />\n          },\n          lastName: {\n            labelClassName: 'fieldLabel',\n            labelStyle: { width: 60 },\n            initialValue: '先生',\n            inline: true,\n            label: '名字',\n            children: <Input />\n          },\n          email: {\n            labelClassName: 'fieldLabel',\n            labelStyle: { width: 60 },\n            validator: (currentValue) => {\n              return currentValue && currentValue.length < 2 ? 'Password must be 8+ characters' : null;\n            },\n            initialValue: '42309872@qq.com',\n            inline: true,\n            label: 'Email',\n            children: <Input />\n          },\n          select: {\n            labelClassName: 'fieldLabel',\n            labelStyle: { width: 60 },\n            initialValue: 4,\n            inline: true,\n            label: '选择器',\n            children: (\n              <Select>\n                <Select.Option>请选择</Select.Option>\n                {options.map(({ label, value }) => <Select.Option value={value} key={value}>{label}</Select.Option>)}\n              </Select>\n            ),\n          },\n        }}\n      >\n        {({ fields, state, canSubmit }) => {\n          return (\n            <div>\n              <Row gutter={10} style={{ marginBottom: 10 }}>\n                <Col>{fields.firstName}</Col>\n                <Col>{fields.lastName}</Col>\n                <Col>{fields.email}</Col>\n              </Row>\n              <Row gutter={10}>\n                <Col>{fields.select}</Col>\n              </Row>\n              <Row gutter={10}>\n                <Col />\n                <Col fixed align=\"bottom\"><Button disabled={!canSubmit()} type=\"primary\" htmlType=\"submit\">提交</Button></Col>\n              </Row>\n            </div>\n          )\n        }}\n      </Form>\n    </ProDrawer>\n  )\n}\n\nexport default Detail","import request from '../utils/request';\n\n\nexport function selectDemoPage(params: any) {\n  return request('/api/selectDemoPage', {\n    method: 'POST',\n    body: { ...params },\n  });\n}","import React from 'react';\nimport { Row, Col, Button, Card, Table, Pagination, Loader } from 'uiw'\nimport { useSelector, useDispatch } from 'react-redux';\nimport { RootState, Dispatch } from '@uiw-admin/models';\nimport { columns } from './columns';\nimport Search from './search'\nimport Detail from './Detail'\nimport { useRequest } from 'ahooks'\nimport { selectDemoPage } from '../../servers/demo'\n\nconst Demo = () => {\n  const dispatch = useDispatch<Dispatch>();\n\n  const { demo: { current, pageSize, total, dataSource, filter } } = useSelector((state: RootState) => state);\n\n  const updateData = (payload: any) => {\n    dispatch({\n      type: 'demo/updateState',\n      payload,\n    });\n  };\n\n   // 分页请求\n  const { run, loading } = useRequest(selectDemoPage, {\n    manual: true,\n    onSuccess: (res) => {\n      if (res?.code === 200) {\n        const { data } = res\n        updateData({\n          dataSource: data?.rows || [],\n          total: data?.total\n        })\n      }\n    },\n  });\n\n  React.useEffect(() => {\n    run({\n      page: current,\n      pageSize,\n      queryData: filter\n    })\n  }, [current, filter, pageSize, run])\n\n  // 操作\n  function handleEditTable(type: string, record: any) {\n    updateData({\n      isView: type === 'view',\n      tableType: type\n    })\n    if (type === 'add' || type === 'view' || type === 'edit') {\n      updateData({ drawerVisible: true })\n    }\n  }\n\n  return (\n    <Loader loading={loading} size=\"large\" style={{ display: 'block' }} >\n      <React.Fragment>\n        <Card>\n          <Search updateData={updateData} />\n        </Card>\n        <div style={{ marginTop: 14 }} />\n        <Card>\n          <Row gutter={10}>\n            <Col>\n              <Button style={{ width: 60 }} type=\"primary\" onClick={handleEditTable.bind(this, 'add')}>新增</Button>\n              <Button style={{ width: 60 }} type=\"danger\" onClick={handleEditTable.bind(this, 'export')}> 导出 </Button>\n              <Button style={{ width: 60 }} type=\"light\" onClick={handleEditTable.bind(this, 'export')}> 导入 </Button>\n            </Col>\n          </Row>\n        </Card>\n        <div style={{ marginTop: 14 }} />\n        <Card>\n          <Table\n            columns={columns({ handleEditTable: handleEditTable })}\n            data={dataSource}\n            footer={<Pagination current={current} pageSize={pageSize} total={total} divider onChange={(current: number, _: any, pageSize: number) => updateData({ current, pageSize })} />}\n          />\n        </Card>\n        <Detail updateData={updateData} />\n      </React.Fragment>\n    </Loader>\n  );\n}\nexport default Demo","import React from 'react';\nimport { Button } from 'uiw'\n\ninterface attrProps {\n  handleEditTable: (type: string, record: any) => void\n}\n\nexport const columns = (attr: attrProps) => [\n  {\n    title: '姓名',\n    key: 'name',\n  },\n  {\n    title: '年龄',\n    key: 'age',\n  },\n  {\n    title: '地址',\n    key: 'info',\n  },\n  {\n    title: '操作',\n    key: 'edit',\n    width: 98,\n    render: () => (\n      <div>\n        <Button size=\"small\" type=\"danger\" onClick={attr.handleEditTable.bind(this, 'edit')}>编辑</Button>\n        <Button size=\"small\" type=\"success\" onClick={attr.handleEditTable.bind(this, 'view')}>查看</Button>\n      </div>\n    ),\n  },\n]","import React from 'react';\nimport { Table, Button, Input, Form, Pagination, Loader, Row, Col } from 'uiw';\n\nexport default function ProTabel() {\n  const datas = [\n    {\n      name: '邓紫棋',\n      age: '12',\n      info: '又名G.E.M.，原名邓诗颖，1991年8月16日生于中国上海，中国香港创作型女歌手。',\n    },\n    {\n      name: '李易峰',\n      age: '32',\n      info: '1987年5月4日出生于四川成都，中国内地男演员、流行乐歌手、影视制片人',\n    },\n    {\n      name: '范冰冰',\n      age: '23',\n      info: '1981年9月16日出生于山东青岛，中国影视女演员、制片人、流行乐女歌手',\n    },\n    {\n      name: '杨幂',\n      age: '34',\n      info: '1986年9月12日出生于北京市，中国内地影视女演员、流行乐歌手、影视制片人。',\n    },\n    {\n      name: 'Angelababy',\n      age: '54',\n      info: '1989年2月28日出生于上海市，华语影视女演员、时尚模特。',\n    },\n    {\n      name: '唐嫣',\n      age: '12',\n      info: '1983年12月6日出生于上海市，毕业于中央戏剧学院表演系本科班',\n    },\n    {\n      name: '吴亦凡',\n      age: '4',\n      info: '1990年11月06日出生于广东省广州市，华语影视男演员、流行乐歌手。',\n    },\n  ];\n  const columns = [\n    {\n      title: '名字',\n      key: 'name',\n    },\n    {\n      title: '年龄',\n      key: 'age',\n    },\n    {\n      title: '地址',\n      key: 'info',\n    },\n  ];\n\n  return (\n    <div style={{ padding: 10 }}>\n      <Loader loading={false} style={{ display: 'block' }}>\n        <>\n          <Form\n            resetOnSubmit={false}\n            onSubmit={({ initial, current }) => {}}\n            onSubmitError={(error) => {\n              if (error.filed) {\n                return { ...error.filed };\n              }\n              return null;\n            }}\n            fields={{\n              username: {\n                labelClassName: 'fieldLabel',\n                labelStyle: { width: 160 },\n                labelFor: 'username',\n                label: '用户名',\n                children: (\n                  <Input\n                    preIcon=\"user\"\n                    id=\"username\"\n                    placeholder=\"用户名: admin\"\n                  />\n                ),\n              },\n              password: {\n                labelClassName: 'fieldLabel',\n                labelStyle: { width: 60 },\n                label: '用户名',\n                labelFor: 'password',\n                children: (\n                  <Input\n                    preIcon=\"lock\"\n                    id=\"password\"\n                    type=\"password\"\n                    placeholder=\"密码: admin\"\n                  />\n                ),\n              },\n            }}\n          >\n            {({ fields, state, canSubmit, resetForm }) => {\n              return (\n                <div>\n                  <Row gutter={10}  >\n                    <Col fixed>{fields.username}</Col>\n                    <Col fixed>{fields.password}</Col>\n                    <Col style={{marginTop: 31}}>\n                      <Button\n                        disabled={!canSubmit()}\n                        type=\"primary\"\n                        htmlType=\"submit\"\n                      >\n                        提交\n                      </Button>\n                      <Button type=\"danger\" onClick={resetForm}>\n                        重置表单\n                      </Button>\n                    </Col>\n                  </Row>\n                </div>\n              );\n            }}\n          </Form>\n          <Table\n            columns={columns}\n            data={datas}\n            footer={<Pagination current={2} pageSize={10} total={30} divider />}\n          />\n        </>\n      </Loader>\n    </div>\n  );\n}\n","import React, { memo } from 'react';\nimport { Drawer, Button, DrawerProps, Row, Col } from 'uiw';\n\n/**\n * ProDrawer 组件继承于https://uiwjs.github.io/#/components/drawer\n * @param {boolean} visible 显示隐藏\n * @param {string} title 标题\n * @param {()=>void} onClose 关闭事件\n * @param {number} width Drawer宽\n * @param {Array<{label?:string,onPress?:()=>void,show?:boolean,loading?:boolean}>} buttons 按钮集合(label:\"文本\",onPress:点击事件,show:是否展示)\n * @param {React.ReactNode} children\n * @returns\n */\n\ninterface ButtonItemsProps {\n  label?: string;\n  onPress?: () => void;\n  show?: boolean;\n  size?: 'large' | 'default' | 'small';\n  type?: 'primary' | 'success' | 'warning' | 'danger' | 'light' | 'dark' | 'link';\n  loading?: boolean;\n  width?: number\n}\n\ninterface ProDrawerProps extends DrawerProps {\n  visible: boolean;\n  title?: string;\n  onClose?: any;\n  width?: number;\n  buttons?: Array<ButtonItemsProps>;\n  children?: React.ReactNode\n}\nfunction ProDrawer(props: ProDrawerProps) {\n  const { visible, title = '', onClose = null, width = 800, buttons = [], children, ...others } = props\n  return (\n    <Drawer\n      title={title}\n      isOpen={visible}\n      onClose={onClose && onClose}\n      size={width}\n      bodyStyle={{ padding: '0 10px 45px 10px' }}\n      {...others}\n      footer={\n        buttons.map(\n          ({ label = '', onPress, show = true, loading, type = \"primary\", width = 60, size = \"default\" }, idx) =>\n            show && (\n              <Button\n                style={{ width: width }}\n                key={idx}\n                type={type}\n                size={size}\n                onClick={onPress && onPress}\n                loading={loading}\n              >\n                {label}\n              </Button>\n            )\n        )\n      }\n    >\n      {children}\n    </Drawer>\n  );\n}\n\nexport default memo(ProDrawer);\n"],"names":["props","updateData","onSubmit","initial","fliter","current","filter","fields","name","labelClassName","labelStyle","width","inline","label","children","age","address","canSubmit","state","resetForm","gutter","style","marginBottom","fixed","align","disabled","type","htmlType","onClick","useSelector","demo","drawerVisible","tableType","P","title","visible","onClose","buttons","onPress","console","log","firstName","initialValue","lastName","email","validator","currentValue","length","select","value","map","selectDemoPage","params","request","method","body","attr","dispatch","useDispatch","pageSize","total","dataSource","payload","useRequest","manual","onSuccess","res","code","data","rows","run","loading","handleEditTable","record","isView","React","page","queryData","size","display","marginTop","bind","columns","key","render","footer","divider","onChange","_","ProTabel","padding","resetOnSubmit","onSubmitError","error","username","labelFor","preIcon","id","placeholder","password","info","ProDrawer","isOpen","bodyStyle","show","memo"],"sourceRoot":""}