{"version":3,"file":"static/js/357.6f4f2d1d.chunk.js","mappings":"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","sources":["../../../node_modules/@babel/standalone|sync","components/Markdown/Code.tsx","webpack://website/./src/components/Footer/index.module.less?bf54","components/Footer/index.tsx","webpack://website/./src/components/Markdown/index.module.less?43b5","components/Markdown/index.tsx","../../../packages/components/src/Skeleton/index.tsx","../../../packages/utils/src/request.ts","../../../packages/utils/src/utils.ts","../../../packages/components/src/ProTable/hooks.ts","../../../packages/components/src/ProTable/BaseTable.tsx","../../../packages/components/src/ProTable/widgets/Select.tsx","../../../packages/components/src/ProTable/widgets/Radio.tsx","../../../packages/components/src/ProTable/BaseForm.tsx","../../../packages/components/src/ProTable/index.tsx","../../../packages/components/src/ProTable/useTable.ts","../../../packages/components/src/ProDrawer/index.tsx","../../../packages/components/src/ProForm/formdom.tsx","../../../packages/components/src/Upload/utils.ts","../../../packages/components/src/Upload/validation.ts","../../../packages/components/src/Upload/index.tsx","../../../packages/components/src/ProForm/widgets/Upload/utils.tsx","../../../packages/components/src/ProForm/widgets/Upload/card.tsx","../../../packages/components/src/ProForm/widgets/Upload/list.tsx","../../../packages/components/src/ProForm/widgets/Upload/index.tsx","../../../packages/components/src/ProForm/utils/index.tsx","../../../packages/components/src/ProForm/readform.tsx","../../../packages/components/src/ProForm/widgets/CheckBox/index.tsx","../../../packages/components/src/ProForm/index.tsx","../../../packages/components/src/ProForm/widgets/index.tsx"],"sourcesContent":["function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nwebpackEmptyContext.id = 61532;\nmodule.exports = webpackEmptyContext;","import React from 'react';\nimport CodePreview, { CodePreviewProps } from '@uiw/react-code-preview';\n\nexport interface CodeProps extends CodePreviewProps {\n  code: string;\n  codePen: boolean;\n  dependencies: any;\n}\n\nexport default function Code({ dependencies, codePen, ...other }: CodeProps) {\n  const props: CodePreviewProps = { ...other };\n  if (codePen) {\n    props.codeSandboxOption = {\n      files: {\n        'sandbox.config.json': {\n          content: `{\n        \"template\": \"node\",\n        \"container\": {\n          \"startScript\": \"start\",\n          \"node\": \"14\"\n        }\n      }`,\n        },\n        'public/index.html': {\n          content: `<div id=\"container\"></div>`,\n        },\n        'src/index.js': {\n          content: props.code!.replace(\n            '_mount_',\n            'document.getElementById(\"container\")',\n          ),\n        },\n        '.kktrc.js': {\n          content: `import webpack from \"webpack\";\\nimport lessModules from \"@kkt/less-modules\";\\nexport default (conf, env, options) => {\\nconf = lessModules(conf, env, options);\\nreturn conf;\\n};`,\n        },\n        'package.json': {\n          content: {\n            name: 'react-baidu-map-demo',\n            description: `百度地图 React 组件 - demo`,\n            dependencies: {\n              react: 'latest',\n              'react-dom': 'latest',\n              '@uiw/react-baidu-map': 'latest',\n            },\n            devDependencies: {\n              '@kkt/less-modules': '6.11.0',\n              kkt: '6.11.0',\n              typescript: '4.3.5',\n            },\n            license: 'MIT',\n            scripts: {\n              start: 'kkt start',\n              build: 'kkt build',\n              test: 'kkt test --env=jsdom',\n            },\n            browserslist: [\n              '>0.2%',\n              'not dead',\n              'not ie <= 11',\n              'not op_mini all',\n            ],\n          },\n        },\n      },\n    };\n  }\n  return (\n    <CodePreview\n      {...props}\n      dependencies={{ ...dependencies, React, ...React }}\n      style={{ marginBottom: 0 }}\n    />\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"footer\":\"index_footer__Fp4ea\"};","import styles from './index.module.less';\n\ntype FooterProps = {\n  editorUrl?: string;\n};\n\nconst Footer = (props: FooterProps) => {\n  const { editorUrl } = props || {};\n  return (\n    <div className={styles.footer}>\n      {editorUrl && (\n        <a\n          title=\"Editor Current Page\"\n          target=\"_blank\"\n          rel=\"noreferrer\"\n          href={`https://github.com/uiwjs/uiw-admin/edit/master${editorUrl}`}\n        >\n          编辑当前页面\n        </a>\n      )}\n      <a\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n        href=\"https://github.com/uiwjs/uiw-admin/issues/new\"\n      >\n        提交 Bug\n      </a>\n      <a\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n        href=\"https://github.com/uiwjs/uiw-admin\"\n      >\n        GitHub\n      </a>\n      <a\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n        href=\"https://github.com/kktjs/kkt\"\n      >\n        kkt\n      </a>\n      <a\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n        href=\"https://github.com/uiwjs/uiw\"\n      >\n        uiwjs\n      </a>\n    </div>\n  );\n};\n\nexport default Footer;\n","// extracted by mini-css-extract-plugin\nexport default {\"markdown\":\"index_markdown__hcQCp\"};","import { Component, Fragment } from 'react';\nimport MarkdownPreview from '@uiw/react-markdown-preview';\nimport Code from './Code';\nimport Footer from '../Footer';\nimport styles from './index.module.less';\n\ninterface MarkdownProps {}\ninterface MarkdownState {\n  mdStr: string;\n}\n\nconst getCodeStr = (data: any[] = [], code: string = '') => {\n  data.forEach((node) => {\n    if (node.type === 'text') {\n      code += node.value;\n    } else if (node.children && Array.isArray(node.children)) {\n      code += getCodeStr(node.children);\n    }\n  });\n  return code;\n};\n\n/**\n * 代码注释参数\n *\n * ```md\n * <!--rehype:bgWhite=true&codeSandbox=true&noScroll=true&codePen=true-->\n * ```\n * 参数用英文逗号隔开\n *\n * - `bgWhite` 设置代码预览背景白色，否则为格子背景。\n * - `noCode` 不显示代码编辑器。\n * - `noPreview` 不显示代码预览效果。\n * - `noScroll` 预览区域不显示滚动条。\n * - `codePen` 显示 Codepen 按钮，要特别注意 `包导入的问题`，实例中的 `import` 主要用于 Codepen 使用。\n */\nexport interface OptionsMarkdown {\n  bgWhite?: boolean;\n  noCode?: boolean;\n  noPreview?: boolean;\n  noScroll?: boolean;\n  codePen?: boolean;\n}\n\nexport default class Markdown extends Component<MarkdownProps, MarkdownState> {\n  constructor(props: MarkdownProps) {\n    super(props);\n    this.state = {\n      mdStr: '',\n    };\n  }\n  editorUrl?: string;\n  getMdStr?: any;\n  dependencies?: any;\n  componentDidMount() {\n    if (this.getMdStr) {\n      this.getMdStr().then((str: any) => {\n        this.setState({\n          mdStr: str.default || str,\n        });\n      });\n    }\n  }\n  render() {\n    return (\n      <Fragment>\n        <MarkdownPreview\n          style={{ padding: '20px 26px' }}\n          source={this.state.mdStr}\n          className={styles.markdown}\n          components={{\n            /**\n             * bgWhite 设置代码预览背景白色，否则为格子背景。\n             * noCode 不显示代码编辑器。\n             * noPreview 不显示代码预览效果。\n             * noScroll 预览区域不显示滚动条。\n             * codePen 显示 Codepen 按钮，要特别注意 包导入的问题，实例中的 import 主要用于 Codepen 使用。\n             */\n            code: ({ inline, node, ...props }) => {\n              const {\n                noPreview,\n                noScroll,\n                bgWhite,\n                noCode,\n                codePen,\n                codeSandboxOption,\n              } = props as any;\n              if (inline) {\n                return <code {...props} />;\n              }\n              const config = {\n                noPreview,\n                noScroll,\n                bgWhite,\n                noCode,\n                codePen,\n                codeSandboxOption,\n              } as any;\n              if (\n                Object.keys(config).filter((name) => config[name] !== undefined)\n                  .length === 0\n              ) {\n                return <code {...props} />;\n              }\n              return (\n                <Code\n                  code={getCodeStr(node.children)}\n                  dependencies={this.dependencies}\n                  {...{\n                    noPreview,\n                    noScroll,\n                    bgWhite,\n                    noCode,\n                    codePen,\n                    codeSandboxOption,\n                  }}\n                />\n              );\n            },\n          }}\n        />\n        <Footer editorUrl={this.editorUrl} />\n      </Fragment>\n    );\n  }\n}\n","import React from 'react';\nimport { Loader } from 'uiw';\n\ninterface SkeletonProps {\n  children: React.ReactNode;\n  loading?: boolean;\n  style?: React.CSSProperties\n}\n\nconst Skeleton: React.FC<SkeletonProps> = ({ children, style, loading = false, ...others }) => {\n  return (\n    <Loader\n      loading={loading}\n      style={{ display: 'block',  ...style}}\n      // fullscreen={true}\n      bgColor=\"rgba(255, 255, 255, 0.4)\"\n      {...others}\n    >\n      <>{children}</>\n    </Loader>\n  );\n};\n\nexport default Skeleton;\n","import axios, { AxiosRequestConfig } from 'axios';\n// import history from '../routes/history';\nimport { splitUrl } from './utils';\n\n// Get the current location.\n// const location = history.location;\nconst codeMessage = {\n  200: '服务器成功返回请求的数据。',\n  201: '新建或修改数据成功。',\n  202: '一个请求已经进入后台排队（异步任务）。',\n  204: '删除数据成功。',\n  400: '发出的请求有错误，服务器没有进行新建或修改数据的操作。',\n  401: '用户没有权限（令牌、用户名、密码错误）。',\n  403: '用户得到授权，但是访问是被禁止的。',\n  404: '发出的请求针对的是不存在的记录，服务器没有进行操作。',\n  406: '请求的格式不可得。',\n  410: '请求的资源被永久删除，且不会再得到的。',\n  422: '当创建一个对象时，发生一个验证错误。',\n  500: '服务器发生错误，请检查服务器。',\n  502: '网关错误。',\n  503: '服务不可用，服务器暂时过载或维护。',\n  504: '网关超时。',\n};\n\nexport interface Options extends AxiosRequestConfig {\n  body?: any;\n}\n\n/**\n * Requests a URL, returning a promise.\n *\n * @param  {string} url       The URL we want to request\n * @param  {object} [options] The options we want to pass to \"fetch\"\n * @return {object}           An object containing either \"data\" or \"err\"\n */\nexport default function request(url: string, options: Options = {}) {\n  const method = options.method || 'GET';\n  const newOptions: Options = {\n    url,\n    method,\n    data: options.body,\n    headers: {\n      'Content-Type': 'application/json; charset=utf-8',\n      Accept: 'application/json',\n    },\n  };\n\n  if (/(GET)/.test(method)) {\n    newOptions.url = splitUrl(url, { ...options.body });\n    delete newOptions.body;\n  }\n\n  return axios\n    .request(newOptions)\n    .then((response) => {\n      return response.data;\n    })\n    .catch((err) => {\n      const response = err.response;\n      if (response.status >= 200 && response.status < 300) {\n        return response;\n      }\n      const status = response.status;\n      const errortext = (codeMessage as any)[status] || response.statusText;\n      // Notification.error({\n      //   message: '错误提示：',\n      //   description: (response.data && response.data.info) || '没有错误提示',\n      // });\n      const error = new Error(errortext);\n      error.name = response.status;\n      // error.response = response;\n      if (response.data) {\n        return response.data;\n      }\n      throw error;\n    });\n}\n","// 拼接url参数\nexport function splitUrl(url: string, options: { [x: string]: any }) {\n  let urlNew = url;\n  const paramsArray: string[] = [];\n  // Object.keys(options).forEach(key => paramsArray.push(key + '=' + options[key]));\n  Object.keys(options).forEach((key) =>\n    paramsArray.push(`${key}=${options[key]}`),\n  );\n  if (Object.keys(options).length === 0) {\n    return url;\n  }\n  if (/\\?/.test(urlNew) === false) {\n    urlNew = `${urlNew}?${paramsArray.join('&')}`;\n  } else {\n    urlNew += `&${paramsArray.join('&')}`;\n  }\n  return urlNew;\n}\n","import { useContext, createContext } from 'react';\n\nexport const StoreCtx = createContext({});\n\nexport const useStore = () => {\n  return useContext(StoreCtx);\n};\n","import React, {\n  useState,\n  useEffect,\n  useCallback,\n  useRef,\n  useMemo,\n} from 'react';\nimport useSWR from 'swr';\nimport { Table, Pagination, TableColumns } from 'uiw';\nimport { request } from '@uiw-admin/utils';\nimport { useStore } from './hooks';\nimport { Fields } from './types';\n\ninterface BaseTableProps {\n  style?: React.CSSProperties;\n  columns: TableColumns[];\n}\n\nconst BaseTable: React.FC<BaseTableProps> = ({\n  style,\n  columns,\n  ...tableProps\n}) => {\n  const [pageIndex, setPageIndex] = useState(1);\n\n  const [prevData, setPrevData] = useState({\n    data: [],\n    total: 0,\n  });\n\n  const store = useStore();\n\n  let {\n    formatData,\n    updateStore,\n    query,\n    key,\n    searchValues,\n    SWRConfiguration = {},\n  } = store as any;\n\n  // 表单默认值\n  const defaultValues = useMemo(() => {\n    const defaultSearchValues: Fields = {};\n    columns.forEach((col) => {\n      if (col?.props?.initialValue) {\n        const name = col.key || col.props.key;\n        defaultSearchValues[name] = col.props.initialValue;\n      }\n    });\n\n    return defaultSearchValues;\n  }, [JSON.stringify(columns)]);\n  // 是否首次调取数据\n  const isFirstMountRef = useRef(false);\n  // 格式化接口查询参数\n  const formatQuery = useCallback(() => {\n    if (query) {\n      return query(\n        pageIndex,\n        isFirstMountRef.current === false ? defaultValues : searchValues,\n      );\n    } else {\n      // 默认传参\n      return {\n        page: 1,\n        pageSize: 10,\n      };\n    }\n  }, [pageIndex, JSON.stringify(defaultValues), JSON.stringify(searchValues)]);\n\n  const pageSize = formatQuery().pageSize || 10;\n\n  const { data, isValidating } = useSWR(\n    [key, { method: 'POST', body: formatQuery() }],\n    request,\n    {\n      // revalidateOnMount: false,\n      revalidateOnFocus: false,\n      ...SWRConfiguration,\n    },\n  );\n\n  // 查询\n  const onSearch = useCallback(async () => {\n    setPageIndex(1);\n  }, [setPageIndex]);\n\n  // 分页\n  const onPageChange = useCallback(\n    (page) => {\n      setPageIndex(page);\n    },\n    [setPageIndex],\n  );\n\n  useEffect(() => {\n    // 获取表单默认值\n    const defaultSearchValues: Fields = {};\n    columns.forEach((col) => {\n      if (col?.props?.initialValue) {\n        const name = col.key || col.props.key;\n        defaultSearchValues[name] = col.props.initialValue;\n      }\n    });\n    const stores: any = {\n      data: data?.data,\n      total: data?.total,\n      loading: !data || isValidating,\n      onSearch,\n    };\n\n    if (!isFirstMountRef.current) {\n      isFirstMountRef.current = true;\n      // 默认表单值\n\n      stores.searchValues = defaultSearchValues;\n    }\n\n    updateStore(stores);\n\n    // 上一次请求数据\n    if (data) {\n      setPrevData(data);\n    }\n  }, [JSON.stringify(data), isValidating, JSON.stringify(columns)]);\n\n  return (\n    <Table\n      columns={columns}\n      data={\n        formatData && data\n          ? formatData(data).data\n          : data?.data || prevData?.data\n      }\n      footer={\n        data && (\n          <Pagination\n            current={pageIndex}\n            pageSize={pageSize}\n            total={\n              formatData && data\n                ? formatData(data).total\n                : data?.total || prevData?.total\n            }\n            divider\n            onChange={(page) => {\n              onPageChange(page);\n            }}\n          />\n        )\n      }\n      {...tableProps}\n    />\n  );\n};\n\nexport default BaseTable;\n","import React from 'react';\nimport { Select } from 'uiw';\n\ninterface FormSelectProps {\n  option?: HTMLOptionElement[];\n}\n\nconst FormSelect: React.FC<FormSelectProps> = ({ option, ...others }) => {\n  return (\n    <Select {...others}>\n      <Select.Option value=\"\">请选择</Select.Option>\n      {option &&\n        option.map((opt) => (\n          <Select.Option key={opt.value} value={opt.value}>\n            {opt.label}\n          </Select.Option>\n        ))}\n    </Select>\n  );\n};\n\nexport default FormSelect;\n","import React from 'react';\nimport { Radio, RadioGroup } from 'uiw';\n\ninterface FormSelectProps {\n  option?: HTMLOptionElement[];\n}\n\nconst FormRadio: React.FC<FormSelectProps> = ({ option, ...others }) => {\n  return (\n    <RadioGroup {...others}>\n      {option &&\n        option.map((opt) => (\n          <Radio key={opt.value} value={opt.value}>\n            {opt.label}\n          </Radio>\n        ))}\n    </RadioGroup>\n  );\n};\n\nexport default FormRadio;\n","import React, { useMemo } from 'react';\nimport {\n  Button,\n  Input,\n  Form,\n  Row,\n  Col,\n  Checkbox,\n  Switch,\n  Textarea,\n  DateInput,\n  TimePicker,\n  MonthPicker,\n  FormSubmitProps,\n  SearchSelect,\n} from 'uiw';\nimport Select from './widgets/Select';\nimport FormRadio from './widgets/Radio';\nimport { useStore } from './hooks';\nimport { BaseFormProps, Fields } from './types';\n\nconst widgets = {\n  input: Input,\n  radio: FormRadio,\n  checkbox: Checkbox,\n  switch: Switch,\n  select: Select,\n  searchSelect: SearchSelect,\n  textarea: Textarea,\n  dateInput: DateInput,\n  timePicker: TimePicker,\n  monthPicker: MonthPicker,\n};\n\nconst BaseForm: React.FC<BaseFormProps> = (props) => {\n  const store = useStore();\n\n  let { updateStore, onSearch } = store as any;\n\n  const { columns, searchBtns, onBeforeSearch } = props;\n  // 获取表单配置\n  const getFormFields = useMemo(() => {\n    const fields: Fields = {};\n    columns.forEach((col) => {\n      if (col.props && Object.keys(col.props).length > 0) {\n        const { widgetProps, key, widget, label, initialValue, ...otherProps } =\n          col.props;\n        const name = key || col.key;\n        const Widget = widgets[widget];\n        fields[name] = {\n          label: label || col.title,\n          children: <Widget {...widgetProps} />,\n          ...otherProps,\n          initialValue,\n        };\n      }\n    });\n\n    return fields;\n  }, [JSON.stringify(columns)]);\n\n  // 查询\n  const onFormSearch = ({ initial, current }: FormSubmitProps) => {\n    updateStore({\n      searchValues: {\n        ...initial,\n        ...current,\n      },\n    });\n    onSearch(current);\n  };\n\n  // 重置\n\n  // const onReset = (resetForm: () => void) => {\n  //   resetForm();\n  // };\n  const itemsLength = Object.keys(getFormFields).length;\n  const emptyLength = 4 - (itemsLength % 5);\n  return (\n    <Form\n      style={{ background: '#fff', paddingBottom: 10, marginBottom: 14 }}\n      resetOnSubmit={false}\n      onSubmit={({ initial, current }) => {\n        // 搜索前校验\n        if (onBeforeSearch && onBeforeSearch({initial, current})) {\n          onFormSearch({ initial, current });\n        } else {\n          onFormSearch({ initial, current });\n        }\n        \n        \n      }}\n      onSubmitError={(error) => {\n        if (error.filed) {\n          return { ...error.filed };\n        }\n        return null;\n      }}\n      fields={getFormFields}\n    >\n      {({ fields, state, canSubmit, resetForm }) => {\n        return (\n          <div>\n            <Row gutter={12}>\n              {Object.keys(fields).map((key) => (\n                <Col key={key} fixed style={{ width: '20%' }}>\n                  {fields[key]}\n                </Col>\n              ))}\n              {Array(emptyLength)\n                .fill('')\n                .map((value, index) => (\n                  <Col key={index.toString()} fixed style={{ width: '20%' }} />\n                ))}\n              <Col align=\"middle\" style={{textAlign: 'right', marginRight: 14}}>\n                {searchBtns ? (\n                  searchBtns.map((btn: any, idx) => (\n                    btn?.render ? <React.Fragment key={idx.toString()}>{btn.render}</React.Fragment> :\n                    <Button key={idx.toString()} style={{marginRight: 5}} {...btn}>\n                      {btn.label}\n                    </Button>\n                  ))\n                ) : (\n                  <Button type=\"primary\" htmlType=\"submit\">\n                    查询\n                  </Button>\n                )}\n              </Col>\n            </Row>\n          </div>\n        );\n      }}\n    </Form>\n  );\n};\n\nexport default BaseForm;\n","import React, { useMemo } from 'react';\nimport { Button, Row } from 'uiw';\nimport Skeleton from '../Skeleton';\nimport Table from './BaseTable';\nimport BaseForm from './BaseForm';\nimport { StoreCtx } from './hooks';\nimport { ProtableProps } from './types';\n\nconst ProTabel: React.FC<ProtableProps> = (props) => {\n  const {\n    table,\n    columns,\n    operateButtons = [],\n    searchBtns,\n    onBeforeSearch,\n    ...tableProps\n  } = props;\n  const {\n    key,\n    data,\n    reset,\n    refersh,\n    updateStore,\n    formatData,\n    query,\n    searchValues,\n    loading,\n    onSearch,\n    SWRConfiguration,\n  } = table;\n\n  const store = useMemo(\n    () => ({\n      data: [],\n      reset,\n      refersh,\n      key,\n      updateStore,\n      formatData,\n      query,\n      searchValues,\n      onSearch,\n      SWRConfiguration,\n    }),\n    [\n      JSON.stringify(data),\n      reset,\n      refersh,\n      key,\n      updateStore,\n      formatData,\n      query,\n      JSON.stringify(searchValues),\n      onSearch,\n      SWRConfiguration,\n    ],\n  );\n\n  return (\n    <StoreCtx.Provider value={store}>\n      <Skeleton loading={loading}>\n        {/* 表单查询区域 */}\n        <BaseForm\n          columns={columns}\n          searchBtns={searchBtns}\n          onBeforeSearch={onBeforeSearch}\n        />\n        {/* 操作区域 */}\n        {operateButtons.length > 0 && (\n          <div style={{ background: '#fff', padding: 10 }}>\n            {operateButtons.map((btn: any, idx: number) =>\n              btn?.render ? (\n                <React.Fragment key={idx.toString()}>\n                  {btn.render}\n                </React.Fragment>\n              ) : (\n                <Button key={idx.toString()} {...btn}>\n                  {btn.label}\n                </Button>\n              ),\n            )}\n          </div>\n        )}\n        {/* 列表组件 */}\n        <Table columns={columns} {...tableProps} />\n      </Skeleton>\n    </StoreCtx.Provider>\n  );\n};\n\nexport default ProTabel;\n","import { useState } from 'react';\nimport { Params, useTableData, stateParams } from './types';\n\nconst useTable = (key: string, params: Params = {}): useTableData => {\n  const { formatData, query, SWRConfiguration } = params;\n\n  const [state, setState] = useState<any>({\n    // 总页数\n    total: 1,\n    // 当前table数据源\n    data: [],\n    // 选中的行\n    selectChecked: [],\n    selectCheckedRows: [],\n    // 表单值\n    searchValues: {},\n    // 加载状态\n    loading: false,\n  });\n  // 更新store\n  const updateStore = (datas: stateParams) => {\n    setState({\n      ...state,\n      ...datas,\n    });\n  };\n\n  // 重置\n  const reset = () => {};\n  // 刷新当前页数据\n  const refersh = () => {};\n  // 点击查询\n  const onSearch = () => {};\n\n  return {\n    key,\n    // 重置\n    reset,\n    // 刷新当前页数据\n    refersh,\n    // 点击查询\n    onSearch,\n    formatData,\n    query,\n    updateStore,\n    SWRConfiguration,\n    ...state,\n  };\n};\n\nexport default useTable;\n","import React, { memo } from 'react';\nimport { Drawer, Button, DrawerProps, ButtonProps } from 'uiw';\n\n/**\n * ProDrawer 组件继承于https://uiwjs.github.io/#/components/drawer\n * @param {boolean} visible 显示隐藏\n * @param {string} title 标题\n * @param {()=>void} onClose 关闭事件\n * @param {number} width Drawer宽\n * @param {Array<{label?:string,onPress?:()=>void,show?:boolean,loading?:boolean}>} buttons 按钮集合(label:\"文本\",onPress:点击事件,show:是否展示)\n * @param {React.ReactNode} children\n * @returns\n */\n\ninterface ButtonItemsProps extends ButtonProps {\n  label?: string;\n  show?: boolean;\n}\n\ninterface ProDrawerProps extends DrawerProps {\n  visible: boolean;\n  title?: string;\n  onClose?: any;\n  width?: number;\n  buttons?: Array<ButtonItemsProps>;\n  children?: React.ReactNode;\n}\nfunction ProDrawer(props: ProDrawerProps) {\n  const {\n    visible,\n    title = '',\n    onClose = null,\n    width = 800,\n    buttons = [],\n    children,\n    ...others\n  } = props;\n  return (\n    <Drawer\n      title={title}\n      isOpen={visible}\n      onClose={onClose && onClose}\n      size={width}\n      bodyStyle={{ padding: '0 10px 45px 10px' }}\n      footer={buttons.map(\n        ({ label = '', show = true, ...others }: any, idx) =>\n          show && (\n            <Button key={idx} {...others}>\n              {label}\n            </Button>\n          ),\n      )}\n      {...others}\n    >\n      {children}\n    </Drawer>\n  );\n}\n\nexport default memo(ProDrawer);\n","import React from 'react';\nimport { Form, Button, Col, Row, FormFieldsProps } from 'uiw';\nimport { ProFormProps } from './type';\nimport './style/form-item.less';\n\nfunction FormDom({\n  formfields,\n  onSubmit,\n  onChange,\n  buttonsContainer,\n  submitRef,\n  showSaveButton = false,\n  showResetButton = false,\n  saveButtonProps,\n  resetButtonProps,\n}: ProFormProps & {\n  formfields: Record<string, FormFieldsProps<{}>> | undefined;\n}) {\n  return (\n    <Form\n      style={{ background: '#fff', paddingBottom: 10, marginBottom: 14 }}\n      resetOnSubmit={false}\n      onSubmit={({ initial, current }) => onSubmit?.(initial, current)}\n      onChange={({ initial, current }) => onChange?.(initial, current)}\n      onSubmitError={(error) => {\n        if (error.filed) {\n          return { ...error.filed };\n        }\n        return null;\n      }}\n      fields={formfields}\n    >\n      {({ fields, state, canSubmit, resetForm }) => {\n        return (\n          <React.Fragment>\n            <Row gutter={10}>\n              {Object.keys(fields).map((key) => {\n                const colSpan = fields[key]?.props?.span || '8';\n                return (\n                  <Col key={key} span={colSpan}>\n                    {fields[key]}\n                  </Col>\n                );\n              })}\n            </Row>\n            <div className=\"w-form-item-center\" style={{ ...buttonsContainer }}>\n              {showSaveButton ? (\n                <Button\n                  {...saveButtonProps}\n                  ref={submitRef}\n                  disabled={!canSubmit()}\n                  htmlType=\"submit\"\n                >\n                  {saveButtonProps?.label || '提交'}\n                </Button>\n              ) : (\n                <Button\n                  style={{ display: 'none' }}\n                  ref={submitRef}\n                  disabled={!canSubmit()}\n                  htmlType=\"submit\"\n                  {...saveButtonProps}\n                >\n                  {saveButtonProps?.label || '提交'}\n                </Button>\n              )}\n              <Button\n                style={{ display: showResetButton ? 'flex' : 'none' }}\n                onClick={resetForm}\n                {...resetButtonProps}\n              >\n                {resetButtonProps?.label || '重置'}\n              </Button>\n            </div>\n          </React.Fragment>\n        );\n      }}\n    </Form>\n  );\n}\n\nexport default FormDom;\n","import { FileListType } from './types';\n\nexport const openFileDialog = (inputRef:any): void => {\n  if (inputRef.current)  inputRef.current.click();\n};\n\nexport const getAcceptTypeString = (accept?: Array<string>) => {\n  return accept && accept.length > 0\n    ? accept.map((item) => `.${item}`).join(', ')\n    : 'image/*';\n};\n\nexport const getBase64 = (file: File): Promise<string> => {\n  const reader = new FileReader();\n  return new Promise((resolve) => {\n    reader.addEventListener('load', () => resolve(String(reader.result)));\n    reader.readAsDataURL(file);\n  });\n};\n\nexport const getListFiles = (\n  files: FileList,\n  dataURLKey: string\n): Promise<FileListType> => {\n  const promiseFiles: Array<Promise<string>> = [];\n  for (let i = 0; i < files.length; i += 1) {\n    promiseFiles.push(getBase64(files[i]));\n  }\n  return Promise.all(promiseFiles).then((fileListBase64: Array<string>) => {\n    const fileList: FileListType = fileListBase64.map((base64, index) => ({\n      [dataURLKey]: base64,\n      file: files[index],\n    }));\n    return fileList;\n  });\n};\n","import { ErrorsType } from './types';\n\nconst DEFAULT_NULL_INDEX = -1\n\n\n// 判断文件类型\nexport const getAcceptTypeValid = (fileType: string) => {\n  console.log('fileType', fileType)\n  if (fileType.includes('image')) {\n    return true;\n  }\n  if (fileType.includes('pdf')) {\n    return true;\n  }\n  // xlsx\n  if (fileType.includes('vnd.openxmlformats-officedocument.spreadsheetml.sheet')) {\n    return true;\n  }\n  return false;\n};\n\n// 判断大小\nexport const isMaxFileSizeValid = (fileSize: number, maxFileSize?: number) => {\n  return maxFileSize ? fileSize <= maxFileSize : true;\n};\n\nexport const isAcceptTypeValid = (accept: any[], fileName: string) => {\n  if (accept && accept.length > 0) {\n    const type: string = fileName.split('.').pop() || '';\n    if (\n      accept.findIndex(\n        (item) => item.toLowerCase() === type.toLowerCase()\n      ) < 0\n    )\n      return false;\n  }\n  return true;\n};\n\nexport const isMaxNumberValid = (totalNumber: number, maxNumber: number, keyUpdate: number) => {\n  if (maxNumber !== 0 && !maxNumber) return true;\n  if (keyUpdate === DEFAULT_NULL_INDEX) {\n    if (totalNumber <= maxNumber) return true;\n  } else if (totalNumber <= maxNumber + 1) return true;\n  return false;\n};\n\nexport const getErrorValidation = async ({\n  fileList,\n  value,\n  maxNumber,\n  keyUpdate,\n  accept,\n  maxFileSize,\n}: any): Promise<ErrorsType> => {\n  const newErrors: ErrorsType = {};\n  if (!isMaxNumberValid(fileList.length + value.length, maxNumber, keyUpdate)) {\n    newErrors.maxNumber = true;\n  } else {\n    for (let i = 0; i < fileList.length; i += 1) {\n      const { file } = fileList[i];\n      if (!file) continue;\n      if (!getAcceptTypeValid(file.type)) {\n        newErrors.accept = true;\n        break;\n      }\n      if (!isAcceptTypeValid(accept, file.name)) {\n        newErrors.accept = true;\n        break;\n      }\n      if (!isMaxFileSizeValid(file.size, maxFileSize)) {\n        newErrors.maxFileSize = true;\n        break;\n      }\n    }\n  }\n  if (Object.values(newErrors).find(Boolean)) return newErrors;\n  return null;\n};","import React, { useRef, useState, useCallback, useMemo } from 'react';\nimport { openFileDialog, getListFiles, getAcceptTypeString } from './utils';\nimport { getErrorValidation } from './validation';\nimport {\n  FileListType,\n  ReactUploadPropsType,\n  ErrorsType,\n} from './types';\n\nconst DEFAULT_NULL_INDEX = -1\n\nconst ReactUpload: React.FC<ReactUploadPropsType> = ({\n  value = [],\n  onChange,\n  onError,\n  children,\n  dataURLKey = 'dataURL',\n  multiple = false,\n  maxNumber = 3,\n  accept,\n  maxFileSize,\n  inputProps = {},\n}) => {\n  const inValue = value || [];\n  const inputRef = useRef<HTMLInputElement>(null);\n  const [keyUpdate, setKeyUpdate] = useState<number>(DEFAULT_NULL_INDEX);\n  const [errors, setErrors] = useState<ErrorsType>(null);\n\n  const handleClickInput = useCallback(() => openFileDialog(inputRef), [\n    inputRef,\n  ]);\n\n  const onFileUpload = useCallback((): void => {\n    setKeyUpdate(DEFAULT_NULL_INDEX);\n    handleClickInput();\n  }, [handleClickInput]);\n\n  const onFileRemoveAll = useCallback((): void => {\n    onChange?.([]);\n  }, [onChange]);\n\n  const onFileRemove = (index: number | Array<number>): void => {\n    const updatedList = [...inValue];\n    if (Array.isArray(index)) {\n      index.forEach((i) => {\n        updatedList.splice(i, 1);\n      });\n    } else {\n      updatedList.splice(index, 1);\n    }\n    onChange?.(updatedList);\n  };\n\n  const onFileUpdate = (index: number): void => {\n    setKeyUpdate(index);\n    handleClickInput();\n  };\n\n  const validate = async (fileList: FileListType): Promise<boolean> => {\n    const errorsValidation = await getErrorValidation({\n      fileList,\n      maxFileSize,\n      maxNumber,\n      accept,\n      keyUpdate,\n      value: inValue,\n    });\n    if (errorsValidation) {\n      setErrors(errorsValidation);\n      onError?.(errorsValidation, fileList);\n      return false;\n    }\n    errors && setErrors(null);\n    return true;\n  };\n\n  const handleChange = async (files: FileList | null) => {\n    if (!files) return;\n    const fileList = await getListFiles(files, dataURLKey);\n    if (!fileList.length) return;\n    const checkValidate = await validate(fileList);\n    if (!checkValidate) return;\n    let updatedFileList: FileListType;\n    const updatedIndexes: number[] = [];\n    if (keyUpdate > DEFAULT_NULL_INDEX) {\n      const [firstFile] = fileList;\n      updatedFileList = [...inValue];\n      updatedFileList[keyUpdate] = firstFile;\n      updatedIndexes.push(keyUpdate);\n    } else if (multiple) {\n      updatedFileList = [...inValue, ...fileList];\n      for (\n        let i = inValue.length as number;\n        i < updatedFileList.length;\n        i += 1\n      ) {\n        updatedIndexes.push(i);\n      }\n    } else {\n      updatedFileList = [fileList[0]];\n      updatedIndexes.push(0);\n    }\n    onChange?.(updatedFileList, updatedIndexes);\n  };\n\n  const onInputChange = async (\n    e: React.ChangeEvent<HTMLInputElement>\n  ): Promise<void> => {\n    await handleChange(e.target.files);\n    keyUpdate > DEFAULT_NULL_INDEX && setKeyUpdate(DEFAULT_NULL_INDEX);\n    if (inputRef.current) inputRef.current.value = '';\n  };\n\n  const acceptTypeString = useMemo(() => getAcceptTypeString(accept), [\n    accept,\n  ]);\n\n  return (\n    <React.Fragment>\n      <input\n        type=\"file\"\n        accept={acceptTypeString}\n        ref={inputRef}\n        multiple={multiple && keyUpdate === DEFAULT_NULL_INDEX}\n        onChange={onInputChange}\n        style={{ display: 'none' }}\n        {...inputProps}\n      />\n      {children?.({\n        fileList: inValue,\n        onFileUpload,\n        onFileRemoveAll,\n        onFileUpdate,\n        onFileRemove,\n        errors,\n      })}\n    </React.Fragment>\n  );\n};\n\nexport default ReactUpload;","// 是否是图片类型\nexport const isImageValid = (type = ''): boolean => {\n  if (type) {\n    //获取最后一个/的位置\n    var index = type.lastIndexOf(\"/\");\n    //获取后缀\n    var ext = type.substr(index + 1);\n    return ['png', 'jpg', 'jpeg', 'bmp', 'gif', 'webp', 'psd', 'svg', 'tiff'].indexOf(ext.toLowerCase()) !== -1\n  }\n  return false\n}","import React from 'react'\nimport { Icon } from 'uiw'\nimport { isImageValid } from './utils'\nimport { ChildrenInterface } from '../../../Upload/types'\nimport './style/index.css'\n\ninterface CardProps {\n  readOnly?: boolean;\n  maxNumber?:number;\n  onUploadView: (src: string, index: number) => void;\n}\n\nexport default ({\n  readOnly,\n  maxNumber,\n  onUploadView,\n  fileList,\n  onFileUpload,\n  onFileRemoveAll,\n  onFileUpdate,\n  onFileRemove,\n}: ChildrenInterface & CardProps) => {\n  // 上传按钮权限\n  const uploadBtn = maxNumber !== fileList.length && !readOnly\n  // 删除按钮权限\n  const deleteBtn = !readOnly\n  return (\n    <div className=\"upload-list-picture-card-row\">\n      {fileList.map((image: any, index: number) => {\n        const type = image?.file?.type\n        // 查看按钮权限(需为图片类型)\n        const viewBtn = isImageValid(type) \n        return (\n          <div className=\"upload-list-picture-card-container\" key={index}>\n            <div className=\"upload-list-item\">\n              {viewBtn && <img onClick={() => !readOnly && onFileUpdate(index)} crossOrigin=\"anonymous\" src={image['data_url']} alt=\"\" width=\"100%\" height=\"100%\" />}\n              <div className=\"upload-list-item-actions\">\n                <div className=\"upload-list-picture-card-row\">\n                  {deleteBtn && <Icon type=\"delete\" onClick={() => onFileRemove(index)} />}\n                  {viewBtn && <Icon style={{ marginLeft: 10 }} type=\"eye-o\" onClick={() => onUploadView(image['data_url'], index)} />}\n                </div>\n              </div>\n            </div>\n          </div>\n        )\n      })}\n      {uploadBtn && (\n        <div className=\"upload-list-picture-card-container upload-select-picture-card\">\n          <div onClick={onFileUpload}>\n            <Icon type=\"upload\" />\n            <div>上传</div>\n          </div>\n        </div>\n      )}\n    </div>\n  )\n}","import React from 'react';\nimport { Button, List, Icon } from 'uiw';\nimport { isImageValid } from './utils';\nimport { ChildrenInterface } from '../../../Upload/types';\n\ninterface ListProps {\n  readOnly?: boolean;\n  maxNumber?: number;\n  onUploadView: (src: string, index: number) => void;\n}\n\nexport default ({\n  readOnly,\n  maxNumber,\n  onUploadView,\n  fileList,\n  onFileUpload,\n  onFileRemoveAll,\n  onFileUpdate,\n  onFileRemove,\n}: ChildrenInterface & ListProps) => {\n  // 上传按钮权限\n  const uploadBtn = maxNumber !== fileList.length;\n  // 全部删除按钮权限\n  const deleteAllBtn = fileList.length > 0;\n  return (\n    <List\n      header={\n        !readOnly && (\n          <div>\n            {uploadBtn && (\n              <Button icon=\"upload\" onClick={onFileUpload} type=\"primary\">\n                上传\n              </Button>\n            )}\n            {deleteAllBtn && (\n              <Button icon=\"delete\" type=\"danger\" onClick={onFileRemoveAll}>\n                全部删除\n              </Button>\n            )}\n          </div>\n        )\n      }\n      style={{ marginTop: 10 }}\n      dataSource={fileList}\n      renderItem={(image, index) => {\n        const type = image?.file?.type;\n        return (\n          <List.Item\n            extra={\n              <div>\n                {!readOnly && (\n                  <Icon\n                    style={{ marginRight: 10 }}\n                    type=\"upload\"\n                    onClick={() => onFileUpdate(index)}\n                  />\n                )}\n                {!readOnly && (\n                  <Icon\n                    style={{ marginRight: 10 }}\n                    type=\"delete\"\n                    onClick={() => onFileRemove(index)}\n                  />\n                )}\n                {/* 图片类型才能查看 */}\n                {isImageValid(type) && (\n                  <Icon\n                    type=\"eye-o\"\n                    onClick={() => onUploadView(image['data_url'], index)}\n                  />\n                )}\n              </div>\n            }\n          >\n            <span>{image?.file?.name}</span>\n          </List.Item>\n        );\n      }}\n    />\n  );\n};\n","import React from 'react';\nimport { Modal, Message } from 'uiw'\nimport ReactUpload from '../../../Upload';\nimport { ReactUploadPropsType, FileListType, ChildrenInterface } from '../../../Upload/types'\nimport Card from './card'\nimport List from './list'\n\n\nexport interface UploadCompontneProps extends ReactUploadPropsType {\n  // 上传变化的回调\n  onUploadChange?: (fileList: FileListType) => void;\n  // 图片列表\n  fileList?: FileListType;\n  // 是否只读\n  readOnly?: boolean;\n  // 上传列表的内建样式，支持三种基本样式 list 和 picture-card\n  uploadType?: \"picture-card\" | 'list'\n}\n\nexport default ({\n  onUploadChange,\n  fileList = [],\n  readOnly = false,\n  maxNumber = 3,\n  uploadType = 'list',\n  ...others\n}: UploadCompontneProps) => {\n\n  const [files, setFiles] = React.useState<any>(fileList);\n  const [visible, setVisible] = React.useState(false);\n  const [src, setSrc] = React.useState('');\n\n  const onChange = (fileList: FileListType, addUpdateIndex: any) => {\n    setFiles(fileList);\n    onUploadChange?.(fileList)\n  };\n\n  const onUploadView = (src: string, index: number) => {\n    setSrc(src);\n    setVisible(true);\n  }\n\n  const config = {\n    ...others,\n    maxNumber,\n    value: files || [],\n    multiple: true,\n    dataURLKey: \"data_url\",\n    onChange: onChange,\n  }\n  return (\n    <div style={{ flex: 1 }}>\n      <ReactUpload {...config}>\n        {(chidrenProps: ChildrenInterface) => {\n\n          const renderChildrenProps = {\n            readOnly,\n            maxNumber,\n            onUploadView,\n            ...chidrenProps\n          }\n\n          return (\n            <React.Fragment>\n              {uploadType === 'list' ? <List {...renderChildrenProps} /> : <Card {...renderChildrenProps} />}\n              {chidrenProps?.errors && (\n                <div>\n                  {chidrenProps.errors?.maxNumber && <Message type=\"error\" title=\"文件上传数量已达上限\" />}\n                  {chidrenProps.errors?.accept && <Message type=\"error\" title=\"文件类型错误\" />}\n                  {chidrenProps.errors?.maxFileSize && <Message type=\"error\" title=\"文件大小超过上限\" />}\n                </div>\n              )}\n            </React.Fragment>\n          )\n        }}\n      </ReactUpload>\n      <Modal\n        isOpen={visible}\n        onClosed={() => setVisible(false)}\n        width={600}\n        confirmButtonProps={{ style: { display: \"none\" } }}\n      >\n        <img crossOrigin=\"anonymous\" src={src} alt=\"\" style={{ width: \"100%\", height: \"100%\" }} />\n      </Modal>\n    </div>\n  );\n}","import { FormItemsOptionsProps } from '../type'\nimport { formatter } from 'uiw'\nimport React from 'react';\nimport Upload from '../widgets/Upload'\n\n/**\n * 只读模式表单项 value转换\n * @param type  表单项类型\n * @param initialValue 默认值\n * @param option 表单项option\n * @returns \n */\n\n\n// 目前只处理以下类型的initialValue,其余默认为传入的initialValue\nexport function getReadValue(type: string | any, initialValue: any | any[], option: FormItemsOptionsProps[], widgetProps: any) {\n  let content: string | number | React.ReactNode = ''\n  if (type === 'radio' || type === 'searchSelect' || type === 'select') {\n    let value = option.filter((itm: FormItemsOptionsProps) => itm.value === initialValue) || [];\n    if (value.length > 0) content = value[0].label;\n  } else if (type === 'checkbox') {\n    for (const itm of option as any) {\n      if (initialValue.includes(itm.value)) content += `${itm.label}`;\n    }\n  } else if (type === 'switch') {\n    content = initialValue ? '是' : '否'\n  } else if (type === 'timePicker') {\n    content = initialValue && formatter('HH:mm:ss', new Date(initialValue))\n  } else if (type === 'monthPicker') {\n    content = initialValue && formatter('YYYY-MM', new Date(initialValue))\n  } else if (type === 'dateInput') {\n    content = initialValue && formatter(widgetProps?.format || 'YYYY-MM-DD', new Date(initialValue))\n  } else if (type === 'upload') {\n    const uploadProps = {\n      readOnly: true,\n      fileList: initialValue,\n      value: initialValue,\n      uploadType: widgetProps?.uploadType,\n      onChange: () => { }\n    }\n    content = <Upload {...uploadProps} />\n  } else {\n    // initialValue 支持 string number 或者 自定义\n    content = (\n      typeof initialValue === 'string' ||\n      typeof initialValue === 'number' ||\n      React.isValidElement(initialValue)\n    ) ? initialValue : ''\n  }\n  return content\n}","import React from 'react';\nimport { Descriptions } from 'uiw';\nimport { ProFormProps } from './type';\nimport { getReadValue } from './utils/index';\n\nexport default ({ title, formDatas, readOnlyProps }: ProFormProps) => {\n  return (\n    <Descriptions bordered title={title} {...readOnlyProps}>\n      {formDatas?.map(\n        (\n          {\n            hide,\n            label,\n            widget,\n            initialValue = '',\n            option = [],\n            readSpan = 1,\n            widgetProps = {},\n          },\n          index,\n        ) => {\n          return hide ? null : (\n            <Descriptions.Item span={readSpan} label={label} key={index}>\n              {getReadValue(widget, initialValue, option, widgetProps)}\n            </Descriptions.Item>\n          );\n        },\n      )}\n    </Descriptions>\n  );\n};\n","import React from 'react';\nimport { Checkbox } from 'uiw';\n\ninterface FormSelectProps {\n  option?: HTMLOptionElement[];\n}\n\nconst FormCheckBox: React.FC<FormSelectProps> = ({ option, ...others }) => {\n  return (\n    <Checkbox.Group {...others}>\n      {option &&\n        option.map((opt) => (\n          <Checkbox key={opt.value} value={opt.value}>\n            {opt.label}\n          </Checkbox>\n        ))}\n    </Checkbox.Group>\n  );\n};\n\nexport default FormCheckBox;\n","import React, { useMemo, Fragment } from 'react';\nimport { Collapse, Card } from 'uiw';\nimport FormDom from './formdom';\nimport ReadFormDom from './readform';\nimport { getFormFields } from './widgets';\nimport { ProFormProps } from './type';\nimport './style/form-item.less';\n\nexport default function ProForm(props: ProFormProps) {\n  const {\n    formDatas = [],\n    title = '',\n    formType = 'card',\n    readOnly = false,\n    customWidgetsList = {},\n  } = props;\n\n  // 获取表单配置\n  const formfields = useMemo(\n    () => getFormFields(readOnly, formDatas, customWidgetsList),\n    [formDatas],\n  );\n\n  // 判断表单类型\n  const renderForm = useMemo(() => {\n    const formDomProps = { ...props, formfields };\n\n    // 判断是否是详情模式\n    const children = readOnly ? (\n      <ReadFormDom {...props} />\n    ) : (\n      <FormDom {...formDomProps} />\n    );\n    // 非详情模式下渲染标题\n    const renderTitle = !readOnly ? title : undefined;\n\n    if (formType === 'card') return <Card title={renderTitle}>{children}</Card>;\n    if (formType === 'collapse') {\n      return (\n        <Collapse title={renderTitle} activeKey={['1']}>\n          <Collapse.Panel header={title} key={'1'}>\n            {children}\n          </Collapse.Panel>\n        </Collapse>\n      );\n    }\n    return (\n      <Fragment>\n        {renderTitle && <h3>{title}</h3>}\n        {children}\n      </Fragment>\n    );\n  }, [formType, formDatas, title]);\n\n  return renderForm;\n}\n","import React from 'react';\nimport { Fields, FormItemsProps } from '../type';\nimport {\n  Input,\n  Switch,\n  Textarea,\n  DateInput,\n  TimePicker,\n  MonthPicker,\n  SearchSelect,\n} from 'uiw';\nimport Radio from '../../ProTable/widgets/Radio';\nimport Select from '../../ProTable/widgets/Select';\nimport CheckBox from './CheckBox';\nimport Upload from './Upload';\n\n/**\n *\n * @param readOnly 是否是只读模式 boolean\n * @param formDatas 表单项 FormItemsProps[]\n * @returns fields  Record<string, FormFieldsProps<{}>>\n */\nexport function getFormFields(\n  readOnly?: boolean,\n  formDatas: FormItemsProps[] = [],\n  customWidgetsList: Fields = {},\n) {\n  const widgetsList: Fields = {\n    input: Input,\n    radio: Radio,\n    checkbox: CheckBox,\n    switch: Switch,\n    select: Select,\n    searchSelect: SearchSelect,\n    textarea: Textarea,\n    dateInput: DateInput,\n    timePicker: TimePicker,\n    monthPicker: MonthPicker,\n    upload: Upload,\n    ...customWidgetsList,\n  };\n  const fields: Fields = {};\n  formDatas.forEach((col) => {\n    if (!readOnly) delete col.readSpan;\n    if (col) {\n      const {\n        hide = false,\n        widgetProps,\n        key,\n        widget,\n        label,\n        initialValue,\n        ...otherProps\n      } = col;\n      if (!hide) {\n        const name = key;\n        const Widget = widgetsList[widget];\n        fields[name] = {\n          label: label,\n          children: <Widget {...widgetProps} />,\n          ...otherProps,\n          initialValue,\n        };\n      }\n    }\n  });\n  return fields;\n}\n"],"names":["webpackEmptyContext","req","e","Error","code","keys","resolve","id","module","exports","Code","dependencies","codePen","other","props","codeSandboxOption","files","content","replace","name","description","react","devDependencies","kkt","typescript","license","scripts","start","build","test","browserslist","React","style","marginBottom","editorUrl","className","styles","title","target","rel","href","getCodeStr","data","forEach","node","type","value","children","Array","isArray","Markdown","getMdStr","state","mdStr","this","then","str","setState","default","Fragment","padding","source","components","inline","noPreview","noScroll","bgWhite","noCode","config","Object","filter","undefined","length","Component","loading","others","display","bgColor","codeMessage","request","url","options","method","newOptions","headers","Accept","urlNew","paramsArray","key","splitUrl","response","err","status","errortext","error","StoreCtx","createContext","useStore","useContext","columns","tableProps","useState","total","store","SWRConfiguration","defaultValues","useMemo","defaultSearchValues","col","JSON","isFirstMountRef","useRef","formatQuery","useCallback","query","page","pageSize","pageIndex","useSWR","body","revalidateOnFocus","isValidating","onSearch","setPageIndex","onPageChange","useEffect","stores","updateStore","setPrevData","formatData","prevData","footer","current","divider","onChange","option","opt","label","widgets","input","radio","checkbox","switch","select","searchSelect","textarea","dateInput","timePicker","monthPicker","MonthPicker","onBeforeSearch","getFormFields","fields","initialValue","Widget","onFormSearch","searchValues","emptyLength","background","paddingBottom","resetOnSubmit","onSubmit","initial","onSubmitError","resetForm","gutter","fixed","width","index","align","textAlign","marginRight","searchBtns","btn","render","idx","htmlType","operateButtons","reset","refersh","Provider","params","selectChecked","selectCheckedRows","datas","ProDrawer","onClose","buttons","isOpen","size","bodyStyle","show","memo","showSaveButton","showResetButton","resetButtonProps","colSpan","span","ref","disabled","canSubmit","saveButtonProps","onClick","getBase64","file","reader","Promise","String","getListFiles","promiseFiles","i","fileListBase64","isMaxFileSizeValid","fileSize","maxFileSize","isAcceptTypeValid","accept","fileName","item","isMaxNumberValid","totalNumber","maxNumber","keyUpdate","getErrorValidation","newErrors","fileList","fileType","console","DEFAULT_NULL_INDEX","dataURLKey","multiple","inputProps","inValue","inputRef","handleClickInput","openFileDialog","onFileUpload","setKeyUpdate","onFileRemoveAll","validate","errorsValidation","setErrors","onError","errors","handleChange","updatedIndexes","updatedFileList","onInputChange","acceptTypeString","getAcceptTypeString","onFileUpdate","onFileRemove","updatedList","isImageValid","ext","indexOf","uploadBtn","deleteBtn","image","viewBtn","readOnly","crossOrigin","src","alt","height","marginLeft","onUploadView","deleteAllBtn","header","icon","marginTop","dataSource","renderItem","extra","uploadType","setSrc","setVisible","setFiles","onUploadChange","flex","chidrenProps","renderChildrenProps","onClosed","confirmButtonProps","getReadValue","itm","formatter","Date","widgetProps","uploadProps","readOnlyProps","bordered","formDatas","readSpan","hide","widget","ProForm","formType","customWidgetsList","formfields","widgetsList","upload","Upload","formDomProps","renderTitle","activeKey"],"sourceRoot":""}