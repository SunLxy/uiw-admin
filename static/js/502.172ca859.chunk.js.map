{"version":3,"file":"static/js/502.172ca859.chunk.js","mappings":"kMAGe,SAASA,IACtB,OACE,SAAC,IAAD,M,wHCFW,SAASC,IAqDtB,OACE,gBAAKC,MAAO,CAAEC,QAAS,IAAvB,UACE,eAAQC,SAAR,EAAwBF,MAAO,CAAEG,QAAS,SAA1C,UACE,iCACE,eACEC,eADF,EAEEC,SAAU,YAA0B,EAAzB,QAAyB,EAAdC,SACtBC,cAAgBC,SAAAA,GACd,OAAIA,EAAJ,OACE,UAAYA,EAAZ,OAEF,MAEFC,OAAQ,CACNC,SAAU,CACRC,eADQ,aAERC,WAAY,CAAEC,MAAO,KACrBC,SAHQ,WAIRC,MAJQ,qBAKRC,UACE,eACEC,QADF,OAEEC,GAFF,WAGEC,YAAY,+BAIlBC,SAAU,CACRT,eADQ,aAERC,WAAY,CAAEC,MAAO,IACrBE,MAHQ,qBAIRD,SAJQ,WAKRE,UACE,eACEC,QADF,OAEEC,GAFF,WAGEG,KAHF,WAIEF,YAAY,0BAjCtB,SAuCG,YAAC,MAA4C,EAA5C,UAA4C,EAA5C,MAA4C,EAA5C,WAA4BG,EAAgB,EAAhBA,UAC5B,OACE,0BACE,gBAAKC,OAAL,cACE,eAAKC,OAAL,WAAYf,EAAOC,YACnB,eAAKc,OAAL,WAAYf,EAAOW,YACnB,gBAAKpB,MAAO,CAACyB,UAAW,IAAxB,WACE,eACEC,UAAWC,IACXN,KAFF,UAGEO,SAHF,oCAOA,eAAQP,KAAR,SAAsBQ,QAAtB,oDASZ,eACEC,QAlFM,CACd,CACEC,MADF,eAEEC,IAAK,QAEP,CACED,MADF,eAEEC,IAAK,OAEP,CACED,MADF,eAEEC,IAAK,SAwECC,KAxHI,CACZ,CACEC,KADF,qBAEEC,IAFF,KAGEC,KAAM,qMAER,CACEF,KADF,qBAEEC,IAFF,KAGEC,KAAM,8LAER,CACEF,KADF,qBAEEC,IAFF,KAGEC,KAAM,yLAER,CACEF,KADF,eAEEC,IAFF,KAGEC,KAAM,2MAER,CACEF,KADF,aAEEC,IAFF,KAGEC,KAAM,qJAER,CACEF,KADF,eAEEC,IAFF,KAGEC,KAAM,iKAER,CACEF,KADF,qBAEEC,IAFF,IAGEC,KAAM,+KAuFAC,QAAQ,eAAY/B,QAAZ,EAAwBgC,SAAxB,GAAsCC,MAAtC,GAAiDC,SAAO,a,2EC7F5E,SAASC,EAAUC,GACjB,IAAM,EAAN,EAAM,QAAN,IAAiBX,MAAAA,OAAjB,MAAM,GAAN,MAA6BY,QAAAA,OAA7B,MAAM,KAAN,MAA6C9B,MAAAA,OAA7C,MAAM,IAAN,MAA0D+B,QAAAA,OAA1D,MAAM,GAAN,EAAwE5B,EAAxE,EAAwEA,SAAxE,eACA,OACE,uBACEe,MADF,EAEEc,OAFF,EAGEF,QAASA,GAHX,EAIEG,KAJF,EAKEC,UAAW,CAAE9C,QAAS,qBALxB,GAOEoC,OACEO,EAAA,KACE,sBAAG7B,MAAAA,OAAH,MAAC,GAAD,EAAC,EAAD,EAAC,QAAD,IAAwBiC,KAAAA,OAAxB,SAAC,EAAD,EAAC,QAAD,IAA8C3B,KAAAA,OAA9C,MAAC,UAAD,MAAgER,MAAAA,OAAhE,MAAC,GAAD,MAA4EiC,KAAAA,OAA5E,MAAmF,UAAnF,SACEE,IACE,eACEhD,MAAO,CAAEa,MAAOA,GAEhBQ,KAHF,EAIEyB,KAJF,EAKEjB,QAASoB,GALX,EAME/C,QANF,WAQGa,GAVP,MATN,SAyBGC,KAKP,OAAekC,EAAAA,EAAAA,MAAf","sources":["pages/TableList/index.tsx","../../../packages/components/src/ProTable/index.tsx","../../../packages/components/src/ProDrawer/index.tsx"],"sourcesContent":["import React from 'react'\nimport {ProTable } from '@uiw-admin/components'\n\nexport default function index() {\n  return (\n    <ProTable />\n  )\n}\n","import React from 'react';\nimport { Table, Button, Input, Form, Pagination, Loader, Row, Col } from 'uiw';\n\nexport default function ProTabel() {\n  const datas = [\n    {\n      name: '邓紫棋',\n      age: '12',\n      info: '又名G.E.M.，原名邓诗颖，1991年8月16日生于中国上海，中国香港创作型女歌手。',\n    },\n    {\n      name: '李易峰',\n      age: '32',\n      info: '1987年5月4日出生于四川成都，中国内地男演员、流行乐歌手、影视制片人',\n    },\n    {\n      name: '范冰冰',\n      age: '23',\n      info: '1981年9月16日出生于山东青岛，中国影视女演员、制片人、流行乐女歌手',\n    },\n    {\n      name: '杨幂',\n      age: '34',\n      info: '1986年9月12日出生于北京市，中国内地影视女演员、流行乐歌手、影视制片人。',\n    },\n    {\n      name: 'Angelababy',\n      age: '54',\n      info: '1989年2月28日出生于上海市，华语影视女演员、时尚模特。',\n    },\n    {\n      name: '唐嫣',\n      age: '12',\n      info: '1983年12月6日出生于上海市，毕业于中央戏剧学院表演系本科班',\n    },\n    {\n      name: '吴亦凡',\n      age: '4',\n      info: '1990年11月06日出生于广东省广州市，华语影视男演员、流行乐歌手。',\n    },\n  ];\n  const columns = [\n    {\n      title: '名字',\n      key: 'name',\n    },\n    {\n      title: '年龄',\n      key: 'age',\n    },\n    {\n      title: '地址',\n      key: 'info',\n    },\n  ];\n\n  return (\n    <div style={{ padding: 10 }}>\n      <Loader loading={false} style={{ display: 'block' }}>\n        <>\n          <Form\n            resetOnSubmit={false}\n            onSubmit={({ initial, current }) => {}}\n            onSubmitError={(error) => {\n              if (error.filed) {\n                return { ...error.filed };\n              }\n              return null;\n            }}\n            fields={{\n              username: {\n                labelClassName: 'fieldLabel',\n                labelStyle: { width: 160 },\n                labelFor: 'username',\n                label: '用户名',\n                children: (\n                  <Input\n                    preIcon=\"user\"\n                    id=\"username\"\n                    placeholder=\"用户名: admin\"\n                  />\n                ),\n              },\n              password: {\n                labelClassName: 'fieldLabel',\n                labelStyle: { width: 60 },\n                label: '用户名',\n                labelFor: 'password',\n                children: (\n                  <Input\n                    preIcon=\"lock\"\n                    id=\"password\"\n                    type=\"password\"\n                    placeholder=\"密码: admin\"\n                  />\n                ),\n              },\n            }}\n          >\n            {({ fields, state, canSubmit, resetForm }) => {\n              return (\n                <div>\n                  <Row gutter={10}  >\n                    <Col fixed>{fields.username}</Col>\n                    <Col fixed>{fields.password}</Col>\n                    <Col style={{marginTop: 31}}>\n                      <Button\n                        disabled={!canSubmit()}\n                        type=\"primary\"\n                        htmlType=\"submit\"\n                      >\n                        提交\n                      </Button>\n                      <Button type=\"danger\" onClick={resetForm}>\n                        重置表单\n                      </Button>\n                    </Col>\n                  </Row>\n                </div>\n              );\n            }}\n          </Form>\n          <Table\n            columns={columns}\n            data={datas}\n            footer={<Pagination current={2} pageSize={10} total={30} divider />}\n          />\n        </>\n      </Loader>\n    </div>\n  );\n}\n","import React, { memo } from 'react';\nimport { Drawer, Button, DrawerProps, Row, Col } from 'uiw';\n\n/**\n * ProDrawer 组件继承于https://uiwjs.github.io/#/components/drawer\n * @param {boolean} visible 显示隐藏\n * @param {string} title 标题\n * @param {()=>void} onClose 关闭事件\n * @param {number} width Drawer宽\n * @param {Array<{label?:string,onPress?:()=>void,show?:boolean,loading?:boolean}>} buttons 按钮集合(label:\"文本\",onPress:点击事件,show:是否展示)\n * @param {React.ReactNode} children\n * @returns\n */\n\ninterface ButtonItemsProps {\n  label?: string;\n  onPress?: () => void;\n  show?: boolean;\n  size?: 'large' | 'default' | 'small';\n  type?: 'primary' | 'success' | 'warning' | 'danger' | 'light' | 'dark' | 'link';\n  loading?: boolean;\n  width?: number\n}\n\ninterface ProDrawerProps extends DrawerProps {\n  visible: boolean;\n  title?: string;\n  onClose?: any;\n  width?: number;\n  buttons?: Array<ButtonItemsProps>;\n  children?: React.ReactNode\n}\nfunction ProDrawer(props: ProDrawerProps) {\n  const { visible, title = '', onClose = null, width = 800, buttons = [], children, ...others } = props\n  return (\n    <Drawer\n      title={title}\n      isOpen={visible}\n      onClose={onClose && onClose}\n      size={width}\n      bodyStyle={{ padding: '0 10px 45px 10px' }}\n      {...others}\n      footer={\n        buttons.map(\n          ({ label = '', onPress, show = true, loading, type = \"primary\", width = 60, size = \"default\" }, idx) =>\n            show && (\n              <Button\n                style={{ width: width }}\n                key={idx}\n                type={type}\n                size={size}\n                onClick={onPress && onPress}\n                loading={loading}\n              >\n                {label}\n              </Button>\n            )\n        )\n      }\n    >\n      {children}\n    </Drawer>\n  );\n}\n\nexport default memo(ProDrawer);\n"],"names":["index","ProTabel","style","padding","loading","display","resetOnSubmit","onSubmit","current","onSubmitError","error","fields","username","labelClassName","labelStyle","width","labelFor","label","children","preIcon","id","placeholder","password","type","resetForm","gutter","fixed","marginTop","disabled","canSubmit","htmlType","onClick","columns","title","key","data","name","age","info","footer","pageSize","total","divider","ProDrawer","props","onClose","buttons","isOpen","size","bodyStyle","show","onPress","memo"],"sourceRoot":""}