{"version":3,"file":"529.js","mappings":"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","sources":["webpack://@examples/base/./src/pages/Demo/Detail/index.tsx","webpack://@examples/base/./src/pages/Demo/Detail/items.tsx","webpack://@examples/base/./src/pages/Demo/index.tsx"],"sourcesContent":["import React from 'react';\nimport { ProDrawer, ProForm } from '@uiw-admin/components'\nimport { Notify, FileInput } from 'uiw'\nimport { useSelector, useDispatch } from 'react-redux';\nimport { RootState, Dispatch } from '@uiw-admin/models';\nimport { insert, update } from '../../../servers/demo'\nimport { items } from './items'\nimport useSWR from 'swr'\n\ninterface DetailProps {\n  updateData?: any\n}\n\nconst Detail = (props: DetailProps) => {\n  const { updateData } = props\n  const dispatch = useDispatch<Dispatch>();\n  const { demo: { drawerVisible, tableType, queryInfo, isView } } = useSelector((state: RootState) => state);\n\n  const onClose = () => dispatch({ type: \"demo/clean\" })\n\n  const { mutate } = useSWR([\n    (tableType === 'add' && insert) || (tableType === 'edit' && update), { method: \"POST\", body: queryInfo }], {\n    revalidateOnMount: false,\n    revalidateOnFocus: false,\n    onSuccess: (data) => {\n      if (data && data.code === 200) {\n        Notify.success({ title: data.message });\n        onClose()\n      }\n    },\n  })\n\n  const dataSource: any = items(queryInfo, { isView })\n\n  return (\n    <ProDrawer\n      width={800}\n      title={tableType === 'add' ? '新增' : tableType === 'edit' ? '编辑' : '查看'}\n      visible={drawerVisible}\n      onClose={onClose}\n    >\n      <ProForm\n        title=\"基础信息\"\n        onSubmit={(initial, current) => {\n          const errorObj: any = {};\n          if (!current?.lastName) {\n            errorObj.lastName = '名字不能为空';\n          }\n          if (Object.keys(errorObj).length > 0) {\n            const err: any = new Error();\n            err.filed = errorObj;\n            Notify.error({ title: '提交失败！' });\n            throw err;\n          }\n          mutate()\n        }}\n        btns={[\n          {\n            btnType: \"submit\",\n            label: \"提交表单\",\n            type: \"primary\"\n          }\n        ]}\n        renderWidgetsList={{ fileInput: FileInput }}\n        // 更新表单的值\n        onChange={(initial: any, current: any) => updateData({ queryInfo: { ...queryInfo, ...current } })}\n        formDatas={dataSource}\n      />\n    </ProDrawer>\n  )\n}\n\nexport default Detail","export const items = (queryInfo: any, { isView }: { isView: boolean }) => [\n  {\n    label: '姓氏',\n    key: 'firstName',\n    widget: 'input',\n    initialValue: queryInfo?.firstName,\n    widgetProps: { disabled: isView },\n    hide: true\n  },\n  {\n    label: '名字',\n    key: 'lastName',\n    widget: 'input',\n    initialValue: queryInfo?.lastName,\n    widgetProps: { disabled: isView }\n  },\n  {\n    label: '邮箱',\n    key: 'email',\n    widget: 'input',\n    initialValue: queryInfo?.email,\n    widgetProps: { disabled: isView }\n  },\n  {\n    label: '水果',\n    key: 'select',\n    widget: 'select',\n    option: [\n      { value: 1, label: '苹果' },\n      { value: 2, label: '西瓜' },\n      { value: 3, label: '香蕉' },\n      { value: 4, label: '东北大冻梨' },\n    ],\n    initialValue: queryInfo?.select,\n    widgetProps: { disabled: isView }\n  },\n  {\n    label: \"自定义组件\",\n    key: 'id1',\n    widget: \"fileInput\",\n  }\n]","import React from 'react';\nimport { Button } from 'uiw'\nimport { useDispatch } from 'react-redux';\nimport { Dispatch } from '@uiw-admin/models';\nimport { ProTable, useTable } from '@uiw-admin/components';\nimport { selectPage } from '@/servers/demo'\nimport Detail from './Detail'\n\nconst Demo = () => {\n  const dispatch = useDispatch<Dispatch>();\n\n  const updateData = (payload: any) => {\n    dispatch({\n      type: 'demo/updateState',\n      payload,\n    });\n  };\n\n  const table = useTable(selectPage, {\n    // 格式化接口返回的数据，必须返回{total 总数, data: 列表数据}的格式\n    formatData: (data: any) => {\n      return {\n        total: data.data.total,\n        data: data.data.rows || [],\n      };\n    },\n    // 格式化查询参数 会接收到pageIndex 当前页  pageSize 页码\n    query: (pageIndex: number) => {\n      console.log(pageIndex);\n      return {\n        page: pageIndex,\n        pageSize: 10,\n      };\n    },\n  });\n\n  // 操作\n  function handleEditTable(type: string, record: any) {\n    updateData({\n      isView: type === 'view',\n      tableType: type\n    })\n    if (type === 'add') {\n      updateData({ drawerVisible: true, queryInfo: {} })\n    }\n    if (type === 'edit' || type === 'view') {\n      dispatch({\n        type: 'demo/selectById',\n        payload: { id: record?.id }\n      });\n    }\n  }\n\n  return (\n    <React.Fragment>\n      <ProTable\n        btns={[\n          {\n            label: '新增',\n            type: 'primary',\n            onClick: handleEditTable.bind(this, 'add')\n          },\n          {\n            label: '导出',\n            type: \"danger\",\n            onClick: handleEditTable.bind(this, 'export')\n          },\n          {\n            label: '导入',\n            type: \"dark\",\n            onClick: handleEditTable.bind(this, 'import')\n          },\n        ]}\n        columns={[\n          {\n            title: '姓名',\n            key: 'name',\n            props: {\n              widget: 'input',\n              initialValue: 'zzz',\n              // 组件属性\n              widgetProps: {\n                preIcon: 'user',\n                placeholder: '输入用户名'\n              }\n            },\n          },\n          {\n            title: '年龄',\n            key: 'age',\n            props: {\n              widget: 'select',\n              option: [\n                { label: '20', value: 20 },\n                { label: '10', value: 10 },\n              ],\n            },\n          },\n          {\n            title: '地址',\n            key: 'info',\n          },\n          {\n            title: '操作',\n            key: 'edit',\n            width: 98,\n            render: (text: any, key: any, rowData: any) => (\n              <div>\n                <Button size=\"small\" type=\"danger\" onClick={handleEditTable.bind(this, 'edit', rowData)}>编辑</Button>\n                <Button size=\"small\" type=\"success\" onClick={handleEditTable.bind(this, 'view', rowData)}>查看</Button>\n              </div>\n            ),\n          },\n        ]}\n        table={table}\n      />\n      <Detail updateData={updateData} />\n    </React.Fragment>\n  );\n}\nexport default Demo"],"names":["props","updateData","dispatch","useDispatch","useSelector","state","demo","drawerVisible","tableType","queryInfo","isView","onClose","type","mutate","useSWR","insert","update","method","body","revalidateOnMount","revalidateOnFocus","onSuccess","data","code","Notify","title","message","dataSource","label","key","widget","initialValue","firstName","widgetProps","disabled","hide","lastName","email","option","value","select","items","width","visible","onSubmit","initial","current","errorObj","Object","keys","length","err","Error","filed","btns","btnType","renderWidgetsList","fileInput","FileInput","onChange","formDatas","payload","table","useTable","selectPage","formatData","total","rows","query","pageIndex","console","log","page","pageSize","handleEditTable","record","id","onClick","bind","columns","preIcon","placeholder","render","text","rowData","size"],"sourceRoot":""}