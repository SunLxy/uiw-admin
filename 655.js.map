{"version":3,"file":"655.js","mappings":"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","sources":["webpack://@examples/base/./src/component/QuickForm/widgets/index.tsx","webpack://@examples/base/./src/component/QuickForm/formdom.tsx","webpack://@examples/base/./src/component/QuickForm/utils.tsx","webpack://@examples/base/./src/component/QuickForm/index.tsx","webpack://@examples/base/./src/pages/Demo/Detail/index.tsx","webpack://@examples/base/./src/pages/Demo/index.tsx","webpack://@examples/base/./src/servers/demo.ts","webpack://@examples/base/../../packages/components/src/Skeleton/index.tsx","webpack://@examples/base/../../packages/components/src/ProTable/hooks.ts","webpack://@examples/base/../../packages/components/src/ProTable/BaseTable.tsx","webpack://@examples/base/../../packages/components/src/ProTable/widgets/Select.tsx","webpack://@examples/base/../../packages/components/src/ProTable/widgets/Radio.tsx","webpack://@examples/base/../../packages/components/src/ProTable/BaseForm.tsx","webpack://@examples/base/../../packages/components/src/ProTable/index.tsx","webpack://@examples/base/../../packages/components/src/ProTable/useTable.ts","webpack://@examples/base/../../packages/components/src/ProDrawer/index.tsx"],"sourcesContent":["import React from 'react';\nimport { Input, Select } from 'uiw';\nimport { FormOptionsProps } from '../index'\nimport { useController } from 'react-hook-form'\n\nfunction WidgetsItem({\n  // formDatas 表单项参数\n  name: labelName,\n  type,\n  render,\n  initValue,\n  rules,\n  options,\n  attributes,\n  // 组件api监听表单值变化\n  onItemChange,\n  // react-hook-form/useForm\n  control,\n  trigger\n}: any) {\n\n  const { field: { onChange, name, onBlur, value, ref } } = useController({\n    name: labelName,\n    control,\n    rules: rules,\n    defaultValue: initValue,\n  });\n\n  const dom = () => {\n    if (type === 'input') {\n      return (\n        <div style={{ flex: 1 }}>\n          <Input\n            ref={ref}\n            name={name}\n            value={value || ''}\n            onChange={(event: React.ChangeEvent<HTMLInputElement>) => {\n              onChange(event)\n              trigger(name)\n              onItemChange?.(name, event)\n            }}\n            onBlur={() => {\n              onBlur()\n              trigger(name)\n            }}\n            {...attributes}\n          />\n        </div>\n      )\n    }\n    if (type === 'select') {\n      return (\n        <div style={{ flex: 1 }}>\n          <Select\n            name={name}\n            ref={ref}\n            onChange={(value) => {\n              onChange(value)\n              trigger(name)\n              onItemChange?.(name, value)\n            }}\n            onBlur={onBlur()}\n            value={value}\n            {...attributes}\n          >\n            <Select.Option>{attributes?.placeholder || '请选择'}</Select.Option>\n            {options.map(({ disabled, label, value }: FormOptionsProps) => <Select.Option disabled={disabled} value={value} key={value}>{label}</Select.Option>)}\n          </Select>\n        </div>\n      )\n    }\n    // 自定义组件\n    if (type === 'render') {\n      return render?.({ name, ref, onChange, onBlur })\n    }\n    return null\n  }\n\n  return dom()\n}\n\nexport default WidgetsItem","import React from 'react';\nimport { QuickFormProps } from './'\nimport { Row, Col } from 'uiw'\nimport WidgetsItem from './widgets'\nimport { Control, UseFormTrigger, FieldValues } from 'react-hook-form'\nimport './style/form-item.less';\n\nexport type FromDomsProps = {\n  control: Control<FieldValues, object>;\n  errors: {\n    [x: string]: any;\n  }\n  trigger: UseFormTrigger<FieldValues>;\n} & QuickFormProps\n\nconst FromDom = ({\n  formDatas = [],\n  onItemChange,\n  span = 3,\n  control,\n  trigger,\n  errors\n}: FromDomsProps) => {\n  return (\n    <div className=\"w-form-grid\" style={{ gridTemplateColumns: `repeat(${span}, 1fr)` }}>\n      {\n        formDatas.map(item => {\n\n          const clsLabel = ['w-form-label', item?.rules ? 'w-form-label-require' : null]\n            .filter(Boolean)\n            .join(' ')\n            .trim();\n\n          const labelFontStyle = {\n            fontWeight: 600,\n            color: \"#000000d9\"\n          }\n\n          const childrenProps = { ...item, onItemChange, control, trigger }\n          const children = <WidgetsItem {...childrenProps} />\n\n          // 隐藏不显示\n          if (item.hide) {\n            return null\n          }\n\n          return (\n            <div key={item.name}>\n              <Row className=\"w-form-item-center\">\n                <Col fixed className={clsLabel}>\n                  {item?.rules && <span style={{ paddingTop: 5, paddingRight: 5 }}>*</span>}\n                  <span style={{ paddingLeft: item?.rules ? 0 : 12, ...labelFontStyle }}>{item?.label || ''}</span>\n                </Col>\n                <Col>{children}</Col>\n              </Row>\n              <Row>\n                {errors[item.name] && errors[item.name].message && (\n                  <Col className=\"w-form-label-error\"> {errors[item.name].message}</Col>\n                )}\n              </Row>\n            </div>\n          )\n        })\n      }\n    </div>\n  )\n}\n\nexport default FromDom","const type = (data: any) => Object.prototype.toString.call(data).slice(8, -1).toLowerCase()\n\nconst isObject = (value: any) => value && type(value) === 'object'\n\nconst hasErrors = (errors: any) => isObject(errors) && !!Object.keys(errors).length\n\nexport {\n  type,\n  isObject,\n  hasErrors\n}","import React, { useImperativeHandle } from 'react';\nimport { useForm, FieldErrors, RefCallBack, Noop } from 'react-hook-form'\nimport FormDom from './formdom'\nimport { hasErrors } from './utils'\n\nexport interface RenderCallBackProps {\n  name: any;\n  ref: RefCallBack;\n  onChange: (...event: any[]) => void;\n  onBlur: Noop\n}\n\nexport interface FormOptionsProps {\n  label: string;\n  value: string | number;\n  disabled?: boolean;\n}\n\nexport interface FormDataProps {\n  /** 表单元素标题 */\n  label?: string;\n  /** 表单元素字段名称 */\n  name: string;\n  /** 表单元素类型 */\n  type: 'input' | 'select' | 'render';\n  /** 表单元素值，可以是默认值 */\n  initValue?: any | any[];\n  /** 数据化选项内容, type为 radio、checkbox、select 生效 */\n  options?: FormOptionsProps[];\n  /** 校验规则 */\n  rules?: FieldErrors\n  /** 是否显示 */\n  hide?: boolean;\n  attributes?: any;\n  render?: (attr: RenderCallBackProps) => JSX.Element\n}\n\nexport interface QuickFormProps {\n  /** 是否是查看模式 */\n  readonly?: boolean;\n  /** 表单标题 */\n  title?: string\n  /** 表单集合 */\n  formDatas: FormDataProps[];\n  setOptions?: {\n    submitErrorCheck?: boolean; //是否检查\n    processValuesFunc?: (value: any) => void // 接收数据\n  },\n  /** 表单值变化 */\n  onItemChange?: (name: string, value: string | number | any | any[]) => Promise<void>\n  /** 表单横向排列个数 */\n  span?: number;\n}\n\n\n\nfunction Index(props: QuickFormProps, ref: any) {\n\n  const { getValues, setValue, trigger, control, formState: { errors }, reset, setError, clearErrors } = useForm()\n\n  const defaultOptions = {\n    submitErrorCheck: true, // 提交错误检查\n    processValuesFunc: null, // 处理 values 数据\n    ...props.setOptions\n  };\n\n  // 暴露给父组件调用的方法\n  useImperativeHandle(ref, () => ({\n    setValue: async (name: string, value?: any, options?: any) => setValue(name, value, options),\n    getValues: async () => {\n      if (defaultOptions.submitErrorCheck) {\n        await trigger()\n        if (hasErrors(errors)) {\n          return null\n        }\n      }\n      const values = getValues()\n      if (typeof defaultOptions.processValuesFunc === 'function') {\n        return defaultOptions.processValuesFunc(values)\n      }\n      return values\n    },\n    errors: async () => errors,\n    reset: async (...args: any) => reset(...args),\n    trigger: async () => trigger(),\n    setError: (name: string, error: FieldErrors) => setError(name, error),\n    clearErrors: (name?: string | string[] | undefined) => clearErrors(name),\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }), [props.setOptions, trigger, reset, setError, clearErrors, errors, getValues, setValue]);\n\n  const formDomProps = { ...props, control, trigger, errors }\n\n  return (\n    <React.Fragment>\n      {props?.title && (\n        <div style={{ marginBottom: 15 }}><h5>{props.title}</h5></div>\n      )}\n      <FormDom {...formDomProps} />\n    </React.Fragment >\n  )\n}\n\n\nexport default React.forwardRef(Index)","import React, { useRef, forwardRef } from 'react';\nimport QuickForm from 'component/QuickForm'\nimport { ProDrawer } from '@uiw-admin/components'\nimport { Checkbox, Col } from 'uiw'\nimport { useSelector, useDispatch } from 'react-redux';\nimport { RootState, Dispatch } from '@uiw-admin/models';\n// import { insert, update } from 'servers/demo'\n// import useSWR from 'swr'\n\ninterface DetailProps {\n  updateData?: any\n}\n\n// 自定义组件\nconst NewCheckBox = forwardRef(({ name, onChange, onBlur }: any, ref) => {\n  return (\n    <Col>\n      <Checkbox value=\"checkbox\" name={name} onChange={onChange} onBlur={onBlur}  />\n    </Col>\n  )\n})\n\nconst Detail = ({ updateData }: DetailProps) => {\n  const formRef = useRef<any>()\n  const dispatch = useDispatch<Dispatch>();\n  const { demo: { drawerVisible, tableType, queryInfo } } = useSelector((state: RootState) => state);\n\n  const onClose = () => dispatch({ type: \"demo/clean\" })\n\n  return (\n    <ProDrawer\n      width={800}\n      title={tableType === 'add' ? '新增' : tableType === 'edit' ? '编辑' : '查看'}\n      visible={drawerVisible}\n      onClose={onClose}\n      buttons={\n        [\n          {\n            label: \"保存\",\n            onPress: async () => {\n              await formRef?.current?.trigger()\n              const errors = await formRef?.current?.errors()\n              const values = await formRef?.current?.getValues()\n              console.log('errors', errors,'values',values)\n              if (errors) return\n            }\n          }\n        ]\n      }\n    >\n      <QuickForm\n        ref={formRef}\n        title=\"测试QuickForm\"\n        onItemChange={async (name, value) => console.log('name', name, 'value', value)}\n        formDatas={[\n          {\n            type: 'input',\n            name: 'firstName',\n            label: \"姓氏\",\n            initValue: queryInfo?.firstName,\n            attributes: {\n              placeholder: '请输入姓氏',\n            },\n            rules: { required: '请输入姓氏' },\n          },\n          {\n            type: 'input',\n            name: 'lastName',\n            label: \"名字\",\n            initValue: queryInfo?.lastName,\n            attributes: {\n              placeholder: '请输入名字',\n            },\n            rules: { required: '请输入名字' },\n          },\n          {\n            type: 'select',\n            name: 'select',\n            label: \"年龄\",\n            initValue: queryInfo?.select,\n            options: [\n              { value: 1, label: '苹果' },\n              { value: 2, label: '西瓜' },\n              { value: 3, label: '香蕉' },\n              { value: 4, label: '东北大冻梨' },\n            ],\n            attributes: {\n              placeholder: '请选择水果',\n            }\n          },\n          {\n            type: \"render\",\n            label: \"自定义组件\",\n            name: \"id1\",\n            rules: { required: '自定义组件' },\n            render: (attr) => <NewCheckBox {...attr} />\n          }\n        ]}\n      />\n    </ProDrawer>\n  )\n}\n\nexport default Detail","import React from 'react';\nimport { Button } from 'uiw'\nimport { useDispatch } from 'react-redux';\nimport { Dispatch } from '@uiw-admin/models';\nimport { ProTable, useTable } from '@uiw-admin/components';\nimport { selectPage } from 'servers/demo'\nimport Detail from './Detail'\n\nconst Demo = () => {\n  const dispatch = useDispatch<Dispatch>();\n\n  const updateData = (payload: any) => {\n    dispatch({\n      type: 'demo/updateState',\n      payload,\n    });\n  };\n\n  const table = useTable(selectPage, {\n    // 格式化接口返回的数据，必须返回{total 总数, data: 列表数据}的格式\n    formatData: (data: any) => {\n      return {\n        total: data.data.total,\n        data: data.data.rows || [],\n      };\n    },\n    // 格式化查询参数 会接收到pageIndex 当前页  pageSize 页码\n    query: (pageIndex: number) => {\n      console.log(pageIndex);\n      return {\n        page: pageIndex,\n        pageSize: 10,\n      };\n    },\n  });\n\n  // 操作\n  function handleEditTable(type: string, record: any) {\n    updateData({\n      isView: type === 'view',\n      tableType: type\n    })\n    if (type === 'add') {\n      updateData({ drawerVisible: true, queryInfo: {} })\n    }\n    if (type === 'edit' || type === 'view') {\n      dispatch({\n        type: 'demo/selectById',\n        payload: { id: record?.id }\n      });\n    }\n  }\n\n  return (\n    <React.Fragment>\n      <ProTable\n        btns={[\n          {\n            label: '新增',\n            type: 'primary',\n            onClick: handleEditTable.bind(this, 'add')\n          },\n          {\n            label: '导出',\n            type: \"danger\",\n            onClick: handleEditTable.bind(this, 'export')\n          },\n          {\n            label: '导入',\n            type: \"dark\",\n            onClick: handleEditTable.bind(this, 'import')\n          },\n        ]}\n        columns={[\n          {\n            title: '姓名',\n            key: 'name',\n            props: {\n              widget: 'input',\n              initialValue: 'zzz',\n              // 组件属性\n              widgetProps: {\n                preIcon: 'user',\n                placeholder: '输入用户名'\n              }\n            },\n          },\n          {\n            title: '年龄',\n            key: 'age',\n            props: {\n              widget: 'select',\n              option: [\n                { label: '20', value: 20 },\n                { label: '10', value: 10 },\n              ],\n            },\n          },\n          {\n            title: '地址',\n            key: 'info',\n          },\n          {\n            title: '操作',\n            key: 'edit',\n            width: 98,\n            render: (text: any, key: any, rowData: any) => (\n              <div>\n                <Button size=\"small\" type=\"danger\" onClick={handleEditTable.bind(this, 'edit',rowData)}>编辑</Button>\n                <Button size=\"small\" type=\"success\" onClick={handleEditTable.bind(this, 'view',rowData)}>查看</Button>\n              </div>\n            ),\n          },\n        ]}\n        table={table}\n      />\n      <Detail updateData={updateData} />\n    </React.Fragment>\n  );\n}\nexport default Demo","import { request } from '@uiw-admin/utils';\n\n// /api/demo/selectById\nfunction selectById(params: { id: string }) {\n  return request('/api/demo/selectById', {\n    method: 'POST',\n    body: { ...params },\n  });\n}\n\nconst update = '/api/demo/update'\n\nconst insert = '/api/demo/insert'\n\nconst selectPage = '/api/demo/selectPage'\n\nexport{\n  selectById,\n  update,\n  insert,\n  selectPage\n}","import React from 'react';\nimport { Loader } from 'uiw';\n\ninterface SkeletonProps {\n  children: React.ReactNode;\n  loading?: boolean;\n}\n\nconst Skeleton: React.FC<SkeletonProps> = ({ children, loading = false }) => {\n  return (\n    <Loader\n      loading={loading}\n      style={{ display: 'block', }}\n      // fullscreen={true}\n      bgColor=\"rgba(255, 255, 255, 0.4)\"\n    >\n      <>{children}</>\n    </Loader>\n  );\n};\n\nexport default Skeleton;\n","import {\n  useContext,\n  createContext,\n} from 'react';\n\nexport const StoreCtx = createContext({});\n\n\nexport const useStore = () => {\n  return useContext(StoreCtx);\n};\n\n\n\n","import React, {\n  useState,\n  useEffect,\n  useCallback,\n  useRef,\n  useMemo,\n} from 'react';\nimport useSWR from 'swr';\nimport { Table, Pagination, TableColumns } from 'uiw';\nimport { request } from '@uiw-admin/utils';\nimport { useStore } from './hooks';\nimport { Fields } from './BaseForm';\n\ninterface BaseTableProps {\n  style?: React.CSSProperties;\n  columns: TableColumns[];\n}\n\nconst BaseTable: React.FC<BaseTableProps> = ({ style, columns }) => {\n  const [pageIndex, setPageIndex] = useState(1);\n\n  const [prevData, setPrevData] = useState({\n    data: [],\n    total: 0,\n  });\n\n  const store = useStore();\n\n  let { formatData, updateStore, query, key, searchValues } = store as any;\n\n  // 表单默认值\n  const defaultValues = useMemo(() => {\n    const defaultSearchValues: Fields = {};\n    columns.forEach((col) => {\n      if (col?.props?.initialValue) {\n        const name = col.key || col.props.key;\n        defaultSearchValues[name] = col.props.initialValue;\n      }\n    });\n\n    return defaultSearchValues;\n  }, [JSON.stringify(columns)]);\n\n  // 是否首次调取数据\n  const isFirstMountRef = useRef(false);\n  // 格式化接口查询参数\n  const formatQuery = useCallback(() => {\n    if (query) {\n      return query(\n        pageIndex,\n        isFirstMountRef.current === false ? defaultValues : searchValues,\n      );\n    } else {\n      // 默认传参\n      return {\n        page: 1,\n        pageSize: 10,\n      };\n    }\n  }, [pageIndex, JSON.stringify(defaultValues), JSON.stringify(searchValues)]);\n\n  const pageSize = formatQuery().pageSize || 10;\n\n  const { data, isValidating } = useSWR(\n    [key, { method: 'POST', body: formatQuery() }],\n    request,\n    {\n      // revalidateOnMount: false,\n      revalidateOnFocus: false,\n    },\n  );\n\n  // 查询\n  const onSearch = useCallback(async () => {\n    setPageIndex(1);\n  }, []);\n  // 分页\n  const onPageChange = useCallback((page) => {\n    setPageIndex(page);\n  }, []);\n\n  useEffect(() => {\n    // 获取表单默认值\n    const defaultSearchValues: Fields = {};\n    columns.forEach((col) => {\n      if (col?.props?.initialValue) {\n        const name = col.key || col.props.key;\n        defaultSearchValues[name] = col.props.initialValue;\n      }\n    });\n    const stores: any = {\n      data: data?.data,\n      total: data?.total,\n      loading: !data || isValidating,\n      onSearch,\n    };\n\n    if (!isFirstMountRef.current) {\n      isFirstMountRef.current = true;\n      // 默认表单值\n\n      stores.searchValues = defaultSearchValues;\n    }\n\n    updateStore(stores);\n\n    // 上一次请求数据\n    if (data) {\n      setPrevData(data);\n    }\n  }, [JSON.stringify(data), isValidating, onSearch, JSON.stringify(columns)]);\n\n  return (\n    <Table\n      columns={columns}\n      data={\n        formatData && data\n          ? formatData(data).data\n          : data?.data || prevData?.data\n      }\n      // style={{overflowX: 'scroll'}}\n      footer={\n        <Pagination\n          current={pageIndex}\n          pageSize={pageSize}\n          total={\n            formatData && data\n              ? formatData(data).total\n              : data?.total || prevData?.total\n          }\n          divider\n          onChange={(page) => {\n            onPageChange(page);\n          }}\n        />\n      }\n    />\n  );\n};\n\nexport default BaseTable;\n","import React from 'react';\nimport { Select } from 'uiw';\n\ninterface FormSelectProps {\n  option?: HTMLOptionElement[];\n}\n\nconst FormSelect: React.FC<FormSelectProps> = ({ option, ...others }) => {\n  return (\n    <Select {...others}>\n      <Select.Option value=\"\">请选择</Select.Option>\n      {option &&\n        option.map((opt) => (\n          <Select.Option key={opt.value} value={opt.value}>\n            {opt.label}\n          </Select.Option>\n        ))}\n    </Select>\n  );\n};\n\nexport default FormSelect;\n","import React from 'react';\nimport {Radio, RadioGroup } from 'uiw';\n\ninterface FormSelectProps {\n  option?: HTMLOptionElement[];\n}\n\nconst FormRadio: React.FC<FormSelectProps> = ({ option, ...others }) => {\n  return (\n    <RadioGroup {...others}>\n      {option &&\n        option.map((opt) => (\n          <Radio key={opt.value} value={opt.value}>\n            {opt.label}\n          </Radio>\n        ))}\n    </RadioGroup>\n  );\n};\n\nexport default FormRadio;\n","import React, { useEffect } from 'react';\nimport {\n  Button,\n  Input,\n  Form,\n  Row,\n  Col,\n  Checkbox,\n  Switch,\n  Textarea,\n  DateInput,\n  TimePicker,\n  MonthPicker,\n  FormSubmitProps,\n  SearchSelect\n} from 'uiw';\nimport { FormCol } from './index';\nimport Select from './widgets/Select';\nimport FormRadio from './widgets/Radio';\nimport { useStore } from './hooks';\n\ninterface BaseFormProps {\n  columns: FormCol[];\n}\n\nexport type Fields = {\n  [key: string]: any;\n};\n\nconst widgets = {\n  input: Input,\n  radio: FormRadio,\n  checkbox: Checkbox,\n  switch: Switch,\n  select: Select,\n  searchSelect: SearchSelect,\n  textarea: Textarea,\n  dateInput: DateInput,\n  timePicker: TimePicker,\n  monthPicker: MonthPicker,\n};\n\nconst BaseForm: React.FC<BaseFormProps> = (props) => {\n  const store = useStore();\n\n  let { updateStore, reset, onSearch } = store as any;\n\n  const { columns } = props;\n  // 获取表单配置\n  const getFormFields = () => {\n    const fields: Fields = {};\n    columns.forEach((col) => {\n      if (col.props && Object.keys(col.props).length > 0) {\n        const { widgetProps, key, widget, label, initialValue, ...otherProps } =\n          col.props;\n        const name = col.key || key;\n        const Widget = widgets[widget];\n        fields[name] = {\n          label: col.title || label,\n          children: <Widget {...widgetProps} />,\n          ...otherProps,\n          initialValue,\n        };\n      }\n    });\n\n    return fields;\n  };\n\n  // 处理更新默认值\n\n  useEffect(() => {\n    updateStore({\n      searchValues: { ...getFormFields().defaultValues },\n    });\n  }, [JSON.stringify(getFormFields().defaultValues)]);\n\n  // 查询\n  const onFormSearch = ({ initial, current }: FormSubmitProps) => {\n    updateStore({\n      searchValues: {\n        ...initial,\n        ...current,\n      },\n    });\n    onSearch(current);\n  };\n\n  // 重置\n\n  // const onReset = (resetForm: () => void) => {\n  //   resetForm();\n  // };\n\n  return (\n    <Form\n      style={{ background: '#fff', paddingBottom: 5 }}\n      resetOnSubmit={false}\n      onSubmit={({ initial, current }) => {\n        onFormSearch({ initial, current });\n      }}\n      onSubmitError={(error) => {\n        if (error.filed) {\n          return { ...error.filed };\n        }\n        return null;\n      }}\n      fields={getFormFields()}\n    >\n      {({ fields, state, canSubmit, resetForm }) => {\n        return (\n          <div>\n            <Row gutter={12}>\n              {Object.keys(fields).map((key) => (\n                <Col key={key} fixed style={{ width: '20%' }}>\n                  {fields[key]}\n                </Col>\n              ))}\n\n              <Col style={{ marginTop: 31 }}>\n                <Button type=\"primary\" htmlType=\"submit\">\n                  查询\n                </Button>\n                {/* <Button type=\"warning\" onClick={() => onReset(resetForm)}>\n                  重置表单\n                </Button> */}\n              </Col>\n            </Row>\n          </div>\n        );\n      }}\n    </Form>\n  );\n};\n\nexport default BaseForm;\n","import React, { useState, useMemo } from 'react';\nimport { Button, Input, Form, ButtonProps, Row, Col, TableColumns } from 'uiw';\nimport Skeleton from '../Skeleton';\nimport Table from './BaseTable';\nimport BaseForm from './BaseForm';\nimport { StoreCtx } from './hooks';\nimport { useTableData } from './useTable';\n\n// interface BtnItem extends ButtonProps{\n//   label: React.ReactNode;\n// };\ninterface ProtableProps {\n  table: useTableData;\n  btns?: Array<ButtonProps>;\n  columns: FormCol[];\n}\n\nexport interface FormCol extends TableColumns {\n  props?: {\n    widget:\n      | 'input'\n      | 'radio'\n      | 'checkbox'\n      | 'switch'\n      | 'select'\n      | 'textarea'\n      | 'dateInput'\n      | 'timePicker'\n      | 'searchSelect'\n      | 'monthPicker';\n    [key: string]: any;\n  };\n}\n\nconst ProTabel: React.FC<ProtableProps> = ({ table, columns, btns = [] }) => {\n  const {\n    key,\n    data,\n    reset,\n    refersh,\n    updateStore,\n    formatData,\n    query,\n    searchValues,\n    loading,\n    onSearch,\n  } = table;\n\n  const store = useMemo(\n    () => ({\n      data: [],\n      reset,\n      refersh,\n      key,\n      updateStore,\n      formatData,\n      query,\n      searchValues,\n      onSearch,\n    }),\n    [\n      JSON.stringify(data),\n      reset,\n      refersh,\n      key,\n      updateStore,\n      formatData,\n      query,\n      JSON.stringify(searchValues),\n      onSearch,\n    ],\n  );\n\n  console.log('loading--->', loading);\n  return (\n    <StoreCtx.Provider value={store}>\n      <Skeleton loading={loading}>\n        {/* 表单查询区域 */}\n        <BaseForm columns={columns} />\n        {/* 操作区域 */}\n        {btns.length > 0 && (\n          <div style={{ marginTop: 14, background: '#fff', padding: 10 }}>\n            {btns.map((btn: any, idx) => (\n              <Button key={idx.toString()} style={{ marginRight: 5 }} {...btn}>\n                {btn.label}\n              </Button>\n            ))}\n          </div>\n        )}\n\n        {/* 列表组件 */}\n        <Table columns={columns} />\n      </Skeleton>\n    </StoreCtx.Provider>\n  );\n};\n\nexport default ProTabel;\n","import { useRef, useState } from 'react'\n\ntype Result = {\n  total: number,\n  data:  Record<string, string | number | JSX.Element>[];\n}\n\ntype Params = {\n  formatData?: (res: any) => Result,\n  query?: (pageIndex: number, searchValues: object) => ({\n    [key: string]: any\n  })\n}\n\nexport interface useTableData extends Params {\n  data:  Record<string, string | number | JSX.Element>[]\n  total: number\n  key: string\n  reset: () => void\n  refersh: () => void\n  onSearch: () => void\n  updateStore: (p: stateParams) => void\n  searchValues: object,\n  loading: boolean\n}\n\nexport type stateParams = {\n  data?:  Record<string, string | number | JSX.Element>[],\n  total?: number,\n  selectChecked?: [],\n  selectCheckedRows?: [],\n}\n\nconst useTable = (key: string, params: Params = {}): useTableData => {\n\n  const { formatData, query } = params\n\n\n  const [state, setState] = useState<any>({\n     // 总页数\n    total: 1,\n    // 当前table数据源\n    data: [],\n    // 选中的行\n    selectChecked: [],\n    selectCheckedRows: [],\n    // 表单值\n    searchValues: {},\n    // 加载状态\n    loading: false,\n  });\n  // 更新store\n  const updateStore = (datas: stateParams) => {\n    setState({\n      ...state,\n      ...datas,\n    })\n  }\n\n  // 重置\n  const reset = () => {\n\n  }\n  // 刷新当前页数据\n  const refersh = () => {\n\n  }\n  // 点击查询\n  const onSearch = () => {\n\n  }\n\n  return {\n    key,\n    // 重置\n    reset,\n    // 刷新当前页数据\n    refersh,\n    // 点击查询\n    onSearch,\n    formatData,\n    query,\n    updateStore,\n    ...state,\n  }\n}\n\n\nexport default useTable","import React, { memo } from 'react';\nimport { Drawer, Button, DrawerProps, Row, Col } from 'uiw';\n\n/**\n * ProDrawer 组件继承于https://uiwjs.github.io/#/components/drawer\n * @param {boolean} visible 显示隐藏\n * @param {string} title 标题\n * @param {()=>void} onClose 关闭事件\n * @param {number} width Drawer宽\n * @param {Array<{label?:string,onPress?:()=>void,show?:boolean,loading?:boolean}>} buttons 按钮集合(label:\"文本\",onPress:点击事件,show:是否展示)\n * @param {React.ReactNode} children\n * @returns\n */\n\ninterface ButtonItemsProps {\n  label?: string;\n  onPress?: () => void;\n  show?: boolean;\n  size?: 'large' | 'default' | 'small';\n  type?: 'primary' | 'success' | 'warning' | 'danger' | 'light' | 'dark' | 'link';\n  loading?: boolean;\n  width?: number\n}\n\ninterface ProDrawerProps extends DrawerProps {\n  visible: boolean;\n  title?: string;\n  onClose?: any;\n  width?: number;\n  buttons?: Array<ButtonItemsProps>;\n  children?: React.ReactNode\n}\nfunction ProDrawer(props: ProDrawerProps) {\n  const { visible, title = '', onClose = null, width = 800, buttons = [], children, ...others } = props\n  return (\n    <Drawer\n      title={title}\n      isOpen={visible}\n      onClose={onClose && onClose}\n      size={width}\n      bodyStyle={{ padding: '0 10px 45px 10px' }}\n      {...others}\n      footer={\n        buttons.map(\n          ({ label = '', onPress, show = true, loading, type = \"primary\", width = 60, size = \"default\" }, idx) =>\n            show && (\n              <Button\n                style={{ width: width }}\n                key={idx}\n                type={type}\n                size={size}\n                onClick={onPress && onPress}\n                loading={loading}\n              >\n                {label}\n              </Button>\n            )\n        )\n      }\n    >\n      {children}\n    </Drawer>\n  );\n}\n\nexport default memo(ProDrawer);\n"],"names":["labelName","name","type","render","initValue","rules","options","attributes","onItemChange","control","trigger","useController","defaultValue","field","onChange","onBlur","value","ref","style","flex","event","placeholder","map","disabled","label","formDatas","span","errors","className","gridTemplateColumns","item","clsLabel","filter","Boolean","join","trim","childrenProps","children","hide","fixed","paddingTop","paddingRight","paddingLeft","fontWeight","color","message","isObject","data","Object","prototype","toString","call","slice","toLowerCase","Index","props","useForm","getValues","setValue","formState","reset","setError","clearErrors","defaultOptions","submitErrorCheck","processValuesFunc","setOptions","useImperativeHandle","keys","length","values","error","formDomProps","title","marginBottom","React","NewCheckBox","forwardRef","updateData","formRef","useRef","dispatch","useDispatch","useSelector","state","demo","drawerVisible","tableType","queryInfo","width","visible","onClose","buttons","onPress","current","console","log","QuickForm","firstName","required","lastName","select","attr","payload","table","useTable","selectPage","formatData","total","rows","query","pageIndex","page","pageSize","handleEditTable","record","isView","id","btns","onClick","bind","columns","key","widget","initialValue","widgetProps","preIcon","option","text","rowData","size","selectById","params","request","method","body","loading","display","bgColor","StoreCtx","createContext","useStore","useContext","useState","store","searchValues","defaultValues","useMemo","defaultSearchValues","col","JSON","isFirstMountRef","formatQuery","useCallback","useSWR","revalidateOnFocus","isValidating","onSearch","setPageIndex","onPageChange","useEffect","stores","updateStore","setPrevData","prevData","footer","divider","others","opt","widgets","input","radio","checkbox","switch","searchSelect","textarea","dateInput","timePicker","monthPicker","MonthPicker","getFormFields","fields","Widget","background","paddingBottom","resetOnSubmit","onSubmit","onFormSearch","initial","onSubmitError","resetForm","gutter","marginTop","htmlType","refersh","Provider","padding","marginRight","btn","idx","selectChecked","selectCheckedRows","datas","setState","ProDrawer","isOpen","bodyStyle","show","memo"],"sourceRoot":""}