{"version":3,"sources":["components/CountDown/index.js","routes/Component/CountDown/index.js"],"names":["fillZero","num","hours","minutes","CountDown","props","current","Date","now","target","getValidDate","timeleft","state","interval","param","Object","prototype","toString","call","getTime","time","e","Error","tick","nextProps","clear","timer","setInterval","count","clearInterval","onEnd","setState","h","Math","floor","m","s","format","className","cls","countdown","_timeleft","propTypes","oneOfType","instanceOf","number","string","defaultProps","console","log"],"mappings":"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","file":"85ca4797925fc15310e0d7d61e423718.map","sourcesContent":["import React, { Component } from 'react';\nimport classNames from 'classnames';\nimport { Avatar, Tooltip } from 'uiw';\nimport PropTypes from 'prop-types';\nimport styles from './index.less';\n\nconst fillZero = (num) => num < 10 ? `0${num}` : num;\n\nconst hours = 60 * 60 * 1000;\nconst minutes = 60 * 1000;\n\nexport default class CountDown extends Component {\n  constructor(props) {\n    super(props);\n    const current = Date.now();\n    const target = this.getValidDate(props.target);\n    let timeleft = target - current;\n    this.state = {\n      current,\n      target,\n      timeleft\n    };\n    this.interval = props.interval;\n  }\n\n  getValidDate(param) {\n    try {\n      if (Object.prototype.toString.call(param) === '[object Date]') {\n        return param.getTime();\n      } else {\n        let time = new Date(param).getTime()\n        return time;\n      }\n    } catch (e) {\n      throw new Error('invalid target prop', e);\n    }\n  }\n\n  componentDidMount() {\n    this.tick();\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (this.getValidDate(this.props.target) !== this.getValidDate(nextProps.target)) {\n      this.clear();\n      this.tick();\n    }\n  }\n\n  componentWillUnmount() {\n    this.clear();\n  }\n\n  tick() {\n    this.timer = setInterval(() => { this.count() }, this.interval);\n  }\n\n  clear() {\n    this.timer && clearInterval(this.timer);\n  }\n\n  count() {\n    const { onEnd } = this.props;\n    const { timeleft } = this.state;\n    if (timeleft > this.interval) {\n      this.setState({ timeleft: timeleft - this.interval })\n    } else {\n      this.setState({ timeleft: 0 }, this.clear)\n      onEnd && onEnd();\n    }\n  }\n\n  format(timeleft) {\n    const h = fillZero(Math.floor(timeleft / hours));\n    const m = fillZero(Math.floor((timeleft - (h * hours)) / minutes));\n    const s = fillZero(Math.floor((timeleft - (h * hours) - (m * minutes)) / 1000));\n    return `${h}:${m}:${s}`;\n  }\n\n  render() {\n    const { format, className } = this.props;\n    const { timeleft } = this.state;\n    const cls = classNames(styles.countdown, {\n      [className]: className\n    })\n    // 负数处理\n    let _timeleft = timeleft > 0 ? timeleft : 0;\n\n    return (<span className={cls}>{format ? format(_timeleft) : this.format(_timeleft)}</span>)\n  }\n}\n\nCountDown.propTypes = {\n  target: PropTypes.oneOfType([PropTypes.instanceOf(Date), PropTypes.number, PropTypes.string]),\n  interval: PropTypes.number\n}\n\nCountDown.defaultProps = {\n  interval: 1000\n}\n\n","import React, { Component } from 'react';\nimport CountDown from '../../../components/CountDown';\nimport PageHeaderLayout from '../../../layouts/PageHeaderLayout';\n\nconst time = Date.now() + 26400000;\n\nexport default () => (\n  <PageHeaderLayout title=\"倒计时\" content=\"倒计时组件。\">\n    <CountDown\n      onEnd={() => {\n        console.log('onEnd')\n      }}\n      target={time}\n      className=\"my-countdown\"\n    />\n  </PageHeaderLayout>\n);"]}