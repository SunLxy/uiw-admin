{"version":3,"file":"547.js","mappings":"4NAIe,SAASA,IACtB,IAAMC,GAAQC,EAAAA,EAAAA,IAAS,eAAgB,CAErCC,WAAY,SAACC,GACX,MAAO,CACLC,MAAOD,EAAKC,MACZD,KAAMA,EAAKA,OAIfE,MAAO,SAACC,EAAWC,GACjB,MAAO,CACLC,KAAMF,EACNG,SAAU,GACVN,KAAMI,MAKZ,GAAsBG,EAAAA,EAAAA,UAAS,IAA/B,eAAOC,EAAP,KAAYC,EAAZ,KAEA,ECjBF,SAAiBD,GACf,OAAwBE,EAAAA,EAAAA,IAAO,kBAAD,OAAmBF,IAAzCR,EAAR,EAAQA,KAAMW,EAAd,EAAcA,MAEd,MAAO,CACLC,KAAI,OAAEZ,QAAF,IAAEA,OAAF,EAAEA,EAAMA,KACZa,WAAYF,IAAUX,EACtBc,QAASH,GDWsBI,CAAQP,GAAzC,IAAQI,KAAAA,OAAR,MAAe,GAAf,EAAmBC,EAAnB,EAAmBA,UAQnB,OACE,SAAC,KAAD,CACEG,KAAM,CAAC,CAAEC,MAAO,eAAMC,KAAM,WAAY,CAAED,MAAO,eAAOE,QAAStB,EAAMuB,WACvEvB,MAAOA,EACPwB,QAAS,CACP,CACEC,MAAO,eACPC,IAAK,OACLC,MAAO,CACLC,OAAQ,QACRC,aAAc,MAEdC,YAAa,CACXC,QAAS,OACTC,YAAa,oCAInB,CACEP,MAAO,eACPC,IAAK,MACLO,MAAO,GACPN,MAAO,CACLC,OAAQ,SACRM,OAAQ,CACN,CAAEd,MAAO,KAAMe,MAAO,IACtB,CAAEf,MAAO,KAAMe,MAAO,OAI5B,CACEV,MAAO,eACPC,IAAK,OACLC,MAAO,CACLP,MAAO,2BACPM,IAAK,gBACLE,OAAQ,aAGZ,CACEH,MAAO,SACPC,IAAK,SACLC,MAAO,CACLC,OAAQ,WAGZ,CACEH,MAAO,aACPC,IAAK,aACLC,MAAO,CACLC,OAAQ,eAGZ,CACEH,MAAO,aACPC,IAAK,cACLC,MAAO,CACLC,OAAQ,eAGZ,CACEH,MAAO,cACPC,IAAK,cACLC,MAAO,CACLC,OAAQ,gBAGZ,CACEH,MAAO,YACPC,IAAK,YACLC,MAAO,CACLC,OAAQ,cAGZ,CACEH,MAAO,QACPC,IAAK,QACLC,MAAO,CACLC,OAAQ,QACRM,OAAQ,CACN,CAAEd,MAAO,SAAKe,MAAO,OACrB,CAAEf,MAAO,SAAKe,MAAO,WAI3B,CACEV,MAAO,eACPC,IAAK,OACLO,MAAO,GACPN,MAAO,CACLC,OAAQ,eACRE,YAAa,CACXM,YAAY,EACZJ,YAAa,iCACbK,YAAY,EACZC,QAAStB,EACTkB,OAAQnB,EACRQ,SAvGS,SAACZ,GACpBC,EAAOD","sources":["webpack://@examples/base/./src/pages/TableList/index.tsx","webpack://@examples/base/./src/queries/index.ts"],"sourcesContent":["import React, { useState } from 'react';\nimport { ProTable, useTable } from '@uiw-admin/components';\nimport { useCity } from '../../queries'\n\nexport default function Demo() {\n  const table = useTable('/api/getData', {\n    // 格式化接口返回的数据，必须返回{total 总数, data: 列表数据}的格式\n    formatData: (data) => {\n      return {\n        total: data.total,\n        data: data.data,\n      };\n    },\n    // 格式化查询参数 会接收到pageIndex 当前页  searchValues 表单数据\n    query: (pageIndex, searchValues) => {\n      return {\n        page: pageIndex,\n        pageSize: 10,\n        data: searchValues,\n      };\n    },\n  });\n\n  const [val, setVal] = useState('')\n\n  const { city = [], isLoading } = useCity(val)\n\n  const handleSearch = (val: string) => {\n    setVal(val)\n\n  }\n\n\n  return (\n    <ProTable\n      btns={[{ label: '新增', type: 'primary'}, { label: '重置',  onClick: table.onSearch }]}\n      table={table}\n      columns={[\n        {\n          title: '名字',\n          key: 'name',\n          props: {\n            widget: 'input',\n            initialValue: 'zzz',\n            // 组件属性\n            widgetProps: {\n              preIcon: 'user',\n              placeholder: '输入用户名',\n            },\n          },\n        },\n        {\n          title: '年龄',\n          key: 'age',\n          width: 50,\n          props: {\n            widget: 'select',\n            option: [\n              { label: '20', value: 20 },\n              { label: '10', value: 10 },\n            ],\n          },\n        },\n        {\n          title: '地址',\n          key: 'info',\n          props: {\n            label: '详细地址',\n            key: 'detailAddress',\n            widget: 'textarea',\n          },\n        },\n        {\n          title: 'Switch',\n          key: 'Switch',\n          props: {\n            widget: 'switch',\n          },\n        },\n        {\n          title: 'timePicker',\n          key: 'timePicker',\n          props: {\n            widget: 'timePicker',\n          },\n        },\n        {\n          title: 'timePicker',\n          key: 'timePicker1',\n          props: {\n            widget: 'timePicker',\n          },\n        },\n        {\n          title: 'MonthPicker',\n          key: 'MonthPicker',\n          props: {\n            widget: 'monthPicker',\n          },\n        },\n        {\n          title: 'DateInput',\n          key: 'DateInput',\n          props: {\n            widget: 'dateInput',\n          },\n        },\n        {\n          title: 'Radio',\n          key: 'Radio',\n          props: {\n            widget: 'radio',\n            option: [\n              { label: '男', value: 'man' },\n              { label: '女', value: 'girl' },\n            ],\n          },\n        },\n        {\n          title: '家乡',\n          key: 'city',\n          width: 50,\n          props: {  \n            widget: 'searchSelect',\n            widgetProps: {\n              allowClear: true,\n              placeholder: \"请输入选择\",\n              showSearch: true,\n              loading: isLoading,\n              option: city,\n              onSearch: handleSearch,\n\n            },\n          },\n        },\n      ]}\n    />\n  );\n}\n","import useSWR from \"swr\";\n\n// 公共接口数据 重复数据hooks 都建在此文件夹\n// 利用swr复用接口数据，各个页面都可用\n// https://swr.vercel.app/zh-CN/docs/getting-started#%E5%8F%AF%E5%A4%8D%E7%94%A8%E7%BB%84%E4%BB%B6\n\n\n// 模糊获取城市接口\nfunction useCity(val: string) {\n  const { data, error } = useSWR(`/api/city/?val=${val}`)\n\n  return {\n    city: data?.data,\n    isLoading: !error && !data,\n    isError: error,\n  }\n}\n\n\nexport {\n  useCity\n}"],"names":["Demo","table","useTable","formatData","data","total","query","pageIndex","searchValues","page","pageSize","useState","val","setVal","useSWR","error","city","isLoading","isError","useCity","btns","label","type","onClick","onSearch","columns","title","key","props","widget","initialValue","widgetProps","preIcon","placeholder","width","option","value","allowClear","showSearch","loading"],"sourceRoot":""}